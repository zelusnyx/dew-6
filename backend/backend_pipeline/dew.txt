scenario
    actor0 start_log
    actor1 start_log
    actor0 restart_server
    actor0 start_detector
    wait t0 actor1 legitimate
    wait t1 actor2 attack
    wait t2 actor2 stop_attack emit stop_attack_done
    when stop_attack_done wait t3 actor1 stop_legitimate emit stop_legitimate_done
    when stop_legitimate_done actor0 stop_python emit stop_python_done
    when stop_python_done actor0 ipset emit ipset_done
    when ipset_done actor0 stop_tcpdump emit stop_tcpdump_done
    when stop_tcpdump_done actor1 stop_tcpdump emit stop_tcpdump_done
bindings
    stop_python sudo pkill -9 python
    stop_tcpdump sudo pkill -9 tcpdump
    ipset sudo ipset list blacklist > /zfs/FRADE/blacklist.$1.$2.$3.$ms
    attack cd ~/frade/traffic/flood_attacker/; sudo python3 attack.py -s $1 -n $2 -u ../urls/urls-$1.txt &
    start_detector cd ~/frade/experiments/run; sudo bash start_detector.sh \"$modules $m4\"
    stop_attack sudo pkill -9 python3
    restart_server cd ~/frade/experiments/run/; sudo bash restart_server.sh
    stop_legitimate sudo killall python3.4
    legitimate sudo python3.4 ~/frade/traffic/smart_attacker/legitimate.py -s $1 --sessions 100 --logs /proj/FRADE/MTurk/Normalized-logs/$1-new.log 2>&1> output &
    start_log cd ~/frade/experiments/run/; sudo bash start_log.sh legitimate.$1.$2.$3.$ms
    stop_attack_done NOT EXIST_PROCESS(attack.py)
    stop_legitimate_done NOT EXIST_PROCESS(legitimate.py)
    stop_python_done NOT EXIST_PROCESS(python)
    ipset_done ipset list blacklist | wc = 4
    tcpdump_done NOT EXIST_PROCESS(tcpdump)