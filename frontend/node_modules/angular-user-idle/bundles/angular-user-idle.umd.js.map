{"version":3,"file":"angular-user-idle.umd.js.map","sources":["ng://angular-user-idle/lib/angular-user-idle.config.ts","ng://angular-user-idle/lib/angular-user-idle.service.ts","ng://angular-user-idle/lib/angular-user-idle.module.ts"],"sourcesContent":["export class UserIdleConfig {\n  /**\n   * Idle value in seconds.\n   */\n  idle?: number;\n  /**\n   * Timeout value in seconds.\n   */\n  timeout?: number;\n  /**\n   * Ping value in seconds.\n   */\n  ping?: number;\n  /**\n   * IdleSensitivity time that activity must remain below the idle detection threshold before\n   * idle buffer timer count user's activity actions, in seconds.\n   */\n  idleSensitivity?: number;\n}\n","import { Injectable, NgZone, Optional } from '@angular/core';\nimport {\n  from,\n  fromEvent,\n  interval,\n  merge,\n  Observable,\n  of,\n  Subject,\n  Subscription,\n  timer\n} from 'rxjs';\nimport {\n  bufferTime,\n  distinctUntilChanged,\n  filter,\n  finalize,\n  map,\n  scan,\n  switchMap,\n  take,\n  takeUntil,\n  tap\n} from 'rxjs/operators';\nimport { UserIdleConfig } from './angular-user-idle.config';\n\n/**\n * User's idle service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserIdleService {\n  ping$: Observable<any>;\n\n  /**\n   * Events that can interrupts user's inactivity timer.\n   */\n  protected activityEvents$: Observable<any>;\n\n  protected timerStart$ = new Subject<boolean>();\n  protected idleDetected$ = new Subject<boolean>();\n  protected timeout$ = new Subject<boolean>();\n  protected idle$: Observable<any>;\n  protected timer$: Observable<any>;\n  /**\n   * Idle value in milliseconds.\n   * Default equals to 10 minutes.\n   */\n  protected idleMillisec = 600 * 1000;\n  /**\n   * Idle buffer wait time milliseconds to collect user action\n   * Default equals to 1 Sec.\n   */\n  protected idleSensitivityMillisec = 1000;\n  /**\n   * Timeout value in seconds.\n   * Default equals to 5 minutes.\n   */\n  protected timeout = 300;\n  /**\n   * Ping value in milliseconds.\n   * Default equals to 2 minutes.\n   */\n  protected pingMillisec = 120 * 1000;\n  /**\n   * Timeout status.\n   */\n  protected isTimeout: boolean;\n  /**\n   * Timer of user's inactivity is in progress.\n   */\n  protected isInactivityTimer: boolean;\n  protected isIdleDetected: boolean;\n\n  protected idleSubscription: Subscription;\n\n  constructor(@Optional() config: UserIdleConfig, private _ngZone: NgZone) {\n    if (config) {\n      this.setConfig(config);\n    }\n  }\n\n  /**\n   * Start watching for user idle and setup timer and ping.\n   */\n  startWatching() {\n    if (!this.activityEvents$) {\n      this.activityEvents$ = merge(\n        fromEvent(window, 'mousemove'),\n        fromEvent(window, 'resize'),\n        fromEvent(document, 'keydown')\n      );\n    }\n\n    this.idle$ = from(this.activityEvents$);\n\n    if (this.idleSubscription) {\n      this.idleSubscription.unsubscribe();\n    }\n\n    // If any of user events is not active for idle-seconds when start timer.\n    this.idleSubscription = this.idle$\n      .pipe(\n        bufferTime(this.idleSensitivityMillisec), // Starting point of detecting of user's inactivity\n        filter(\n          arr => !arr.length && !this.isIdleDetected && !this.isInactivityTimer\n        ),\n        tap(() => {\n          this.isIdleDetected = true;\n          this.idleDetected$.next(true);\n        }),\n        switchMap(() =>\n          this._ngZone.runOutsideAngular(() =>\n            interval(1000).pipe(\n              takeUntil(\n                merge(\n                  this.activityEvents$,\n                  timer(this.idleMillisec).pipe(\n                    tap(() => {\n                      this.isInactivityTimer = true;\n                      this.timerStart$.next(true);\n                    })\n                  )\n                )\n              ),\n              finalize(() => {\n                this.isIdleDetected = false;\n                this.idleDetected$.next(false);\n              })\n            )\n          )\n        )\n      )\n      .subscribe();\n\n    this.setupTimer(this.timeout);\n    this.setupPing(this.pingMillisec);\n  }\n\n  stopWatching() {\n    this.stopTimer();\n    if (this.idleSubscription) {\n      this.idleSubscription.unsubscribe();\n    }\n  }\n\n  stopTimer() {\n    this.isInactivityTimer = false;\n    this.timerStart$.next(false);\n  }\n\n  resetTimer() {\n    this.stopTimer();\n    this.isTimeout = false;\n  }\n\n  /**\n   * Return observable for timer's countdown number that emits after idle.\n   */\n  onTimerStart(): Observable<number> {\n    return this.timerStart$.pipe(\n      distinctUntilChanged(),\n      switchMap(start => (start ? this.timer$ : of(null)))\n    );\n  }\n\n  /**\n   * Return observable for idle status changed\n   */\n  onIdleStatusChanged(): Observable<boolean> {\n    return this.idleDetected$.asObservable();\n  }\n\n  /**\n   * Return observable for timeout is fired.\n   */\n  onTimeout(): Observable<boolean> {\n    return this.timeout$.pipe(\n      filter(timeout => !!timeout),\n      tap(() => (this.isTimeout = true)),\n      map(() => true)\n    );\n  }\n\n  getConfigValue(): UserIdleConfig {\n    return {\n      idle: this.idleMillisec,\n      idleSensitivity: this.idleSensitivityMillisec,\n      timeout: this.timeout,\n      ping: this.pingMillisec\n    };\n  }\n\n  /**\n   * Set config values.\n   * @param config\n   */\n  setConfigValues(config: UserIdleConfig) {\n    if (this.idleSubscription && !this.idleSubscription.closed) {\n      console.error('Call stopWatching() before set config values');\n      return;\n    }\n\n    this.setConfig(config);\n  }\n\n  private setConfig(config: UserIdleConfig) {\n    if (config.idle) {\n      this.idleMillisec = config.idle * 1000;\n    }\n    if (config.ping) {\n      this.pingMillisec = config.ping * 1000;\n    }\n    if (config.idleSensitivity) {\n      this.idleSensitivityMillisec = config.idleSensitivity * 1000;\n    }\n    if (config.timeout) {\n      this.timeout = config.timeout;\n    }\n  }\n\n  /**\n   * Set custom activity events\n   *\n   * @param customEvents Example: merge(\n   *   fromEvent(window, 'mousemove'),\n   *   fromEvent(window, 'resize'),\n   *   fromEvent(document, 'keydown'),\n   *   fromEvent(document, 'touchstart'),\n   *   fromEvent(document, 'touchend')\n   * )\n   */\n  setCustomActivityEvents(customEvents: Observable<any>) {\n    if (this.idleSubscription && !this.idleSubscription.closed) {\n      console.error('Call stopWatching() before set custom activity events');\n      return;\n    }\n\n    this.activityEvents$ = customEvents;\n  }\n\n  /**\n   * Setup timer.\n   *\n   * Counts every seconds and return n+1 and fire timeout for last count.\n   * @param timeout Timeout in seconds.\n   */\n  protected setupTimer(timeout: number) {\n    this._ngZone.runOutsideAngular(() => {\n      this.timer$ = interval(1000).pipe(\n        take(timeout),\n        map(() => 1),\n        scan((acc, n) => acc + n),\n        tap(count => {\n          if (count === timeout) {\n            this.timeout$.next(true);\n          }\n        })\n      );\n    });\n  }\n\n  /**\n   * Setup ping.\n   *\n   * Pings every ping-seconds only if is not timeout.\n   * @param pingMillisec\n   */\n  protected setupPing(pingMillisec: number) {\n    this.ping$ = interval(pingMillisec).pipe(filter(() => !this.isTimeout));\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { UserIdleConfig } from './angular-user-idle.config';\n\n@NgModule({\n  imports: []\n})\nexport class UserIdleModule {\n  static forRoot(config: UserIdleConfig): ModuleWithProviders {\n    return {\n      ngModule: UserIdleModule,\n      providers: [\n        {provide: UserIdleConfig, useValue: config}\n      ]\n    };\n  }\n}\n"],"names":["Subject","merge","fromEvent","from","bufferTime","filter","tap","switchMap","interval","takeUntil","timer","finalize","distinctUntilChanged","of","map","take","scan","Injectable","Optional","NgZone","NgModule"],"mappings":"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"}
