{"version":3,"file":"angularx-social-login.js","sources":["../../../projects/lib/src/entities/base-login-provider.ts","../../../projects/lib/src/entities/social-user.ts","../../../projects/lib/src/providers/google-login-provider.ts","../../../projects/lib/src/socialauth.service.ts","../../../projects/lib/src/sociallogin.module.ts","../../../projects/lib/src/providers/dummy-login-provider.ts","../../../projects/lib/src/providers/facebook-login-provider.ts","../../../projects/lib/src/providers/amazon-login-provider.ts","../../../projects/lib/src/providers/vk-login-provider.ts","../../../projects/lib/src/providers/microsoft-login-provider.ts","../../../projects/lib/src/angularx-social-login.ts"],"names":[],"mappings":"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","sourcesContent":["import { LoginProvider } from './login-provider';\nimport { SocialUser } from './social-user';\n\nexport abstract class BaseLoginProvider implements LoginProvider {\n  constructor() {}\n\n  abstract initialize(): Promise<void>;\n  abstract getLoginStatus(): Promise<SocialUser>;\n  abstract signIn(): Promise<SocialUser>;\n  abstract signOut(revoke?: boolean): Promise<void>;\n\n  protected loadScript(\n    id: string,\n    src: string,\n    onload: any,\n    parentElement = null\n  ): void {\n    // get document if platform is only browser\n    if (typeof document !== 'undefined' && !document.getElementById(id)) {\n      let signInJS = document.createElement('script');\n\n      signInJS.async = true;\n      signInJS.src = src;\n      signInJS.onload = onload;\n\n      if (!parentElement) {\n        parentElement = document.head;\n      }\n\n      parentElement.appendChild(signInJS);\n    }\n  }\n}\n","export class SocialUser {\n  provider: string;\n  id: string;\n  email: string;\n  name: string;\n  photoUrl: string;\n  firstName: string;\n  lastName: string;\n  authToken: string;\n\n  idToken: string; // Reference https://developers.google.com/identity/sign-in/web/backend-auth\n  authorizationCode: string; // Reference https://developers.google.com/identity/sign-in/web/reference#googleauthgrantofflineaccessoptions\n\n  response: any;\n}\n","import { BaseLoginProvider } from '../entities/base-login-provider';\nimport { SocialUser } from '../entities/social-user';\n\ndeclare let gapi: any;\n\nexport class GoogleLoginProvider extends BaseLoginProvider {\n  public static readonly PROVIDER_ID: string = 'GOOGLE';\n\n  protected auth2: any;\n\n  constructor(\n    private clientId: string,\n    private initOptions: any = { scope: 'email' }\n  ) {\n    super();\n  }\n\n  initialize(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      try {\n        this.loadScript(\n          GoogleLoginProvider.PROVIDER_ID,\n          'https://apis.google.com/js/platform.js',\n          () => {\n            gapi.load('auth2', () => {\n              this.auth2 = gapi.auth2.init({\n                ...this.initOptions,\n                client_id: this.clientId,\n              });\n\n              this.auth2\n                .then(() => {\n                  resolve();\n                })\n                .catch((err: any) => {\n                  reject(err);\n                });\n            });\n          }\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  getLoginStatus(loginStatusOptions?: any): Promise<SocialUser> {\n    const options = {...this.initOptions, ...loginStatusOptions};\n\n    return new Promise((resolve, reject) => {\n      if (this.auth2.isSignedIn.get()) {\n        let user: SocialUser = new SocialUser();\n\n        const profile = this.auth2.currentUser.get().getBasicProfile();\n        const authResponse = this.auth2.currentUser.get().getAuthResponse(true);  // get complete authResponse object\n        user.id = profile.getId();\n        user.name = profile.getName();\n        user.email = profile.getEmail();\n        user.photoUrl = profile.getImageUrl();\n        user.firstName = profile.getGivenName();\n        user.lastName = profile.getFamilyName();\n        user.response = authResponse;\n\n        const resolveUser = authResponse => {\n          user.authToken = authResponse.access_token;\n          user.idToken = authResponse.id_token;\n\n          resolve(user);\n        };\n\n        if (options.refreshToken) {\n          this.auth2.currentUser.get().reloadAuthResponse().then(resolveUser);\n        } else {\n          const authResponse = this.auth2.currentUser.get().getAuthResponse(true);\n          resolveUser(authResponse);\n        }\n      } else {\n        reject(\n          `No user is currently logged in with ${GoogleLoginProvider.PROVIDER_ID}`\n        );\n      }\n    });\n  }\n\n  signIn(signInOptions?: any): Promise<SocialUser> {\n    const options = { ...this.initOptions, ...signInOptions };\n\n    return new Promise((resolve, reject) => {\n      const offlineAccess: boolean = options && options.offline_access;\n      let promise = !offlineAccess\n        ? this.auth2.signIn(signInOptions)\n        : this.auth2.grantOfflineAccess(signInOptions);\n\n      promise\n        .then(\n          (response: any) => {\n            let user: SocialUser = new SocialUser();\n\n            if (response && response.code) {\n              user.authorizationCode = response.code;\n            } else {\n              let profile = this.auth2.currentUser.get().getBasicProfile();\n              let authResponse = this.auth2.currentUser.get().getAuthResponse(true);\n\n              let token = authResponse.access_token;\n              let backendToken = authResponse.id_token;\n\n              user.id = profile.getId();\n              user.name = profile.getName();\n              user.email = profile.getEmail();\n              user.photoUrl = profile.getImageUrl();\n              user.firstName = profile.getGivenName();\n              user.lastName = profile.getFamilyName();\n              user.authToken = token;\n              user.idToken = backendToken;\n\n              user.response = authResponse;\n            }\n\n            resolve(user);\n          },\n          (closed: any) => {\n            reject(closed);\n          }\n        )\n        .catch((err: any) => {\n          reject(err);\n        });\n    });\n  }\n\n  signOut(revoke?: boolean): Promise<void> {\n    return new Promise((resolve, reject) => {\n      let signOutPromise: Promise<any>;\n\n      if (revoke) {\n        signOutPromise = this.auth2.disconnect();\n      } else {\n        signOutPromise = this.auth2.signOut();\n      }\n\n      signOutPromise\n        .then((err: any) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        })\n        .catch((err: any) => {\n          reject(err);\n        });\n    });\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { AsyncSubject, Observable, ReplaySubject } from 'rxjs';\nimport { LoginProvider } from './entities/login-provider';\nimport { SocialUser } from './entities/social-user';\nimport { GoogleLoginProvider } from './providers/google-login-provider';\n\n/**\n * An interface to define the shape of the service configuration options.\n */\nexport interface SocialAuthServiceConfig {\n  autoLogin?: boolean;\n  providers: { id: string; provider: LoginProvider }[];\n  onError?: (error: any) => any;\n}\n\n/**\n * The service encapsulating the social login functionality. Exposes methods like\n * `signIn`, `signOut`. Also, exposes an `authState` `Observable` that one can\n * subscribe to get the current logged in user information.\n *\n * @dynamic\n */\n@Injectable()\nexport class SocialAuthService {\n  private static readonly ERR_LOGIN_PROVIDER_NOT_FOUND =\n    'Login provider not found';\n  private static readonly ERR_NOT_LOGGED_IN = 'Not logged in';\n  private static readonly ERR_NOT_INITIALIZED =\n    'Login providers not ready yet. Are there errors on your console?';\n  private static readonly ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN =\n    'Chosen login provider is not supported for refreshing a token';\n\n  private providers: Map<string, LoginProvider> = new Map();\n  private autoLogin = false;\n\n  private _user: SocialUser = null;\n  private _authState: ReplaySubject<SocialUser> = new ReplaySubject(1);\n\n  /* Consider making this an enum comprising LOADING, LOADED, FAILED etc. */\n  private initialized = false;\n  private _initState: AsyncSubject<boolean> = new AsyncSubject();\n\n  /** An `Observable` that one can subscribe to get the current logged in user information */\n  get authState(): Observable<SocialUser> {\n    return this._authState.asObservable();\n  }\n\n  /** An `Observable` to communicate the readiness of the service and associated login providers */\n  get initState(): Observable<boolean> {\n    return this._initState.asObservable();\n  }\n\n  /**\n   * @param config A `SocialAuthServiceConfig` object or a `Promise` that resolves to a `SocialAuthServiceConfig` object\n   */\n  constructor(\n    @Inject('SocialAuthServiceConfig')\n    config: SocialAuthServiceConfig | Promise<SocialAuthServiceConfig>\n  ) {\n    if (config instanceof Promise) {\n      config.then((config) => {\n        this.initialize(config);\n      });\n    } else {\n      this.initialize(config);\n    }\n  }\n\n  private initialize(config: SocialAuthServiceConfig) {\n    this.autoLogin = config.autoLogin !== undefined ? config.autoLogin : false;\n    const { onError = console.error } = config;\n\n    config.providers.forEach((item) => {\n      this.providers.set(item.id, item.provider);\n    });\n\n    Promise.all(\n      Array.from(this.providers.values()).map((provider) =>\n        provider.initialize()\n      )\n    )\n      .then(() => {\n        if (this.autoLogin) {\n          const loginStatusPromises = [];\n          let loggedIn = false;\n\n          this.providers.forEach((provider: LoginProvider, key: string) => {\n            let promise = provider.getLoginStatus();\n            loginStatusPromises.push(promise);\n            promise\n              .then((user: SocialUser) => {\n                user.provider = key;\n\n                this._user = user;\n                this._authState.next(user);\n                loggedIn = true;\n              })\n              .catch(console.debug);\n          });\n          Promise.all(loginStatusPromises).catch(() => {\n            if (!loggedIn) {\n              this._user = null;\n              this._authState.next(null);\n            }\n          });\n        }\n      })\n      .catch((error) => {\n        onError(error);\n      })\n      .finally(() => {\n        this.initialized = true;\n        this._initState.next(this.initialized);\n        this._initState.complete();\n      });\n  }\n\n  refreshAuthToken(providerId: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (!this.initialized) {\n        reject(SocialAuthService.ERR_NOT_INITIALIZED);\n      } else if (providerId !== GoogleLoginProvider.PROVIDER_ID) {\n        reject(SocialAuthService.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN);\n      } else {\n        const providerObject = this.providers.get(providerId);\n        if (providerObject) {\n          providerObject\n            .getLoginStatus({ refreshToken: true })\n            .then((user: SocialUser) => {\n              user.provider = providerId;\n              this._user = user;\n              this._authState.next(user);\n              resolve();\n            })\n            .catch((err) => {\n              reject(err);\n            });\n        } else {\n          reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\n        }\n      }\n    });\n  }\n\n  /**\n   * A method used to sign in a user with a specific `LoginProvider`.\n   *\n   * @param providerId Id with which the `LoginProvider` has been registered with the service\n   * @param signInOptions Optional `LoginProvider` specific arguments\n   * @returns A `Promise` that resolves to the authenticated user information\n   */\n  signIn(providerId: string, signInOptions?: any): Promise<SocialUser> {\n    return new Promise((resolve, reject) => {\n      if (!this.initialized) {\n        reject(SocialAuthService.ERR_NOT_INITIALIZED);\n      } else {\n        let providerObject = this.providers.get(providerId);\n        if (providerObject) {\n          providerObject\n            .signIn(signInOptions)\n            .then((user: SocialUser) => {\n              user.provider = providerId;\n              resolve(user);\n\n              this._user = user;\n              this._authState.next(user);\n            })\n            .catch((err) => {\n              reject(err);\n            });\n        } else {\n          reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\n        }\n      }\n    });\n  }\n\n  /**\n   * A method used to sign out the currently loggen in user.\n   *\n   * @param revoke Optional parameter to specify whether a hard sign out is to be performed\n   * @returns A `Promise` that resolves if the operation is successful, rejects otherwise\n   */\n  signOut(revoke: boolean = false): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (!this.initialized) {\n        reject(SocialAuthService.ERR_NOT_INITIALIZED);\n      } else if (!this._user) {\n        reject(SocialAuthService.ERR_NOT_LOGGED_IN);\n      } else {\n        let providerId = this._user.provider;\n        let providerObject = this.providers.get(providerId);\n        if (providerObject) {\n          providerObject\n            .signOut(revoke)\n            .then(() => {\n              resolve();\n\n              this._user = null;\n              this._authState.next(null);\n            })\n            .catch((err) => {\n              reject(err);\n            });\n        } else {\n          reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\n        }\n      }\n    });\n  }\n}\n","import {\n  NgModule,\n  Optional,\n  SkipSelf,\n  ModuleWithProviders\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SocialAuthService, SocialAuthServiceConfig } from './socialauth.service';\n\n/**\n * The main module of angularx-social-login library.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    SocialAuthService\n  ]\n})\nexport class SocialLoginModule {\n  public static initialize(config: SocialAuthServiceConfig): ModuleWithProviders<SocialLoginModule> {\n    return {\n      ngModule: SocialLoginModule,\n      providers: [\n        SocialAuthService,\n        {\n          provide: 'SocialAuthServiceConfig',\n          useValue: config\n        }\n      ]\n    };\n  }\n\n  constructor(@Optional() @SkipSelf() parentModule: SocialLoginModule) {\n    if (parentModule) {\n      throw new Error(\n        'SocialLoginModule is already loaded. Import it in the AppModule only');\n    }\n  }\n}\n","import {BaseLoginProvider} from '../entities/base-login-provider';\nimport {SocialUser} from '../entities/social-user';\n\n\n// Simulates login / logout without actually requiring an Internet connection.\n//\n// Useful for certain development situations.\n//\n// For example, if you want to simulate the greatest football referee England has ever produced:\n//\n//  const dummyUser: SocialUser = {\n//     id: '0123456789',\n//     name: 'Howard Webb',\n//     email: 'howard@webb.com',\n//     firstName: 'Howard',\n//     lastName: 'Webb',\n//     authToken: 'dummyAuthToken',\n//     photoUrl: 'https://en.wikipedia.org/wiki/Howard_Webb#/media/File:Howard_Webb_march11.jpg',\n//     provider: 'DUMMY',\n//     idToken: 'dummyIdToken',\n//     authorizationCode: 'dummyAuthCode'\n// };\n//\n//  let config = new AuthServiceConfig([\n//  { ... },\n//  {\n//       id: DummyLoginProvider.PROVIDER_ID,\n//       provider: new DummyLoginProvider(dummyUser)  // Pass your user into the constructor\n//   },\n//  { ... }\n//  ]);\n\n\nexport class DummyLoginProvider extends BaseLoginProvider {\n  public static readonly PROVIDER_ID: string = 'DUMMY';\n\n  static readonly DEFAULT_USER = {\n    id: '1234567890',\n    name: 'Mickey Mouse',\n    email: 'mickey@mouse.com',\n    firstName: 'Mickey',\n    lastName: 'Mouse',\n    authToken: 'dummyAuthToken',\n    photoUrl: 'https://en.wikipedia.org/wiki/File:Mickey_Mouse.png',\n    provider: 'DUMMY',\n    idToken: 'dummyIdToken',\n    authorizationCode: 'dummyAuthCode',\n    response: {}\n  };\n\n  private dummy: SocialUser;\n\n  private loggedIn: boolean;\n\n  constructor(dummy?: SocialUser) {\n    super();\n    if (dummy) {\n      this.dummy = dummy;\n    } else {\n      this.dummy = DummyLoginProvider.DEFAULT_USER;\n    }\n\n    // Start not logged in\n    this.loggedIn = false;\n  }\n\n  getLoginStatus(): Promise<SocialUser> {\n    return new Promise((resolve, reject) => {\n      if (this.loggedIn) {\n        resolve(this.dummy);\n      } else {\n        reject('No user is currently logged in.');\n      }\n    });\n  }\n\n  initialize(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      resolve();\n    });\n  }\n\n  signIn(): Promise<SocialUser> {\n    return new Promise((resolve, reject) => {\n      this.loggedIn = true;\n      resolve(this.dummy);\n    });\n  }\n\n  signOut(revoke?: boolean): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.loggedIn = false;\n      resolve();\n    });\n  }\n}\n","import { BaseLoginProvider } from '../entities/base-login-provider';\nimport { SocialUser } from '../entities/social-user';\n\ndeclare let FB: any;\n\nexport class FacebookLoginProvider extends BaseLoginProvider {\n  public static readonly PROVIDER_ID: string = 'FACEBOOK';\n\n  constructor(\n    private clientId: string,\n    private initOptions: any = {\n      scope: 'email,public_profile',\n      locale: 'en_US',\n      fields: 'name,email,picture,first_name,last_name',\n      version: 'v4.0',\n    }\n  ) {\n    super();\n  }\n\n  initialize(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      try {\n        this.loadScript(\n          FacebookLoginProvider.PROVIDER_ID,\n          `//connect.facebook.net/${this.initOptions.locale}/sdk.js`,\n          () => {\n            FB.init({\n              appId: this.clientId,\n              autoLogAppEvents: true,\n              cookie: true,\n              xfbml: true,\n              version: this.initOptions.version,\n            });\n\n            resolve();\n          }\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  getLoginStatus(): Promise<SocialUser> {\n    return new Promise((resolve, reject) => {\n      FB.getLoginStatus((response: any) => {\n        if (response.status === 'connected') {\n          let authResponse = response.authResponse;\n          FB.api(`/me?fields=${this.initOptions.fields}`, (fbUser: any) => {\n            let user: SocialUser = new SocialUser();\n\n            user.id = fbUser.id;\n            user.name = fbUser.name;\n            user.email = fbUser.email;\n            user.photoUrl =\n              'https://graph.facebook.com/' +\n              fbUser.id +\n              '/picture?type=normal&access_token=' +\n              authResponse.accessToken;\n            user.firstName = fbUser.first_name;\n            user.lastName = fbUser.last_name;\n            user.authToken = authResponse.accessToken;\n\n            user.response = fbUser;\n\n            resolve(user);\n          });\n        } else {\n          reject(`No user is currently logged in with ${FacebookLoginProvider.PROVIDER_ID}`);\n        }\n      });\n    });\n  }\n\n  signIn(signInOptions?: any): Promise<SocialUser> {\n    const options = { ...this.initOptions, ...signInOptions };\n    return new Promise((resolve, reject) => {\n      FB.login((response: any) => {\n        if (response.authResponse) {\n          let authResponse = response.authResponse;\n          FB.api(`/me?fields=${options.fields}`, (fbUser: any) => {\n            let user: SocialUser = new SocialUser();\n\n            user.id = fbUser.id;\n            user.name = fbUser.name;\n            user.email = fbUser.email;\n            user.photoUrl =\n              'https://graph.facebook.com/' +\n              fbUser.id +\n              '/picture?type=normal';\n            user.firstName = fbUser.first_name;\n            user.lastName = fbUser.last_name;\n            user.authToken = authResponse.accessToken;\n\n            user.response = fbUser;\n\n            resolve(user);\n          });\n        } else {\n          reject('User cancelled login or did not fully authorize.');\n        }\n      }, options);\n    });\n  }\n\n  signOut(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      FB.logout((response: any) => {\n        resolve();\n      });\n    });\n  }\n}\n","import { BaseLoginProvider } from '../entities/base-login-provider';\nimport { SocialUser } from '../entities/social-user';\n\ndeclare let amazon: any, window: any;\n\nexport class AmazonLoginProvider extends BaseLoginProvider {\n  public static readonly PROVIDER_ID: string = 'AMAZON';\n\n  constructor(\n    private clientId: string,\n    private initOptions: any = {\n      scope: 'profile',\n      scope_data: {\n        profile: { essential: false },\n      },\n      redirect_uri: location.origin,\n    }\n  ) {\n    super();\n  }\n\n  initialize(): Promise<void> {\n    let amazonRoot = null;\n    if (document) {\n      amazonRoot = document.createElement('div');\n      amazonRoot.id = 'amazon-root';\n      document.body.appendChild(amazonRoot);\n    }\n\n    window.onAmazonLoginReady = () => {\n      amazon.Login.setClientId(this.clientId);\n    };\n\n    return new Promise((resolve, reject) => {\n      try {\n        this.loadScript(\n          'amazon-login-sdk',\n          'https://assets.loginwithamazon.com/sdk/na/login1.js',\n          () => {\n            resolve();\n          },\n          amazonRoot\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  getLoginStatus(): Promise<SocialUser> {\n    return new Promise((resolve, reject) => {\n      let token = this.retrieveToken();\n\n      if (token) {\n        amazon.Login.retrieveProfile(token, (response) => {\n          if (response.success) {\n            let user: SocialUser = new SocialUser();\n\n            user.id = response.profile.CustomerId;\n            user.name = response.profile.Name;\n            user.email = response.profile.PrimaryEmail;\n            user.response = response.profile;\n\n            resolve(user);\n          } else {\n            reject(response.error);\n          }\n        });\n      } else {\n        reject(`No user is currently logged in with ${AmazonLoginProvider.PROVIDER_ID}`);\n      }\n    });\n  }\n\n  signIn(signInOptions?: any): Promise<SocialUser> {\n    const options = { ...this.initOptions, ...signInOptions };\n    return new Promise((resolve, reject) => {\n      amazon.Login.authorize(options, (authResponse) => {\n        if (authResponse.error) {\n          reject(authResponse.error);\n        } else {\n          amazon.Login.retrieveProfile(\n            authResponse.access_token,\n            (response) => {\n              let user: SocialUser = new SocialUser();\n\n              user.id = response.profile.CustomerId;\n              user.name = response.profile.Name;\n              user.email = response.profile.PrimaryEmail;\n              user.authToken = authResponse.access_token;\n              user.response = response.profile;\n\n              this.persistToken(authResponse.access_token);\n\n              resolve(user);\n            }\n          );\n        }\n      });\n    });\n  }\n\n  signOut(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      try {\n        amazon.Login.logout();\n\n        this.clearToken();\n        resolve();\n      } catch (err) {\n        reject(err.message);\n      }\n    });\n  }\n\n  private persistToken(token: string): void {\n    localStorage.setItem(`${AmazonLoginProvider.PROVIDER_ID}_token`, token);\n  }\n\n  private retrieveToken(): string {\n    return localStorage.getItem(`${AmazonLoginProvider.PROVIDER_ID}_token`);\n  }\n\n  private clearToken(): void {\n    localStorage.removeItem(`${AmazonLoginProvider.PROVIDER_ID}_token`);\n  }\n}\n","import { BaseLoginProvider } from '../entities/base-login-provider';\nimport { SocialUser } from '../entities/social-user';\n\ndeclare let VK: any;\n\nexport class VKLoginProvider extends BaseLoginProvider {\n  constructor(\n    private clientId: string,\n    private initOptions: any = {\n      fields: 'photo_max,contacts',\n      version: '5.124',\n    }\n  ) {\n    super();\n  }\n\n  public static readonly PROVIDER_ID: string = 'VK';\n\n  private readonly VK_API_URL = '//vk.com/js/api/openapi.js';\n  private readonly VK_API_GET_USER = 'users.get';\n\n  initialize(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      try {\n        this.loadScript(\n          VKLoginProvider.PROVIDER_ID,\n          this.VK_API_URL,\n          () => {\n            VK.init({\n              apiId: this.clientId,\n            });\n\n            resolve();\n          }\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  getLoginStatus(): Promise<SocialUser> {\n    return new Promise<SocialUser>((resolve: any, reject: any) =>\n      this.getLoginStatusInternal(resolve, reject)\n    );\n  }\n\n  signIn(): Promise<SocialUser> {\n    return new Promise<SocialUser>((resolve: any, reject: any) =>\n      this.signInInternal(resolve, reject)\n    );\n  }\n\n  signOut(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      VK.Auth.logout((response: any) => {\n        resolve();\n      });\n    });\n  }\n\n  private signInInternal(resolve: any, reject: any) {\n    VK.Auth.login((loginResponse: any) => {\n      if (loginResponse.status === 'connected') {\n        this.getUser(\n          loginResponse.session.mid,\n          loginResponse.session.sid,\n          resolve\n        );\n      }\n    });\n  }\n\n  private getUser(userId: any, token: any, resolve: any) {\n    VK.Api.call(\n      this.VK_API_GET_USER,\n      {\n        user_id: userId,\n        fields: this.initOptions.fields,\n        v: this.initOptions.version,\n      },\n      (userResponse: any) => {\n        resolve(\n          this.createUser(\n            Object.assign({}, { token }, userResponse.response[0])\n          )\n        );\n      }\n    );\n  }\n\n  private getLoginStatusInternal(resolve: any, reject: any) {\n    VK.Auth.getLoginStatus((loginResponse: any) => {\n      if (loginResponse.status === 'connected') {\n        this.getUser(\n          loginResponse.session.mid,\n          loginResponse.session.sid,\n          resolve\n        );\n      }\n    });\n  }\n\n  private createUser(response: any): SocialUser {\n    const user: SocialUser = new SocialUser();\n    user.id = response.id;\n    user.name = `${response.first_name} ${response.last_name}`;\n    user.photoUrl = response.photo_max;\n    user.authToken = response.token;\n    return user;\n  }\n}\n","import { BaseLoginProvider } from '../entities/base-login-provider';\nimport { SocialUser } from '../entities/social-user';\n\n/**\n * Protocol modes supported by MSAL.\n */\nexport enum ProtocolMode {\n  AAD = 'AAD',\n  OIDC = 'OIDC'\n}\n\n/**\n * Initialization Options for Microsoft Provider: https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/initialization.md\n * Details (not all options are supported): https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md\n */\nexport type MicrosoftOptions = {\n  redirect_uri?: string,\n  logout_redirect_uri?: string,\n  authority?: string,\n  knownAuthorities?: string[],\n  protocolMode?: ProtocolMode,\n  clientCapabilities?: string[],\n  cacheLocation?: string,\n  scopes?: string[]\n};\n\n// Collection of internal MSAL interfaces from: https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/lib/msal-browser/src\n\ninterface MSALAccount {\n  environment: string;\n  homeAccountId: string;\n  tenantId: string;\n  username: string;\n}\n\ninterface MSGraphUserInfo {\n  businessPhones: string[];\n  displayName: string;\n  givenName: string;\n  id: string;\n  jobTitle: string;\n  mail: string;\n  mobilePhone: string;\n  officeLocation: string;\n  preferredLanguage: string;\n  surname: string;\n  userPrincipalName: string;\n}\n\ninterface MSALLoginRequest {\n  scopes?: string[];\n  sid?: string;\n  loginHint?: string;\n  domainHint?: string;\n}\n\ninterface MSALLoginResponse {\n  accessToken: string;\n  account: MSALAccount;\n  expiresOn: Date;\n  extExpiresOn: Date;\n  familyId: string;\n  fromCache: boolean;\n  idToken: string;\n  idTokenClaims: any;\n  scopes: string[];\n  state: string;\n  tenantId: string;\n  uniqueId: string;\n}\n\ninterface MSALLogoutRequest {\n  account?: MSALAccount;\n  postLogoutRedirectUri?: string;\n  authority?: string;\n  correlationId?: string;\n}\n\ninterface MSALClientApplication {\n  getAllAccounts(): MSALAccount[];\n  logoutPopup(logoutRequest?: MSALLogoutRequest): Promise<void>;\n  loginPopup(loginRequest: MSALLoginRequest): Promise<MSALLoginResponse>;\n  ssoSilent(loginRequest: MSALLoginRequest): Promise<MSALLoginResponse>;\n  acquireTokenSilent(loginRequest: MSALLoginRequest): Promise<MSALLoginResponse>;\n  getAccountByHomeId(homeAccountId: string): MSALAccount;\n}\n\ndeclare let msal: any;\n\nconst COMMON_AUTHORITY: string = 'https://login.microsoftonline.com/common/';\n\n/**\n * Microsoft Authentication using MSAL v2: https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/lib/msal-browser\n */\nexport class MicrosoftLoginProvider extends BaseLoginProvider {\n  private _instance: MSALClientApplication;\n  public static readonly PROVIDER_ID: string = 'MICROSOFT';\n\n  private initOptions: MicrosoftOptions = {\n    authority: COMMON_AUTHORITY,\n    scopes: ['openid', 'email', 'profile', 'User.Read'],\n    knownAuthorities: [],\n    protocolMode: ProtocolMode.AAD,\n    clientCapabilities: [],\n    cacheLocation: 'sessionStorage'\n  };\n\n  constructor(\n    private clientId: string,\n    initOptions?: MicrosoftOptions\n  ) {\n    super();\n\n    this.initOptions = {\n      ...this.initOptions,\n      ...initOptions\n    };\n  }\n\n  initialize(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.loadScript(\n        MicrosoftLoginProvider.PROVIDER_ID,\n        'https://alcdn.msauth.net/browser/2.13.1/js/msal-browser.js',\n        () => {\n          try {\n            const config = {\n              auth: {\n                clientId: this.clientId,\n                redirectUri: this.initOptions.redirect_uri ?? location.origin,\n                authority: this.initOptions.authority,\n                knownAuthorities: this.initOptions.knownAuthorities,\n                protocolMode: this.initOptions.protocolMode,\n                clientCapabilities: this.initOptions.clientCapabilities\n              },\n              cache: !this.initOptions.cacheLocation ? null : {\n                cacheLocation: this.initOptions.cacheLocation\n              }\n            };\n\n            this._instance = new msal.PublicClientApplication(config);\n            resolve();\n          } catch (e) {\n            reject(e);\n          }\n        }\n      );\n    });\n  }\n\n  private getSocialUser(loginResponse): Promise<SocialUser> {\n    return new Promise<SocialUser>((resolve, reject) => {\n      //After login, use Microsoft Graph API to get user info\n      let meRequest = new XMLHttpRequest();\n      meRequest.onreadystatechange = () => {\n        if (meRequest.readyState == 4) {\n          try {\n            if (meRequest.status == 200) {\n              let userInfo = <MSGraphUserInfo>JSON.parse(meRequest.responseText);\n\n              let user: SocialUser = new SocialUser();\n              user.provider = MicrosoftLoginProvider.PROVIDER_ID;\n              user.id = loginResponse.idToken;\n              user.authToken = loginResponse.accessToken;\n              user.name = loginResponse.idTokenClaims.name;\n              user.email = loginResponse.account.username;\n              user.idToken = loginResponse.idToken;\n              user.response = loginResponse;\n              user.firstName = userInfo.givenName;\n              user.lastName = userInfo.surname;\n\n              resolve(user);\n            } else {\n              reject(`Error retrieving user info: ${meRequest.status}`);\n            }\n          } catch (err) {\n            reject(err);\n          }\n        }\n      };\n\n      //Microsoft Graph ME Endpoint: https://docs.microsoft.com/en-us/graph/api/user-get?view=graph-rest-1.0&tabs=http\n      meRequest.open('GET', 'https://graph.microsoft.com/v1.0/me');\n      meRequest.setRequestHeader('Authorization', `Bearer ${loginResponse.accessToken}`);\n      try {\n        meRequest.send();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  async getLoginStatus(): Promise<SocialUser> {\n    const accounts = this._instance.getAllAccounts();\n    if (accounts?.length > 0) {\n      const loginResponse = await this._instance.ssoSilent({\n        scopes: this.initOptions.scopes,\n        loginHint: accounts[0].username\n      });\n      return await this.getSocialUser(loginResponse);\n    } else {\n      throw `No user is currently logged in with ${MicrosoftLoginProvider.PROVIDER_ID}`;\n    }\n  }\n\n  async signIn(): Promise<SocialUser> {\n    const loginResponse = await this._instance.loginPopup({\n      scopes: this.initOptions.scopes\n    });\n    return await this.getSocialUser(loginResponse);\n  }\n\n  async signOut(revoke?: boolean): Promise<any> {\n    const accounts = this._instance.getAllAccounts();\n    if (accounts?.length > 0) {\n      await this._instance.logoutPopup({\n        account: accounts[0],\n        postLogoutRedirectUri: this.initOptions.logout_redirect_uri ?? this.initOptions.redirect_uri ?? location.href\n      })\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}