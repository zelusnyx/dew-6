"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
exports.AddUserPublicKeyRequest = exports.GetUserPublicKeysResponse = exports.GetUserPublicKeysRequest = exports.PublicKey = exports.UserStatus = exports.DeleteUserResponse = exports.DeleteUserRequest = exports.UpdateUserResponse = exports.UpdateUserRequest = exports.GetUserResponse = exports.GetUserRequest = exports.GetUsersResponse = exports.GetUsersRequest = exports.FreezeUserResponse = exports.FreezeUserRequest = exports.ActivateUserResponse = exports.ActivateUserRequest = exports.InitUserResponse = exports.InitUserRequest = exports.User_FacilitiesEntry = exports.User_OrganizationsEntry = exports.User_ProjectsEntry = exports.User = exports.MembershipUpdate_SetEntry = exports.MembershipUpdate = exports.Member = exports.UserStateUpdate = exports.AccessModeUpdate = exports.getRevisionRequest_EncodingToJSON = exports.getRevisionRequest_EncodingFromJSON = exports.GetRevisionRequest_Encoding = exports.member_StateToJSON = exports.member_StateFromJSON = exports.Member_State = exports.member_RoleToJSON = exports.member_RoleFromJSON = exports.Member_Role = exports.userStateToJSON = exports.userStateFromJSON = exports.UserState = exports.membershipTypeToJSON = exports.membershipTypeFromJSON = exports.MembershipType = exports.filterModeToJSON = exports.filterModeFromJSON = exports.FilterMode = exports.accessModeToJSON = exports.accessModeFromJSON = exports.AccessMode = exports.protobufPackage = void 0;
exports.Organization_ProjectsEntry = exports.Organization_MembersEntry = exports.Organization = exports.GetRevisionResponse = exports.GetRevisionRequest = exports.DeleteExperimentResponse = exports.DeleteExperimentRequest = exports.CreateExperimentResponse = exports.CreateExperimentRequest = exports.UpdateExperimentResponse = exports.UpdateExperimentRequest = exports.GetExperimentResponse_ModelsEntry = exports.GetExperimentResponse = exports.XpNetModel = exports.GetExperimentRequest = exports.GetProjectExperimentsResponse = exports.GetProjectExperimentsRequest = exports.GetExperimentsResponse = exports.GetExperimentsRequest = exports.Experiment_ModelsEntry = exports.Experiment = exports.ExperimentModel = exports.DeleteProjectMemberResponse = exports.DeleteProjectMemberRequest = exports.UpdateProjectMemberResponse = exports.UpdateProjectMemberRequest = exports.AddProjectMemberResponse = exports.AddProjectMemberRequest = exports.GetProjectMemberResponse = exports.GetProjectMemberRequest = exports.GetProjectMembersResponse = exports.GetProjectMembersRequest = exports.UpdateProjectResponse = exports.UpdateProjectRequest = exports.DescriptionUpdate = exports.CreateProjectResponse = exports.CreateProjectRequest = exports.DeleteProjectResponse = exports.DeleteProjectRequest = exports.GetProjectResponse = exports.GetProjectRequest = exports.GetProjectsResponse = exports.GetProjectsRequest = exports.Project_MembersEntry = exports.Project = exports.DeleteUserPublicKeysResponse = exports.DeleteUserPublicKeysRequest = exports.DeleteUserPublicKeyResponse = exports.DeleteUserPublicKeyRequest = exports.AddUserPublicKeyResponse = void 0;
exports.HealthRequest = exports.GetPolicyResponse = exports.GetPolicyRequest = exports.UpdateEntityTypeConfigurationsResponse = exports.UpdateEntityTypeConfigurationsRequest = exports.GetEntityTypeConfigurationsResponse = exports.EntityType = exports.GetEntityTypeConfigurationsRequest = exports.UpdateUserConfigurationsResponse = exports.UpdateUserConfigurationsRequest = exports.GetUserConfigurationsResponse_USState = exports.GetUserConfigurationsResponse_Country = exports.GetUserConfigurationsResponse = exports.GetUserConfigurationsRequest = exports.DeleteOrganizationProjectResponse = exports.DeleteOrganizationProjectRequest = exports.UpdateOrganizationProjectResponse = exports.UpdateOrganizationProjectRequest = exports.AddOrganizationProjectResponse = exports.AddOrganizationProjectRequest = exports.GetOrganizationProjectResponse = exports.GetOrganizationProjectRequest = exports.GetOrganizationProjectsResponse = exports.GetOrganizationProjectsRequest = exports.DeleteOrganizationMemberResponse = exports.DeleteOrganizationMemberRequest = exports.UpdateOrganizationMemberResponse = exports.UpdateOrganizationMemberRequest = exports.ConfirmOrganizationMembershipResponse = exports.ConfirmOrganizationMembershipRequest = exports.RequestOrganizationMembershipResponse = exports.RequestOrganizationMembershipRequest = exports.GetOrganizationMemberResponse = exports.GetOrganizationMemberRequest = exports.GetOrganizationMembersResponse = exports.GetOrganizationMembersRequest = exports.UpdateOrganizationResponse = exports.UpdateOrganizationRequest = exports.CreateOrganizationResponse = exports.CreateOrganizationRequest = exports.DeleteOrganizationResponse = exports.DeleteOrganizationRequest = exports.GetOrganizationResponse = exports.GetOrganizationRequest = exports.GetOrganizationsResponse = exports.GetOrganizationsRequest = exports.FreezeOrganizationResponse = exports.FreezeOrganizationRequest = exports.ActivateOrganizationResponse = exports.ActivateOrganizationRequest = void 0;
exports.HealthResponse = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
var timestamp_1 = require("../../google/protobuf/timestamp");
var taskstatus_1 = require("../../mergetb/tech/reconcile/taskstatus");
var core_1 = require("../../mergetb/xir/v0.3/core");
var patch_types_1 = require("./patch_types");
exports.protobufPackage = "portal.v1";
var AccessMode;
(function (AccessMode) {
    AccessMode[AccessMode["Public"] = 0] = "Public";
    AccessMode[AccessMode["Protected"] = 1] = "Protected";
    AccessMode[AccessMode["Private"] = 2] = "Private";
    AccessMode[AccessMode["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(AccessMode = exports.AccessMode || (exports.AccessMode = {}));
function accessModeFromJSON(object) {
    switch (object) {
        case 0:
        case "Public":
            return AccessMode.Public;
        case 1:
        case "Protected":
            return AccessMode.Protected;
        case 2:
        case "Private":
            return AccessMode.Private;
        case -1:
        case "UNRECOGNIZED":
        default:
            return AccessMode.UNRECOGNIZED;
    }
}
exports.accessModeFromJSON = accessModeFromJSON;
function accessModeToJSON(object) {
    switch (object) {
        case AccessMode.Public:
            return "Public";
        case AccessMode.Protected:
            return "Protected";
        case AccessMode.Private:
            return "Private";
        case AccessMode.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.accessModeToJSON = accessModeToJSON;
/** NOTE: FilterMode supports bitwise ORing options together. */
var FilterMode;
(function (FilterMode) {
    FilterMode[FilterMode["ByUser"] = 0] = "ByUser";
    FilterMode[FilterMode["ByAll"] = 1] = "ByAll";
    FilterMode[FilterMode["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(FilterMode = exports.FilterMode || (exports.FilterMode = {}));
function filterModeFromJSON(object) {
    switch (object) {
        case 0:
        case "ByUser":
            return FilterMode.ByUser;
        case 1:
        case "ByAll":
            return FilterMode.ByAll;
        case -1:
        case "UNRECOGNIZED":
        default:
            return FilterMode.UNRECOGNIZED;
    }
}
exports.filterModeFromJSON = filterModeFromJSON;
function filterModeToJSON(object) {
    switch (object) {
        case FilterMode.ByUser:
            return "ByUser";
        case FilterMode.ByAll:
            return "ByAll";
        case FilterMode.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.filterModeToJSON = filterModeToJSON;
var MembershipType;
(function (MembershipType) {
    MembershipType[MembershipType["UserMember"] = 0] = "UserMember";
    MembershipType[MembershipType["ProjectMember"] = 1] = "ProjectMember";
    MembershipType[MembershipType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(MembershipType = exports.MembershipType || (exports.MembershipType = {}));
function membershipTypeFromJSON(object) {
    switch (object) {
        case 0:
        case "UserMember":
            return MembershipType.UserMember;
        case 1:
        case "ProjectMember":
            return MembershipType.ProjectMember;
        case -1:
        case "UNRECOGNIZED":
        default:
            return MembershipType.UNRECOGNIZED;
    }
}
exports.membershipTypeFromJSON = membershipTypeFromJSON;
function membershipTypeToJSON(object) {
    switch (object) {
        case MembershipType.UserMember:
            return "UserMember";
        case MembershipType.ProjectMember:
            return "ProjectMember";
        case MembershipType.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.membershipTypeToJSON = membershipTypeToJSON;
/** A users state broadly determines what they are authorized to do. */
var UserState;
(function (UserState) {
    /**
     * NotSet - We need a NotSet state for updates, which may not include state and
     * we need to distinguish between 0 = Pending and 0 = not included in
     * messages which use this enum.
     */
    UserState[UserState["NotSet"] = 0] = "NotSet";
    /**
     * Pending - User has not been activated yet. Most API calls are not available to
     * users in this state.
     */
    UserState[UserState["Pending"] = 1] = "Pending";
    /**
     * Frozen - User has been frozen by a organization maintainer or portal admin. All
     * API calls are forbidden to users in this state.
     */
    UserState[UserState["Frozen"] = 2] = "Frozen";
    /**
     * Active - User is active. API calls are governed by the portal's policy
     * definitions.
     */
    UserState[UserState["Active"] = 3] = "Active";
    UserState[UserState["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(UserState = exports.UserState || (exports.UserState = {}));
function userStateFromJSON(object) {
    switch (object) {
        case 0:
        case "NotSet":
            return UserState.NotSet;
        case 1:
        case "Pending":
            return UserState.Pending;
        case 2:
        case "Frozen":
            return UserState.Frozen;
        case 3:
        case "Active":
            return UserState.Active;
        case -1:
        case "UNRECOGNIZED":
        default:
            return UserState.UNRECOGNIZED;
    }
}
exports.userStateFromJSON = userStateFromJSON;
function userStateToJSON(object) {
    switch (object) {
        case UserState.NotSet:
            return "NotSet";
        case UserState.Pending:
            return "Pending";
        case UserState.Frozen:
            return "Frozen";
        case UserState.Active:
            return "Active";
        case UserState.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.userStateToJSON = userStateToJSON;
var Member_Role;
(function (Member_Role) {
    Member_Role[Member_Role["Member"] = 0] = "Member";
    Member_Role[Member_Role["Maintainer"] = 1] = "Maintainer";
    Member_Role[Member_Role["Creator"] = 2] = "Creator";
    Member_Role[Member_Role["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(Member_Role = exports.Member_Role || (exports.Member_Role = {}));
function member_RoleFromJSON(object) {
    switch (object) {
        case 0:
        case "Member":
            return Member_Role.Member;
        case 1:
        case "Maintainer":
            return Member_Role.Maintainer;
        case 2:
        case "Creator":
            return Member_Role.Creator;
        case -1:
        case "UNRECOGNIZED":
        default:
            return Member_Role.UNRECOGNIZED;
    }
}
exports.member_RoleFromJSON = member_RoleFromJSON;
function member_RoleToJSON(object) {
    switch (object) {
        case Member_Role.Member:
            return "Member";
        case Member_Role.Maintainer:
            return "Maintainer";
        case Member_Role.Creator:
            return "Creator";
        case Member_Role.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.member_RoleToJSON = member_RoleToJSON;
var Member_State;
(function (Member_State) {
    Member_State[Member_State["Pending"] = 0] = "Pending";
    Member_State[Member_State["Active"] = 1] = "Active";
    Member_State[Member_State["MemberRequested"] = 2] = "MemberRequested";
    Member_State[Member_State["EntityRequested"] = 3] = "EntityRequested";
    Member_State[Member_State["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(Member_State = exports.Member_State || (exports.Member_State = {}));
function member_StateFromJSON(object) {
    switch (object) {
        case 0:
        case "Pending":
            return Member_State.Pending;
        case 1:
        case "Active":
            return Member_State.Active;
        case 2:
        case "MemberRequested":
            return Member_State.MemberRequested;
        case 3:
        case "EntityRequested":
            return Member_State.EntityRequested;
        case -1:
        case "UNRECOGNIZED":
        default:
            return Member_State.UNRECOGNIZED;
    }
}
exports.member_StateFromJSON = member_StateFromJSON;
function member_StateToJSON(object) {
    switch (object) {
        case Member_State.Pending:
            return "Pending";
        case Member_State.Active:
            return "Active";
        case Member_State.MemberRequested:
            return "MemberRequested";
        case Member_State.EntityRequested:
            return "EntityRequested";
        case Member_State.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.member_StateToJSON = member_StateToJSON;
var GetRevisionRequest_Encoding;
(function (GetRevisionRequest_Encoding) {
    GetRevisionRequest_Encoding[GetRevisionRequest_Encoding["NONE"] = 0] = "NONE";
    /** XIRB64 - base 64 encoded xir.Network */
    GetRevisionRequest_Encoding[GetRevisionRequest_Encoding["XIRB64"] = 1] = "XIRB64";
    /** DOT - graphviz DOT format */
    GetRevisionRequest_Encoding[GetRevisionRequest_Encoding["DOT"] = 2] = "DOT";
    GetRevisionRequest_Encoding[GetRevisionRequest_Encoding["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(GetRevisionRequest_Encoding = exports.GetRevisionRequest_Encoding || (exports.GetRevisionRequest_Encoding = {}));
function getRevisionRequest_EncodingFromJSON(object) {
    switch (object) {
        case 0:
        case "NONE":
            return GetRevisionRequest_Encoding.NONE;
        case 1:
        case "XIRB64":
            return GetRevisionRequest_Encoding.XIRB64;
        case 2:
        case "DOT":
            return GetRevisionRequest_Encoding.DOT;
        case -1:
        case "UNRECOGNIZED":
        default:
            return GetRevisionRequest_Encoding.UNRECOGNIZED;
    }
}
exports.getRevisionRequest_EncodingFromJSON = getRevisionRequest_EncodingFromJSON;
function getRevisionRequest_EncodingToJSON(object) {
    switch (object) {
        case GetRevisionRequest_Encoding.NONE:
            return "NONE";
        case GetRevisionRequest_Encoding.XIRB64:
            return "XIRB64";
        case GetRevisionRequest_Encoding.DOT:
            return "DOT";
        case GetRevisionRequest_Encoding.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.getRevisionRequest_EncodingToJSON = getRevisionRequest_EncodingToJSON;
function createBaseAccessModeUpdate() {
    return { value: 0 };
}
exports.AccessModeUpdate = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.value !== 0) {
            writer.uint32(8).int32(message.value);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseAccessModeUpdate();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.value = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { value: isSet(object.value) ? accessModeFromJSON(object.value) : 0 };
    },
    toJSON: function (message) {
        var obj = {};
        message.value !== undefined && (obj.value = accessModeToJSON(message.value));
        return obj;
    },
    create: function (base) {
        return exports.AccessModeUpdate.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseAccessModeUpdate();
        message.value = (_a = object.value) !== null && _a !== void 0 ? _a : 0;
        return message;
    }
};
function createBaseUserStateUpdate() {
    return { value: 0 };
}
exports.UserStateUpdate = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.value !== 0) {
            writer.uint32(8).int32(message.value);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUserStateUpdate();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.value = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { value: isSet(object.value) ? userStateFromJSON(object.value) : 0 };
    },
    toJSON: function (message) {
        var obj = {};
        message.value !== undefined && (obj.value = userStateToJSON(message.value));
        return obj;
    },
    create: function (base) {
        return exports.UserStateUpdate.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseUserStateUpdate();
        message.value = (_a = object.value) !== null && _a !== void 0 ? _a : 0;
        return message;
    }
};
function createBaseMember() {
    return { role: 0, state: 0 };
}
exports.Member = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.role !== 0) {
            writer.uint32(16).int32(message.role);
        }
        if (message.state !== 0) {
            writer.uint32(24).int32(message.state);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseMember();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 2:
                    message.role = reader.int32();
                    break;
                case 3:
                    message.state = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            role: isSet(object.role) ? member_RoleFromJSON(object.role) : 0,
            state: isSet(object.state) ? member_StateFromJSON(object.state) : 0
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.role !== undefined && (obj.role = member_RoleToJSON(message.role));
        message.state !== undefined && (obj.state = member_StateToJSON(message.state));
        return obj;
    },
    create: function (base) {
        return exports.Member.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseMember();
        message.role = (_a = object.role) !== null && _a !== void 0 ? _a : 0;
        message.state = (_b = object.state) !== null && _b !== void 0 ? _b : 0;
        return message;
    }
};
function createBaseMembershipUpdate() {
    return { remove: [], set: {} };
}
exports.MembershipUpdate = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        for (var _i = 0, _a = message.remove; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(10).string(v);
        }
        Object.entries(message.set).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.MembershipUpdate_SetEntry.encode({ key: key, value: value }, writer.uint32(18).fork()).ldelim();
        });
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseMembershipUpdate();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.remove.push(reader.string());
                    break;
                case 2:
                    var entry2 = exports.MembershipUpdate_SetEntry.decode(reader, reader.uint32());
                    if (entry2.value !== undefined) {
                        message.set[entry2.key] = entry2.value;
                    }
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            remove: Array.isArray(object === null || object === void 0 ? void 0 : object.remove) ? object.remove.map(function (e) { return String(e); }) : [],
            set: isObject(object.set)
                ? Object.entries(object.set).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = exports.Member.fromJSON(value);
                    return acc;
                }, {})
                : {}
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.remove) {
            obj.remove = message.remove.map(function (e) { return e; });
        }
        else {
            obj.remove = [];
        }
        obj.set = {};
        if (message.set) {
            Object.entries(message.set).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.set[k] = exports.Member.toJSON(v);
            });
        }
        return obj;
    },
    create: function (base) {
        return exports.MembershipUpdate.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseMembershipUpdate();
        message.remove = ((_a = object.remove) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        message.set = Object.entries((_b = object.set) !== null && _b !== void 0 ? _b : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = exports.Member.fromPartial(value);
            }
            return acc;
        }, {});
        return message;
    }
};
function createBaseMembershipUpdate_SetEntry() {
    return { key: "", value: undefined };
}
exports.MembershipUpdate_SetEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== undefined) {
            exports.Member.encode(message.value, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseMembershipUpdate_SetEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            key: isSet(object.key) ? String(object.key) : "",
            value: isSet(object.value) ? exports.Member.fromJSON(object.value) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value ? exports.Member.toJSON(message.value) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.MembershipUpdate_SetEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseMembershipUpdate_SetEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (object.value !== undefined && object.value !== null)
            ? exports.Member.fromPartial(object.value)
            : undefined;
        return message;
    }
};
function createBaseUser() {
    return {
        username: "",
        name: "",
        state: 0,
        accessMode: 0,
        uid: 0,
        gid: 0,
        projects: {},
        experiments: [],
        organizations: {},
        facilities: {},
        admin: false,
        ver: 0,
        institution: "",
        category: "",
        email: "",
        country: "",
        usstate: ""
    };
}
exports.User = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.username !== "") {
            writer.uint32(10).string(message.username);
        }
        if (message.name !== "") {
            writer.uint32(18).string(message.name);
        }
        if (message.state !== 0) {
            writer.uint32(24).int32(message.state);
        }
        if (message.accessMode !== 0) {
            writer.uint32(32).int32(message.accessMode);
        }
        if (message.uid !== 0) {
            writer.uint32(40).uint32(message.uid);
        }
        if (message.gid !== 0) {
            writer.uint32(48).uint32(message.gid);
        }
        Object.entries(message.projects).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.User_ProjectsEntry.encode({ key: key, value: value }, writer.uint32(58).fork()).ldelim();
        });
        for (var _i = 0, _a = message.experiments; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(66).string(v);
        }
        Object.entries(message.organizations).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.User_OrganizationsEntry.encode({ key: key, value: value }, writer.uint32(74).fork()).ldelim();
        });
        Object.entries(message.facilities).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.User_FacilitiesEntry.encode({ key: key, value: value }, writer.uint32(82).fork()).ldelim();
        });
        if (message.admin === true) {
            writer.uint32(88).bool(message.admin);
        }
        if (message.ver !== 0) {
            writer.uint32(96).int64(message.ver);
        }
        if (message.institution !== "") {
            writer.uint32(106).string(message.institution);
        }
        if (message.category !== "") {
            writer.uint32(114).string(message.category);
        }
        if (message.email !== "") {
            writer.uint32(122).string(message.email);
        }
        if (message.country !== "") {
            writer.uint32(130).string(message.country);
        }
        if (message.usstate !== "") {
            writer.uint32(138).string(message.usstate);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUser();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.username = reader.string();
                    break;
                case 2:
                    message.name = reader.string();
                    break;
                case 3:
                    message.state = reader.int32();
                    break;
                case 4:
                    message.accessMode = reader.int32();
                    break;
                case 5:
                    message.uid = reader.uint32();
                    break;
                case 6:
                    message.gid = reader.uint32();
                    break;
                case 7:
                    var entry7 = exports.User_ProjectsEntry.decode(reader, reader.uint32());
                    if (entry7.value !== undefined) {
                        message.projects[entry7.key] = entry7.value;
                    }
                    break;
                case 8:
                    message.experiments.push(reader.string());
                    break;
                case 9:
                    var entry9 = exports.User_OrganizationsEntry.decode(reader, reader.uint32());
                    if (entry9.value !== undefined) {
                        message.organizations[entry9.key] = entry9.value;
                    }
                    break;
                case 10:
                    var entry10 = exports.User_FacilitiesEntry.decode(reader, reader.uint32());
                    if (entry10.value !== undefined) {
                        message.facilities[entry10.key] = entry10.value;
                    }
                    break;
                case 11:
                    message.admin = reader.bool();
                    break;
                case 12:
                    message.ver = longToNumber(reader.int64());
                    break;
                case 13:
                    message.institution = reader.string();
                    break;
                case 14:
                    message.category = reader.string();
                    break;
                case 15:
                    message.email = reader.string();
                    break;
                case 16:
                    message.country = reader.string();
                    break;
                case 17:
                    message.usstate = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            username: isSet(object.username) ? String(object.username) : "",
            name: isSet(object.name) ? String(object.name) : "",
            state: isSet(object.state) ? userStateFromJSON(object.state) : 0,
            accessMode: isSet(object.accessMode) ? accessModeFromJSON(object.accessMode) : 0,
            uid: isSet(object.uid) ? Number(object.uid) : 0,
            gid: isSet(object.gid) ? Number(object.gid) : 0,
            projects: isObject(object.projects)
                ? Object.entries(object.projects).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = exports.Member.fromJSON(value);
                    return acc;
                }, {})
                : {},
            experiments: Array.isArray(object === null || object === void 0 ? void 0 : object.experiments) ? object.experiments.map(function (e) { return String(e); }) : [],
            organizations: isObject(object.organizations)
                ? Object.entries(object.organizations).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = exports.Member.fromJSON(value);
                    return acc;
                }, {})
                : {},
            facilities: isObject(object.facilities)
                ? Object.entries(object.facilities).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = exports.Member.fromJSON(value);
                    return acc;
                }, {})
                : {},
            admin: isSet(object.admin) ? Boolean(object.admin) : false,
            ver: isSet(object.ver) ? Number(object.ver) : 0,
            institution: isSet(object.institution) ? String(object.institution) : "",
            category: isSet(object.category) ? String(object.category) : "",
            email: isSet(object.email) ? String(object.email) : "",
            country: isSet(object.country) ? String(object.country) : "",
            usstate: isSet(object.usstate) ? String(object.usstate) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.username !== undefined && (obj.username = message.username);
        message.name !== undefined && (obj.name = message.name);
        message.state !== undefined && (obj.state = userStateToJSON(message.state));
        message.accessMode !== undefined && (obj.accessMode = accessModeToJSON(message.accessMode));
        message.uid !== undefined && (obj.uid = Math.round(message.uid));
        message.gid !== undefined && (obj.gid = Math.round(message.gid));
        obj.projects = {};
        if (message.projects) {
            Object.entries(message.projects).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.projects[k] = exports.Member.toJSON(v);
            });
        }
        if (message.experiments) {
            obj.experiments = message.experiments.map(function (e) { return e; });
        }
        else {
            obj.experiments = [];
        }
        obj.organizations = {};
        if (message.organizations) {
            Object.entries(message.organizations).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.organizations[k] = exports.Member.toJSON(v);
            });
        }
        obj.facilities = {};
        if (message.facilities) {
            Object.entries(message.facilities).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.facilities[k] = exports.Member.toJSON(v);
            });
        }
        message.admin !== undefined && (obj.admin = message.admin);
        message.ver !== undefined && (obj.ver = Math.round(message.ver));
        message.institution !== undefined && (obj.institution = message.institution);
        message.category !== undefined && (obj.category = message.category);
        message.email !== undefined && (obj.email = message.email);
        message.country !== undefined && (obj.country = message.country);
        message.usstate !== undefined && (obj.usstate = message.usstate);
        return obj;
    },
    create: function (base) {
        return exports.User.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;
        var message = createBaseUser();
        message.username = (_a = object.username) !== null && _a !== void 0 ? _a : "";
        message.name = (_b = object.name) !== null && _b !== void 0 ? _b : "";
        message.state = (_c = object.state) !== null && _c !== void 0 ? _c : 0;
        message.accessMode = (_d = object.accessMode) !== null && _d !== void 0 ? _d : 0;
        message.uid = (_e = object.uid) !== null && _e !== void 0 ? _e : 0;
        message.gid = (_f = object.gid) !== null && _f !== void 0 ? _f : 0;
        message.projects = Object.entries((_g = object.projects) !== null && _g !== void 0 ? _g : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = exports.Member.fromPartial(value);
            }
            return acc;
        }, {});
        message.experiments = ((_h = object.experiments) === null || _h === void 0 ? void 0 : _h.map(function (e) { return e; })) || [];
        message.organizations = Object.entries((_j = object.organizations) !== null && _j !== void 0 ? _j : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = exports.Member.fromPartial(value);
            }
            return acc;
        }, {});
        message.facilities = Object.entries((_k = object.facilities) !== null && _k !== void 0 ? _k : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = exports.Member.fromPartial(value);
            }
            return acc;
        }, {});
        message.admin = (_l = object.admin) !== null && _l !== void 0 ? _l : false;
        message.ver = (_m = object.ver) !== null && _m !== void 0 ? _m : 0;
        message.institution = (_o = object.institution) !== null && _o !== void 0 ? _o : "";
        message.category = (_p = object.category) !== null && _p !== void 0 ? _p : "";
        message.email = (_q = object.email) !== null && _q !== void 0 ? _q : "";
        message.country = (_r = object.country) !== null && _r !== void 0 ? _r : "";
        message.usstate = (_s = object.usstate) !== null && _s !== void 0 ? _s : "";
        return message;
    }
};
function createBaseUser_ProjectsEntry() {
    return { key: "", value: undefined };
}
exports.User_ProjectsEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== undefined) {
            exports.Member.encode(message.value, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUser_ProjectsEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            key: isSet(object.key) ? String(object.key) : "",
            value: isSet(object.value) ? exports.Member.fromJSON(object.value) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value ? exports.Member.toJSON(message.value) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.User_ProjectsEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseUser_ProjectsEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (object.value !== undefined && object.value !== null)
            ? exports.Member.fromPartial(object.value)
            : undefined;
        return message;
    }
};
function createBaseUser_OrganizationsEntry() {
    return { key: "", value: undefined };
}
exports.User_OrganizationsEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== undefined) {
            exports.Member.encode(message.value, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUser_OrganizationsEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            key: isSet(object.key) ? String(object.key) : "",
            value: isSet(object.value) ? exports.Member.fromJSON(object.value) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value ? exports.Member.toJSON(message.value) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.User_OrganizationsEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseUser_OrganizationsEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (object.value !== undefined && object.value !== null)
            ? exports.Member.fromPartial(object.value)
            : undefined;
        return message;
    }
};
function createBaseUser_FacilitiesEntry() {
    return { key: "", value: undefined };
}
exports.User_FacilitiesEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== undefined) {
            exports.Member.encode(message.value, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUser_FacilitiesEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            key: isSet(object.key) ? String(object.key) : "",
            value: isSet(object.value) ? exports.Member.fromJSON(object.value) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value ? exports.Member.toJSON(message.value) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.User_FacilitiesEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseUser_FacilitiesEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (object.value !== undefined && object.value !== null)
            ? exports.Member.fromPartial(object.value)
            : undefined;
        return message;
    }
};
function createBaseInitUserRequest() {
    return { username: "", status: false };
}
exports.InitUserRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.username !== "") {
            writer.uint32(10).string(message.username);
        }
        if (message.status === true) {
            writer.uint32(16).bool(message.status);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseInitUserRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.username = reader.string();
                    break;
                case 2:
                    message.status = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            username: isSet(object.username) ? String(object.username) : "",
            status: isSet(object.status) ? Boolean(object.status) : false
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.username !== undefined && (obj.username = message.username);
        message.status !== undefined && (obj.status = message.status);
        return obj;
    },
    create: function (base) {
        return exports.InitUserRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseInitUserRequest();
        message.username = (_a = object.username) !== null && _a !== void 0 ? _a : "";
        message.status = (_b = object.status) !== null && _b !== void 0 ? _b : false;
        return message;
    }
};
function createBaseInitUserResponse() {
    return { status: undefined };
}
exports.InitUserResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.status !== undefined) {
            taskstatus_1.TaskForest.encode(message.status, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseInitUserResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.status = taskstatus_1.TaskForest.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { status: isSet(object.status) ? taskstatus_1.TaskForest.fromJSON(object.status) : undefined };
    },
    toJSON: function (message) {
        var obj = {};
        message.status !== undefined && (obj.status = message.status ? taskstatus_1.TaskForest.toJSON(message.status) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.InitUserResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseInitUserResponse();
        message.status = (object.status !== undefined && object.status !== null)
            ? taskstatus_1.TaskForest.fromPartial(object.status)
            : undefined;
        return message;
    }
};
function createBaseActivateUserRequest() {
    return { username: "" };
}
exports.ActivateUserRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.username !== "") {
            writer.uint32(10).string(message.username);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseActivateUserRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.username = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { username: isSet(object.username) ? String(object.username) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.username !== undefined && (obj.username = message.username);
        return obj;
    },
    create: function (base) {
        return exports.ActivateUserRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseActivateUserRequest();
        message.username = (_a = object.username) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseActivateUserResponse() {
    return {};
}
exports.ActivateUserResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseActivateUserResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.ActivateUserResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseActivateUserResponse();
        return message;
    }
};
function createBaseFreezeUserRequest() {
    return { username: "" };
}
exports.FreezeUserRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.username !== "") {
            writer.uint32(10).string(message.username);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseFreezeUserRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.username = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { username: isSet(object.username) ? String(object.username) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.username !== undefined && (obj.username = message.username);
        return obj;
    },
    create: function (base) {
        return exports.FreezeUserRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseFreezeUserRequest();
        message.username = (_a = object.username) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseFreezeUserResponse() {
    return {};
}
exports.FreezeUserResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseFreezeUserResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.FreezeUserResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseFreezeUserResponse();
        return message;
    }
};
function createBaseGetUsersRequest() {
    return { filter: 0 };
}
exports.GetUsersRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.filter !== 0) {
            writer.uint32(8).int32(message.filter);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetUsersRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.filter = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { filter: isSet(object.filter) ? filterModeFromJSON(object.filter) : 0 };
    },
    toJSON: function (message) {
        var obj = {};
        message.filter !== undefined && (obj.filter = filterModeToJSON(message.filter));
        return obj;
    },
    create: function (base) {
        return exports.GetUsersRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetUsersRequest();
        message.filter = (_a = object.filter) !== null && _a !== void 0 ? _a : 0;
        return message;
    }
};
function createBaseGetUsersResponse() {
    return { users: [] };
}
exports.GetUsersResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        for (var _i = 0, _a = message.users; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.User.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetUsersResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.users.push(exports.User.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { users: Array.isArray(object === null || object === void 0 ? void 0 : object.users) ? object.users.map(function (e) { return exports.User.fromJSON(e); }) : [] };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.users) {
            obj.users = message.users.map(function (e) { return e ? exports.User.toJSON(e) : undefined; });
        }
        else {
            obj.users = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.GetUsersResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetUsersResponse();
        message.users = ((_a = object.users) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.User.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseGetUserRequest() {
    return { username: "" };
}
exports.GetUserRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.username !== "") {
            writer.uint32(10).string(message.username);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetUserRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.username = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { username: isSet(object.username) ? String(object.username) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.username !== undefined && (obj.username = message.username);
        return obj;
    },
    create: function (base) {
        return exports.GetUserRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetUserRequest();
        message.username = (_a = object.username) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseGetUserResponse() {
    return { user: undefined };
}
exports.GetUserResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.user !== undefined) {
            exports.User.encode(message.user, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetUserResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.user = exports.User.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { user: isSet(object.user) ? exports.User.fromJSON(object.user) : undefined };
    },
    toJSON: function (message) {
        var obj = {};
        message.user !== undefined && (obj.user = message.user ? exports.User.toJSON(message.user) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.GetUserResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetUserResponse();
        message.user = (object.user !== undefined && object.user !== null) ? exports.User.fromPartial(object.user) : undefined;
        return message;
    }
};
function createBaseUpdateUserRequest() {
    return {
        username: "",
        name: "",
        state: undefined,
        accessMode: undefined,
        organizations: undefined,
        projects: undefined,
        facilities: undefined,
        experiments: [],
        toggleAdmin: false
    };
}
exports.UpdateUserRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.username !== "") {
            writer.uint32(10).string(message.username);
        }
        if (message.name !== "") {
            writer.uint32(18).string(message.name);
        }
        if (message.state !== undefined) {
            exports.UserStateUpdate.encode(message.state, writer.uint32(26).fork()).ldelim();
        }
        if (message.accessMode !== undefined) {
            exports.AccessModeUpdate.encode(message.accessMode, writer.uint32(34).fork()).ldelim();
        }
        if (message.organizations !== undefined) {
            exports.MembershipUpdate.encode(message.organizations, writer.uint32(42).fork()).ldelim();
        }
        if (message.projects !== undefined) {
            exports.MembershipUpdate.encode(message.projects, writer.uint32(50).fork()).ldelim();
        }
        if (message.facilities !== undefined) {
            exports.MembershipUpdate.encode(message.facilities, writer.uint32(58).fork()).ldelim();
        }
        for (var _i = 0, _a = message.experiments; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(66).string(v);
        }
        if (message.toggleAdmin === true) {
            writer.uint32(72).bool(message.toggleAdmin);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateUserRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.username = reader.string();
                    break;
                case 2:
                    message.name = reader.string();
                    break;
                case 3:
                    message.state = exports.UserStateUpdate.decode(reader, reader.uint32());
                    break;
                case 4:
                    message.accessMode = exports.AccessModeUpdate.decode(reader, reader.uint32());
                    break;
                case 5:
                    message.organizations = exports.MembershipUpdate.decode(reader, reader.uint32());
                    break;
                case 6:
                    message.projects = exports.MembershipUpdate.decode(reader, reader.uint32());
                    break;
                case 7:
                    message.facilities = exports.MembershipUpdate.decode(reader, reader.uint32());
                    break;
                case 8:
                    message.experiments.push(reader.string());
                    break;
                case 9:
                    message.toggleAdmin = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            username: isSet(object.username) ? String(object.username) : "",
            name: isSet(object.name) ? String(object.name) : "",
            state: isSet(object.state) ? exports.UserStateUpdate.fromJSON(object.state) : undefined,
            accessMode: isSet(object.accessMode) ? exports.AccessModeUpdate.fromJSON(object.accessMode) : undefined,
            organizations: isSet(object.organizations) ? exports.MembershipUpdate.fromJSON(object.organizations) : undefined,
            projects: isSet(object.projects) ? exports.MembershipUpdate.fromJSON(object.projects) : undefined,
            facilities: isSet(object.facilities) ? exports.MembershipUpdate.fromJSON(object.facilities) : undefined,
            experiments: Array.isArray(object === null || object === void 0 ? void 0 : object.experiments) ? object.experiments.map(function (e) { return String(e); }) : [],
            toggleAdmin: isSet(object.toggleAdmin) ? Boolean(object.toggleAdmin) : false
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.username !== undefined && (obj.username = message.username);
        message.name !== undefined && (obj.name = message.name);
        message.state !== undefined && (obj.state = message.state ? exports.UserStateUpdate.toJSON(message.state) : undefined);
        message.accessMode !== undefined &&
            (obj.accessMode = message.accessMode ? exports.AccessModeUpdate.toJSON(message.accessMode) : undefined);
        message.organizations !== undefined &&
            (obj.organizations = message.organizations ? exports.MembershipUpdate.toJSON(message.organizations) : undefined);
        message.projects !== undefined &&
            (obj.projects = message.projects ? exports.MembershipUpdate.toJSON(message.projects) : undefined);
        message.facilities !== undefined &&
            (obj.facilities = message.facilities ? exports.MembershipUpdate.toJSON(message.facilities) : undefined);
        if (message.experiments) {
            obj.experiments = message.experiments.map(function (e) { return e; });
        }
        else {
            obj.experiments = [];
        }
        message.toggleAdmin !== undefined && (obj.toggleAdmin = message.toggleAdmin);
        return obj;
    },
    create: function (base) {
        return exports.UpdateUserRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseUpdateUserRequest();
        message.username = (_a = object.username) !== null && _a !== void 0 ? _a : "";
        message.name = (_b = object.name) !== null && _b !== void 0 ? _b : "";
        message.state = (object.state !== undefined && object.state !== null)
            ? exports.UserStateUpdate.fromPartial(object.state)
            : undefined;
        message.accessMode = (object.accessMode !== undefined && object.accessMode !== null)
            ? exports.AccessModeUpdate.fromPartial(object.accessMode)
            : undefined;
        message.organizations = (object.organizations !== undefined && object.organizations !== null)
            ? exports.MembershipUpdate.fromPartial(object.organizations)
            : undefined;
        message.projects = (object.projects !== undefined && object.projects !== null)
            ? exports.MembershipUpdate.fromPartial(object.projects)
            : undefined;
        message.facilities = (object.facilities !== undefined && object.facilities !== null)
            ? exports.MembershipUpdate.fromPartial(object.facilities)
            : undefined;
        message.experiments = ((_c = object.experiments) === null || _c === void 0 ? void 0 : _c.map(function (e) { return e; })) || [];
        message.toggleAdmin = (_d = object.toggleAdmin) !== null && _d !== void 0 ? _d : false;
        return message;
    }
};
function createBaseUpdateUserResponse() {
    return {};
}
exports.UpdateUserResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateUserResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.UpdateUserResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseUpdateUserResponse();
        return message;
    }
};
function createBaseDeleteUserRequest() {
    return { user: "" };
}
exports.DeleteUserRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.user !== "") {
            writer.uint32(10).string(message.user);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteUserRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.user = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { user: isSet(object.user) ? String(object.user) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.user !== undefined && (obj.user = message.user);
        return obj;
    },
    create: function (base) {
        return exports.DeleteUserRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseDeleteUserRequest();
        message.user = (_a = object.user) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseDeleteUserResponse() {
    return {};
}
exports.DeleteUserResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteUserResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.DeleteUserResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseDeleteUserResponse();
        return message;
    }
};
function createBaseUserStatus() {
    return { username: "", loggedin: false, ver: 0 };
}
exports.UserStatus = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.username !== "") {
            writer.uint32(10).string(message.username);
        }
        if (message.loggedin === true) {
            writer.uint32(16).bool(message.loggedin);
        }
        if (message.ver !== 0) {
            writer.uint32(24).int64(message.ver);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUserStatus();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.username = reader.string();
                    break;
                case 2:
                    message.loggedin = reader.bool();
                    break;
                case 3:
                    message.ver = longToNumber(reader.int64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            username: isSet(object.username) ? String(object.username) : "",
            loggedin: isSet(object.loggedin) ? Boolean(object.loggedin) : false,
            ver: isSet(object.ver) ? Number(object.ver) : 0
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.username !== undefined && (obj.username = message.username);
        message.loggedin !== undefined && (obj.loggedin = message.loggedin);
        message.ver !== undefined && (obj.ver = Math.round(message.ver));
        return obj;
    },
    create: function (base) {
        return exports.UserStatus.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseUserStatus();
        message.username = (_a = object.username) !== null && _a !== void 0 ? _a : "";
        message.loggedin = (_b = object.loggedin) !== null && _b !== void 0 ? _b : false;
        message.ver = (_c = object.ver) !== null && _c !== void 0 ? _c : 0;
        return message;
    }
};
function createBasePublicKey() {
    return { fingerprint: "", key: "" };
}
exports.PublicKey = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.fingerprint !== "") {
            writer.uint32(10).string(message.fingerprint);
        }
        if (message.key !== "") {
            writer.uint32(18).string(message.key);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBasePublicKey();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.fingerprint = reader.string();
                    break;
                case 2:
                    message.key = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            fingerprint: isSet(object.fingerprint) ? String(object.fingerprint) : "",
            key: isSet(object.key) ? String(object.key) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.fingerprint !== undefined && (obj.fingerprint = message.fingerprint);
        message.key !== undefined && (obj.key = message.key);
        return obj;
    },
    create: function (base) {
        return exports.PublicKey.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBasePublicKey();
        message.fingerprint = (_a = object.fingerprint) !== null && _a !== void 0 ? _a : "";
        message.key = (_b = object.key) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseGetUserPublicKeysRequest() {
    return { user: "" };
}
exports.GetUserPublicKeysRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.user !== "") {
            writer.uint32(10).string(message.user);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetUserPublicKeysRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.user = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { user: isSet(object.user) ? String(object.user) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.user !== undefined && (obj.user = message.user);
        return obj;
    },
    create: function (base) {
        return exports.GetUserPublicKeysRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetUserPublicKeysRequest();
        message.user = (_a = object.user) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseGetUserPublicKeysResponse() {
    return { keys: [] };
}
exports.GetUserPublicKeysResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        for (var _i = 0, _a = message.keys; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.PublicKey.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetUserPublicKeysResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.keys.push(exports.PublicKey.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { keys: Array.isArray(object === null || object === void 0 ? void 0 : object.keys) ? object.keys.map(function (e) { return exports.PublicKey.fromJSON(e); }) : [] };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.keys) {
            obj.keys = message.keys.map(function (e) { return e ? exports.PublicKey.toJSON(e) : undefined; });
        }
        else {
            obj.keys = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.GetUserPublicKeysResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetUserPublicKeysResponse();
        message.keys = ((_a = object.keys) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.PublicKey.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseAddUserPublicKeyRequest() {
    return { user: "", key: "" };
}
exports.AddUserPublicKeyRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.user !== "") {
            writer.uint32(10).string(message.user);
        }
        if (message.key !== "") {
            writer.uint32(18).string(message.key);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseAddUserPublicKeyRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.user = reader.string();
                    break;
                case 2:
                    message.key = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { user: isSet(object.user) ? String(object.user) : "", key: isSet(object.key) ? String(object.key) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.user !== undefined && (obj.user = message.user);
        message.key !== undefined && (obj.key = message.key);
        return obj;
    },
    create: function (base) {
        return exports.AddUserPublicKeyRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseAddUserPublicKeyRequest();
        message.user = (_a = object.user) !== null && _a !== void 0 ? _a : "";
        message.key = (_b = object.key) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseAddUserPublicKeyResponse() {
    return {};
}
exports.AddUserPublicKeyResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseAddUserPublicKeyResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.AddUserPublicKeyResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseAddUserPublicKeyResponse();
        return message;
    }
};
function createBaseDeleteUserPublicKeyRequest() {
    return { user: "", fingerprint: "" };
}
exports.DeleteUserPublicKeyRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.user !== "") {
            writer.uint32(10).string(message.user);
        }
        if (message.fingerprint !== "") {
            writer.uint32(18).string(message.fingerprint);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteUserPublicKeyRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.user = reader.string();
                    break;
                case 2:
                    message.fingerprint = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            user: isSet(object.user) ? String(object.user) : "",
            fingerprint: isSet(object.fingerprint) ? String(object.fingerprint) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.user !== undefined && (obj.user = message.user);
        message.fingerprint !== undefined && (obj.fingerprint = message.fingerprint);
        return obj;
    },
    create: function (base) {
        return exports.DeleteUserPublicKeyRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseDeleteUserPublicKeyRequest();
        message.user = (_a = object.user) !== null && _a !== void 0 ? _a : "";
        message.fingerprint = (_b = object.fingerprint) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseDeleteUserPublicKeyResponse() {
    return {};
}
exports.DeleteUserPublicKeyResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteUserPublicKeyResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.DeleteUserPublicKeyResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseDeleteUserPublicKeyResponse();
        return message;
    }
};
function createBaseDeleteUserPublicKeysRequest() {
    return { user: "" };
}
exports.DeleteUserPublicKeysRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.user !== "") {
            writer.uint32(10).string(message.user);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteUserPublicKeysRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.user = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { user: isSet(object.user) ? String(object.user) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.user !== undefined && (obj.user = message.user);
        return obj;
    },
    create: function (base) {
        return exports.DeleteUserPublicKeysRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseDeleteUserPublicKeysRequest();
        message.user = (_a = object.user) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseDeleteUserPublicKeysResponse() {
    return {};
}
exports.DeleteUserPublicKeysResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteUserPublicKeysResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.DeleteUserPublicKeysResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseDeleteUserPublicKeysResponse();
        return message;
    }
};
function createBaseProject() {
    return {
        name: "",
        description: "",
        members: {},
        experiments: [],
        accessMode: 0,
        gid: 0,
        deprecated: [],
        ver: 0,
        organization: "",
        orgMembership: undefined,
        category: "",
        subcategory: ""
    };
}
exports.Project = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        if (message.description !== "") {
            writer.uint32(18).string(message.description);
        }
        Object.entries(message.members).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.Project_MembersEntry.encode({ key: key, value: value }, writer.uint32(26).fork()).ldelim();
        });
        for (var _i = 0, _a = message.experiments; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(34).string(v);
        }
        if (message.accessMode !== 0) {
            writer.uint32(40).int32(message.accessMode);
        }
        if (message.gid !== 0) {
            writer.uint32(48).uint32(message.gid);
        }
        for (var _b = 0, _c = message.deprecated; _b < _c.length; _b++) {
            var v = _c[_b];
            writer.uint32(58).string(v);
        }
        if (message.ver !== 0) {
            writer.uint32(64).int64(message.ver);
        }
        if (message.organization !== "") {
            writer.uint32(74).string(message.organization);
        }
        if (message.orgMembership !== undefined) {
            exports.Member.encode(message.orgMembership, writer.uint32(82).fork()).ldelim();
        }
        if (message.category !== "") {
            writer.uint32(90).string(message.category);
        }
        if (message.subcategory !== "") {
            writer.uint32(98).string(message.subcategory);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseProject();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.description = reader.string();
                    break;
                case 3:
                    var entry3 = exports.Project_MembersEntry.decode(reader, reader.uint32());
                    if (entry3.value !== undefined) {
                        message.members[entry3.key] = entry3.value;
                    }
                    break;
                case 4:
                    message.experiments.push(reader.string());
                    break;
                case 5:
                    message.accessMode = reader.int32();
                    break;
                case 6:
                    message.gid = reader.uint32();
                    break;
                case 7:
                    message.deprecated.push(reader.string());
                    break;
                case 8:
                    message.ver = longToNumber(reader.int64());
                    break;
                case 9:
                    message.organization = reader.string();
                    break;
                case 10:
                    message.orgMembership = exports.Member.decode(reader, reader.uint32());
                    break;
                case 11:
                    message.category = reader.string();
                    break;
                case 12:
                    message.subcategory = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : "",
            description: isSet(object.description) ? String(object.description) : "",
            members: isObject(object.members)
                ? Object.entries(object.members).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = exports.Member.fromJSON(value);
                    return acc;
                }, {})
                : {},
            experiments: Array.isArray(object === null || object === void 0 ? void 0 : object.experiments) ? object.experiments.map(function (e) { return String(e); }) : [],
            accessMode: isSet(object.accessMode) ? accessModeFromJSON(object.accessMode) : 0,
            gid: isSet(object.gid) ? Number(object.gid) : 0,
            deprecated: Array.isArray(object === null || object === void 0 ? void 0 : object.deprecated) ? object.deprecated.map(function (e) { return String(e); }) : [],
            ver: isSet(object.ver) ? Number(object.ver) : 0,
            organization: isSet(object.organization) ? String(object.organization) : "",
            orgMembership: isSet(object.orgMembership) ? exports.Member.fromJSON(object.orgMembership) : undefined,
            category: isSet(object.category) ? String(object.category) : "",
            subcategory: isSet(object.subcategory) ? String(object.subcategory) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        message.description !== undefined && (obj.description = message.description);
        obj.members = {};
        if (message.members) {
            Object.entries(message.members).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.members[k] = exports.Member.toJSON(v);
            });
        }
        if (message.experiments) {
            obj.experiments = message.experiments.map(function (e) { return e; });
        }
        else {
            obj.experiments = [];
        }
        message.accessMode !== undefined && (obj.accessMode = accessModeToJSON(message.accessMode));
        message.gid !== undefined && (obj.gid = Math.round(message.gid));
        if (message.deprecated) {
            obj.deprecated = message.deprecated.map(function (e) { return e; });
        }
        else {
            obj.deprecated = [];
        }
        message.ver !== undefined && (obj.ver = Math.round(message.ver));
        message.organization !== undefined && (obj.organization = message.organization);
        message.orgMembership !== undefined &&
            (obj.orgMembership = message.orgMembership ? exports.Member.toJSON(message.orgMembership) : undefined);
        message.category !== undefined && (obj.category = message.category);
        message.subcategory !== undefined && (obj.subcategory = message.subcategory);
        return obj;
    },
    create: function (base) {
        return exports.Project.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
        var message = createBaseProject();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        message.description = (_b = object.description) !== null && _b !== void 0 ? _b : "";
        message.members = Object.entries((_c = object.members) !== null && _c !== void 0 ? _c : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = exports.Member.fromPartial(value);
            }
            return acc;
        }, {});
        message.experiments = ((_d = object.experiments) === null || _d === void 0 ? void 0 : _d.map(function (e) { return e; })) || [];
        message.accessMode = (_e = object.accessMode) !== null && _e !== void 0 ? _e : 0;
        message.gid = (_f = object.gid) !== null && _f !== void 0 ? _f : 0;
        message.deprecated = ((_g = object.deprecated) === null || _g === void 0 ? void 0 : _g.map(function (e) { return e; })) || [];
        message.ver = (_h = object.ver) !== null && _h !== void 0 ? _h : 0;
        message.organization = (_j = object.organization) !== null && _j !== void 0 ? _j : "";
        message.orgMembership = (object.orgMembership !== undefined && object.orgMembership !== null)
            ? exports.Member.fromPartial(object.orgMembership)
            : undefined;
        message.category = (_k = object.category) !== null && _k !== void 0 ? _k : "";
        message.subcategory = (_l = object.subcategory) !== null && _l !== void 0 ? _l : "";
        return message;
    }
};
function createBaseProject_MembersEntry() {
    return { key: "", value: undefined };
}
exports.Project_MembersEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== undefined) {
            exports.Member.encode(message.value, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseProject_MembersEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            key: isSet(object.key) ? String(object.key) : "",
            value: isSet(object.value) ? exports.Member.fromJSON(object.value) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value ? exports.Member.toJSON(message.value) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.Project_MembersEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseProject_MembersEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (object.value !== undefined && object.value !== null)
            ? exports.Member.fromPartial(object.value)
            : undefined;
        return message;
    }
};
function createBaseGetProjectsRequest() {
    return { filter: 0 };
}
exports.GetProjectsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.filter !== 0) {
            writer.uint32(8).int32(message.filter);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProjectsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.filter = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { filter: isSet(object.filter) ? filterModeFromJSON(object.filter) : 0 };
    },
    toJSON: function (message) {
        var obj = {};
        message.filter !== undefined && (obj.filter = filterModeToJSON(message.filter));
        return obj;
    },
    create: function (base) {
        return exports.GetProjectsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetProjectsRequest();
        message.filter = (_a = object.filter) !== null && _a !== void 0 ? _a : 0;
        return message;
    }
};
function createBaseGetProjectsResponse() {
    return { projects: [] };
}
exports.GetProjectsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        for (var _i = 0, _a = message.projects; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.Project.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProjectsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.projects.push(exports.Project.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { projects: Array.isArray(object === null || object === void 0 ? void 0 : object.projects) ? object.projects.map(function (e) { return exports.Project.fromJSON(e); }) : [] };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.projects) {
            obj.projects = message.projects.map(function (e) { return e ? exports.Project.toJSON(e) : undefined; });
        }
        else {
            obj.projects = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.GetProjectsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetProjectsResponse();
        message.projects = ((_a = object.projects) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.Project.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseGetProjectRequest() {
    return { name: "" };
}
exports.GetProjectRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProjectRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { name: isSet(object.name) ? String(object.name) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        return obj;
    },
    create: function (base) {
        return exports.GetProjectRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetProjectRequest();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseGetProjectResponse() {
    return { project: undefined };
}
exports.GetProjectResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.project !== undefined) {
            exports.Project.encode(message.project, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProjectResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.project = exports.Project.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { project: isSet(object.project) ? exports.Project.fromJSON(object.project) : undefined };
    },
    toJSON: function (message) {
        var obj = {};
        message.project !== undefined && (obj.project = message.project ? exports.Project.toJSON(message.project) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.GetProjectResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetProjectResponse();
        message.project = (object.project !== undefined && object.project !== null)
            ? exports.Project.fromPartial(object.project)
            : undefined;
        return message;
    }
};
function createBaseDeleteProjectRequest() {
    return { user: "", name: "" };
}
exports.DeleteProjectRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.user !== "") {
            writer.uint32(10).string(message.user);
        }
        if (message.name !== "") {
            writer.uint32(18).string(message.name);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteProjectRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.user = reader.string();
                    break;
                case 2:
                    message.name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { user: isSet(object.user) ? String(object.user) : "", name: isSet(object.name) ? String(object.name) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.user !== undefined && (obj.user = message.user);
        message.name !== undefined && (obj.name = message.name);
        return obj;
    },
    create: function (base) {
        return exports.DeleteProjectRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseDeleteProjectRequest();
        message.user = (_a = object.user) !== null && _a !== void 0 ? _a : "";
        message.name = (_b = object.name) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseDeleteProjectResponse() {
    return {};
}
exports.DeleteProjectResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteProjectResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.DeleteProjectResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseDeleteProjectResponse();
        return message;
    }
};
function createBaseCreateProjectRequest() {
    return { user: "", project: undefined, status: false };
}
exports.CreateProjectRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.user !== "") {
            writer.uint32(10).string(message.user);
        }
        if (message.project !== undefined) {
            exports.Project.encode(message.project, writer.uint32(18).fork()).ldelim();
        }
        if (message.status === true) {
            writer.uint32(24).bool(message.status);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCreateProjectRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.user = reader.string();
                    break;
                case 2:
                    message.project = exports.Project.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.status = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            user: isSet(object.user) ? String(object.user) : "",
            project: isSet(object.project) ? exports.Project.fromJSON(object.project) : undefined,
            status: isSet(object.status) ? Boolean(object.status) : false
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.user !== undefined && (obj.user = message.user);
        message.project !== undefined && (obj.project = message.project ? exports.Project.toJSON(message.project) : undefined);
        message.status !== undefined && (obj.status = message.status);
        return obj;
    },
    create: function (base) {
        return exports.CreateProjectRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseCreateProjectRequest();
        message.user = (_a = object.user) !== null && _a !== void 0 ? _a : "";
        message.project = (object.project !== undefined && object.project !== null)
            ? exports.Project.fromPartial(object.project)
            : undefined;
        message.status = (_b = object.status) !== null && _b !== void 0 ? _b : false;
        return message;
    }
};
function createBaseCreateProjectResponse() {
    return { status: undefined };
}
exports.CreateProjectResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.status !== undefined) {
            taskstatus_1.TaskForest.encode(message.status, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCreateProjectResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.status = taskstatus_1.TaskForest.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { status: isSet(object.status) ? taskstatus_1.TaskForest.fromJSON(object.status) : undefined };
    },
    toJSON: function (message) {
        var obj = {};
        message.status !== undefined && (obj.status = message.status ? taskstatus_1.TaskForest.toJSON(message.status) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.CreateProjectResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseCreateProjectResponse();
        message.status = (object.status !== undefined && object.status !== null)
            ? taskstatus_1.TaskForest.fromPartial(object.status)
            : undefined;
        return message;
    }
};
function createBaseDescriptionUpdate() {
    return { value: "" };
}
exports.DescriptionUpdate = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.value !== "") {
            writer.uint32(10).string(message.value);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDescriptionUpdate();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.value = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { value: isSet(object.value) ? String(object.value) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.value !== undefined && (obj.value = message.value);
        return obj;
    },
    create: function (base) {
        return exports.DescriptionUpdate.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseDescriptionUpdate();
        message.value = (_a = object.value) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseUpdateProjectRequest() {
    return { name: "", description: undefined, accessMode: undefined, members: undefined, organization: undefined };
}
exports.UpdateProjectRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        if (message.description !== undefined) {
            exports.DescriptionUpdate.encode(message.description, writer.uint32(18).fork()).ldelim();
        }
        if (message.accessMode !== undefined) {
            exports.AccessModeUpdate.encode(message.accessMode, writer.uint32(26).fork()).ldelim();
        }
        if (message.members !== undefined) {
            exports.MembershipUpdate.encode(message.members, writer.uint32(34).fork()).ldelim();
        }
        if (message.organization !== undefined) {
            exports.MembershipUpdate.encode(message.organization, writer.uint32(42).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateProjectRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.description = exports.DescriptionUpdate.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.accessMode = exports.AccessModeUpdate.decode(reader, reader.uint32());
                    break;
                case 4:
                    message.members = exports.MembershipUpdate.decode(reader, reader.uint32());
                    break;
                case 5:
                    message.organization = exports.MembershipUpdate.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : "",
            description: isSet(object.description) ? exports.DescriptionUpdate.fromJSON(object.description) : undefined,
            accessMode: isSet(object.accessMode) ? exports.AccessModeUpdate.fromJSON(object.accessMode) : undefined,
            members: isSet(object.members) ? exports.MembershipUpdate.fromJSON(object.members) : undefined,
            organization: isSet(object.organization) ? exports.MembershipUpdate.fromJSON(object.organization) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        message.description !== undefined &&
            (obj.description = message.description ? exports.DescriptionUpdate.toJSON(message.description) : undefined);
        message.accessMode !== undefined &&
            (obj.accessMode = message.accessMode ? exports.AccessModeUpdate.toJSON(message.accessMode) : undefined);
        message.members !== undefined &&
            (obj.members = message.members ? exports.MembershipUpdate.toJSON(message.members) : undefined);
        message.organization !== undefined &&
            (obj.organization = message.organization ? exports.MembershipUpdate.toJSON(message.organization) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.UpdateProjectRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseUpdateProjectRequest();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        message.description = (object.description !== undefined && object.description !== null)
            ? exports.DescriptionUpdate.fromPartial(object.description)
            : undefined;
        message.accessMode = (object.accessMode !== undefined && object.accessMode !== null)
            ? exports.AccessModeUpdate.fromPartial(object.accessMode)
            : undefined;
        message.members = (object.members !== undefined && object.members !== null)
            ? exports.MembershipUpdate.fromPartial(object.members)
            : undefined;
        message.organization = (object.organization !== undefined && object.organization !== null)
            ? exports.MembershipUpdate.fromPartial(object.organization)
            : undefined;
        return message;
    }
};
function createBaseUpdateProjectResponse() {
    return {};
}
exports.UpdateProjectResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateProjectResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.UpdateProjectResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseUpdateProjectResponse();
        return message;
    }
};
function createBaseGetProjectMembersRequest() {
    return { name: "" };
}
exports.GetProjectMembersRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProjectMembersRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { name: isSet(object.name) ? String(object.name) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        return obj;
    },
    create: function (base) {
        return exports.GetProjectMembersRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetProjectMembersRequest();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseGetProjectMembersResponse() {
    return { members: [] };
}
exports.GetProjectMembersResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        for (var _i = 0, _a = message.members; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.Member.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProjectMembersResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.members.push(exports.Member.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { members: Array.isArray(object === null || object === void 0 ? void 0 : object.members) ? object.members.map(function (e) { return exports.Member.fromJSON(e); }) : [] };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.members) {
            obj.members = message.members.map(function (e) { return e ? exports.Member.toJSON(e) : undefined; });
        }
        else {
            obj.members = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.GetProjectMembersResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetProjectMembersResponse();
        message.members = ((_a = object.members) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.Member.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseGetProjectMemberRequest() {
    return { project: "", member: "" };
}
exports.GetProjectMemberRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.project !== "") {
            writer.uint32(10).string(message.project);
        }
        if (message.member !== "") {
            writer.uint32(18).string(message.member);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProjectMemberRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.project = reader.string();
                    break;
                case 2:
                    message.member = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            project: isSet(object.project) ? String(object.project) : "",
            member: isSet(object.member) ? String(object.member) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.project !== undefined && (obj.project = message.project);
        message.member !== undefined && (obj.member = message.member);
        return obj;
    },
    create: function (base) {
        return exports.GetProjectMemberRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetProjectMemberRequest();
        message.project = (_a = object.project) !== null && _a !== void 0 ? _a : "";
        message.member = (_b = object.member) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseGetProjectMemberResponse() {
    return { member: undefined };
}
exports.GetProjectMemberResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.member !== undefined) {
            exports.Member.encode(message.member, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProjectMemberResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.member = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { member: isSet(object.member) ? exports.Member.fromJSON(object.member) : undefined };
    },
    toJSON: function (message) {
        var obj = {};
        message.member !== undefined && (obj.member = message.member ? exports.Member.toJSON(message.member) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.GetProjectMemberResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetProjectMemberResponse();
        message.member = (object.member !== undefined && object.member !== null)
            ? exports.Member.fromPartial(object.member)
            : undefined;
        return message;
    }
};
function createBaseAddProjectMemberRequest() {
    return { project: "", username: "", member: undefined };
}
exports.AddProjectMemberRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.project !== "") {
            writer.uint32(10).string(message.project);
        }
        if (message.username !== "") {
            writer.uint32(18).string(message.username);
        }
        if (message.member !== undefined) {
            exports.Member.encode(message.member, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseAddProjectMemberRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.project = reader.string();
                    break;
                case 2:
                    message.username = reader.string();
                    break;
                case 3:
                    message.member = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            project: isSet(object.project) ? String(object.project) : "",
            username: isSet(object.username) ? String(object.username) : "",
            member: isSet(object.member) ? exports.Member.fromJSON(object.member) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.project !== undefined && (obj.project = message.project);
        message.username !== undefined && (obj.username = message.username);
        message.member !== undefined && (obj.member = message.member ? exports.Member.toJSON(message.member) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.AddProjectMemberRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseAddProjectMemberRequest();
        message.project = (_a = object.project) !== null && _a !== void 0 ? _a : "";
        message.username = (_b = object.username) !== null && _b !== void 0 ? _b : "";
        message.member = (object.member !== undefined && object.member !== null)
            ? exports.Member.fromPartial(object.member)
            : undefined;
        return message;
    }
};
function createBaseAddProjectMemberResponse() {
    return {};
}
exports.AddProjectMemberResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseAddProjectMemberResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.AddProjectMemberResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseAddProjectMemberResponse();
        return message;
    }
};
function createBaseUpdateProjectMemberRequest() {
    return { project: "", username: "", member: undefined };
}
exports.UpdateProjectMemberRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.project !== "") {
            writer.uint32(10).string(message.project);
        }
        if (message.username !== "") {
            writer.uint32(18).string(message.username);
        }
        if (message.member !== undefined) {
            exports.Member.encode(message.member, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateProjectMemberRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.project = reader.string();
                    break;
                case 2:
                    message.username = reader.string();
                    break;
                case 3:
                    message.member = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            project: isSet(object.project) ? String(object.project) : "",
            username: isSet(object.username) ? String(object.username) : "",
            member: isSet(object.member) ? exports.Member.fromJSON(object.member) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.project !== undefined && (obj.project = message.project);
        message.username !== undefined && (obj.username = message.username);
        message.member !== undefined && (obj.member = message.member ? exports.Member.toJSON(message.member) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.UpdateProjectMemberRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseUpdateProjectMemberRequest();
        message.project = (_a = object.project) !== null && _a !== void 0 ? _a : "";
        message.username = (_b = object.username) !== null && _b !== void 0 ? _b : "";
        message.member = (object.member !== undefined && object.member !== null)
            ? exports.Member.fromPartial(object.member)
            : undefined;
        return message;
    }
};
function createBaseUpdateProjectMemberResponse() {
    return {};
}
exports.UpdateProjectMemberResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateProjectMemberResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.UpdateProjectMemberResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseUpdateProjectMemberResponse();
        return message;
    }
};
function createBaseDeleteProjectMemberRequest() {
    return { project: "", member: "" };
}
exports.DeleteProjectMemberRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.project !== "") {
            writer.uint32(10).string(message.project);
        }
        if (message.member !== "") {
            writer.uint32(18).string(message.member);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteProjectMemberRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.project = reader.string();
                    break;
                case 2:
                    message.member = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            project: isSet(object.project) ? String(object.project) : "",
            member: isSet(object.member) ? String(object.member) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.project !== undefined && (obj.project = message.project);
        message.member !== undefined && (obj.member = message.member);
        return obj;
    },
    create: function (base) {
        return exports.DeleteProjectMemberRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseDeleteProjectMemberRequest();
        message.project = (_a = object.project) !== null && _a !== void 0 ? _a : "";
        message.member = (_b = object.member) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseDeleteProjectMemberResponse() {
    return {};
}
exports.DeleteProjectMemberResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteProjectMemberResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.DeleteProjectMemberResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseDeleteProjectMemberResponse();
        return message;
    }
};
function createBaseExperimentModel() {
    return { compiled: false, msg: "", realizations: [], compileTime: undefined };
}
exports.ExperimentModel = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.compiled === true) {
            writer.uint32(8).bool(message.compiled);
        }
        if (message.msg !== "") {
            writer.uint32(18).string(message.msg);
        }
        for (var _i = 0, _a = message.realizations; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(26).string(v);
        }
        if (message.compileTime !== undefined) {
            timestamp_1.Timestamp.encode(toTimestamp(message.compileTime), writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseExperimentModel();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.compiled = reader.bool();
                    break;
                case 2:
                    message.msg = reader.string();
                    break;
                case 3:
                    message.realizations.push(reader.string());
                    break;
                case 4:
                    message.compileTime = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            compiled: isSet(object.compiled) ? Boolean(object.compiled) : false,
            msg: isSet(object.msg) ? String(object.msg) : "",
            realizations: Array.isArray(object === null || object === void 0 ? void 0 : object.realizations) ? object.realizations.map(function (e) { return String(e); }) : [],
            compileTime: isSet(object.compileTime) ? fromJsonTimestamp(object.compileTime) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.compiled !== undefined && (obj.compiled = message.compiled);
        message.msg !== undefined && (obj.msg = message.msg);
        if (message.realizations) {
            obj.realizations = message.realizations.map(function (e) { return e; });
        }
        else {
            obj.realizations = [];
        }
        message.compileTime !== undefined && (obj.compileTime = message.compileTime.toISOString());
        return obj;
    },
    create: function (base) {
        return exports.ExperimentModel.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseExperimentModel();
        message.compiled = (_a = object.compiled) !== null && _a !== void 0 ? _a : false;
        message.msg = (_b = object.msg) !== null && _b !== void 0 ? _b : "";
        message.realizations = ((_c = object.realizations) === null || _c === void 0 ? void 0 : _c.map(function (e) { return e; })) || [];
        message.compileTime = (_d = object.compileTime) !== null && _d !== void 0 ? _d : undefined;
        return message;
    }
};
function createBaseExperiment() {
    return {
        name: "",
        project: "",
        description: "",
        models: {},
        accessMode: 0,
        repository: "",
        creator: "",
        maintainers: [],
        ver: 0
    };
}
exports.Experiment = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        if (message.project !== "") {
            writer.uint32(18).string(message.project);
        }
        if (message.description !== "") {
            writer.uint32(26).string(message.description);
        }
        Object.entries(message.models).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.Experiment_ModelsEntry.encode({ key: key, value: value }, writer.uint32(34).fork()).ldelim();
        });
        if (message.accessMode !== 0) {
            writer.uint32(40).int32(message.accessMode);
        }
        if (message.repository !== "") {
            writer.uint32(50).string(message.repository);
        }
        if (message.creator !== "") {
            writer.uint32(58).string(message.creator);
        }
        for (var _i = 0, _a = message.maintainers; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(66).string(v);
        }
        if (message.ver !== 0) {
            writer.uint32(72).int64(message.ver);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseExperiment();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.project = reader.string();
                    break;
                case 3:
                    message.description = reader.string();
                    break;
                case 4:
                    var entry4 = exports.Experiment_ModelsEntry.decode(reader, reader.uint32());
                    if (entry4.value !== undefined) {
                        message.models[entry4.key] = entry4.value;
                    }
                    break;
                case 5:
                    message.accessMode = reader.int32();
                    break;
                case 6:
                    message.repository = reader.string();
                    break;
                case 7:
                    message.creator = reader.string();
                    break;
                case 8:
                    message.maintainers.push(reader.string());
                    break;
                case 9:
                    message.ver = longToNumber(reader.int64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : "",
            project: isSet(object.project) ? String(object.project) : "",
            description: isSet(object.description) ? String(object.description) : "",
            models: isObject(object.models)
                ? Object.entries(object.models).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = exports.ExperimentModel.fromJSON(value);
                    return acc;
                }, {})
                : {},
            accessMode: isSet(object.accessMode) ? accessModeFromJSON(object.accessMode) : 0,
            repository: isSet(object.repository) ? String(object.repository) : "",
            creator: isSet(object.creator) ? String(object.creator) : "",
            maintainers: Array.isArray(object === null || object === void 0 ? void 0 : object.maintainers) ? object.maintainers.map(function (e) { return String(e); }) : [],
            ver: isSet(object.ver) ? Number(object.ver) : 0
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        message.project !== undefined && (obj.project = message.project);
        message.description !== undefined && (obj.description = message.description);
        obj.models = {};
        if (message.models) {
            Object.entries(message.models).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.models[k] = exports.ExperimentModel.toJSON(v);
            });
        }
        message.accessMode !== undefined && (obj.accessMode = accessModeToJSON(message.accessMode));
        message.repository !== undefined && (obj.repository = message.repository);
        message.creator !== undefined && (obj.creator = message.creator);
        if (message.maintainers) {
            obj.maintainers = message.maintainers.map(function (e) { return e; });
        }
        else {
            obj.maintainers = [];
        }
        message.ver !== undefined && (obj.ver = Math.round(message.ver));
        return obj;
    },
    create: function (base) {
        return exports.Experiment.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        var message = createBaseExperiment();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        message.project = (_b = object.project) !== null && _b !== void 0 ? _b : "";
        message.description = (_c = object.description) !== null && _c !== void 0 ? _c : "";
        message.models = Object.entries((_d = object.models) !== null && _d !== void 0 ? _d : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = exports.ExperimentModel.fromPartial(value);
            }
            return acc;
        }, {});
        message.accessMode = (_e = object.accessMode) !== null && _e !== void 0 ? _e : 0;
        message.repository = (_f = object.repository) !== null && _f !== void 0 ? _f : "";
        message.creator = (_g = object.creator) !== null && _g !== void 0 ? _g : "";
        message.maintainers = ((_h = object.maintainers) === null || _h === void 0 ? void 0 : _h.map(function (e) { return e; })) || [];
        message.ver = (_j = object.ver) !== null && _j !== void 0 ? _j : 0;
        return message;
    }
};
function createBaseExperiment_ModelsEntry() {
    return { key: "", value: undefined };
}
exports.Experiment_ModelsEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== undefined) {
            exports.ExperimentModel.encode(message.value, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseExperiment_ModelsEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = exports.ExperimentModel.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            key: isSet(object.key) ? String(object.key) : "",
            value: isSet(object.value) ? exports.ExperimentModel.fromJSON(object.value) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value ? exports.ExperimentModel.toJSON(message.value) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.Experiment_ModelsEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseExperiment_ModelsEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (object.value !== undefined && object.value !== null)
            ? exports.ExperimentModel.fromPartial(object.value)
            : undefined;
        return message;
    }
};
function createBaseGetExperimentsRequest() {
    return { filter: 0 };
}
exports.GetExperimentsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.filter !== 0) {
            writer.uint32(8).int32(message.filter);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetExperimentsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.filter = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { filter: isSet(object.filter) ? filterModeFromJSON(object.filter) : 0 };
    },
    toJSON: function (message) {
        var obj = {};
        message.filter !== undefined && (obj.filter = filterModeToJSON(message.filter));
        return obj;
    },
    create: function (base) {
        return exports.GetExperimentsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetExperimentsRequest();
        message.filter = (_a = object.filter) !== null && _a !== void 0 ? _a : 0;
        return message;
    }
};
function createBaseGetExperimentsResponse() {
    return { experiments: [] };
}
exports.GetExperimentsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        for (var _i = 0, _a = message.experiments; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.Experiment.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetExperimentsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.experiments.push(exports.Experiment.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            experiments: Array.isArray(object === null || object === void 0 ? void 0 : object.experiments) ? object.experiments.map(function (e) { return exports.Experiment.fromJSON(e); }) : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.experiments) {
            obj.experiments = message.experiments.map(function (e) { return e ? exports.Experiment.toJSON(e) : undefined; });
        }
        else {
            obj.experiments = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.GetExperimentsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetExperimentsResponse();
        message.experiments = ((_a = object.experiments) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.Experiment.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseGetProjectExperimentsRequest() {
    return { project: "" };
}
exports.GetProjectExperimentsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.project !== "") {
            writer.uint32(10).string(message.project);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProjectExperimentsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.project = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { project: isSet(object.project) ? String(object.project) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.project !== undefined && (obj.project = message.project);
        return obj;
    },
    create: function (base) {
        return exports.GetProjectExperimentsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetProjectExperimentsRequest();
        message.project = (_a = object.project) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseGetProjectExperimentsResponse() {
    return { experiments: [] };
}
exports.GetProjectExperimentsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        for (var _i = 0, _a = message.experiments; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.Experiment.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProjectExperimentsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.experiments.push(exports.Experiment.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            experiments: Array.isArray(object === null || object === void 0 ? void 0 : object.experiments) ? object.experiments.map(function (e) { return exports.Experiment.fromJSON(e); }) : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.experiments) {
            obj.experiments = message.experiments.map(function (e) { return e ? exports.Experiment.toJSON(e) : undefined; });
        }
        else {
            obj.experiments = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.GetProjectExperimentsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetProjectExperimentsResponse();
        message.experiments = ((_a = object.experiments) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.Experiment.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseGetExperimentRequest() {
    return { project: "", experiment: "", withModels: false };
}
exports.GetExperimentRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.project !== "") {
            writer.uint32(10).string(message.project);
        }
        if (message.experiment !== "") {
            writer.uint32(18).string(message.experiment);
        }
        if (message.withModels === true) {
            writer.uint32(24).bool(message.withModels);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetExperimentRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.project = reader.string();
                    break;
                case 2:
                    message.experiment = reader.string();
                    break;
                case 3:
                    message.withModels = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            project: isSet(object.project) ? String(object.project) : "",
            experiment: isSet(object.experiment) ? String(object.experiment) : "",
            withModels: isSet(object.withModels) ? Boolean(object.withModels) : false
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.project !== undefined && (obj.project = message.project);
        message.experiment !== undefined && (obj.experiment = message.experiment);
        message.withModels !== undefined && (obj.withModels = message.withModels);
        return obj;
    },
    create: function (base) {
        return exports.GetExperimentRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetExperimentRequest();
        message.project = (_a = object.project) !== null && _a !== void 0 ? _a : "";
        message.experiment = (_b = object.experiment) !== null && _b !== void 0 ? _b : "";
        message.withModels = (_c = object.withModels) !== null && _c !== void 0 ? _c : false;
        return message;
    }
};
function createBaseXpNetModel() {
    return { compiled: false, model: undefined };
}
exports.XpNetModel = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.compiled === true) {
            writer.uint32(8).bool(message.compiled);
        }
        if (message.model !== undefined) {
            core_1.Network.encode(message.model, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseXpNetModel();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.compiled = reader.bool();
                    break;
                case 2:
                    message.model = core_1.Network.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            compiled: isSet(object.compiled) ? Boolean(object.compiled) : false,
            model: isSet(object.model) ? core_1.Network.fromJSON(object.model) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.compiled !== undefined && (obj.compiled = message.compiled);
        message.model !== undefined && (obj.model = message.model ? core_1.Network.toJSON(message.model) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.XpNetModel.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseXpNetModel();
        message.compiled = (_a = object.compiled) !== null && _a !== void 0 ? _a : false;
        message.model = (object.model !== undefined && object.model !== null)
            ? core_1.Network.fromPartial(object.model)
            : undefined;
        return message;
    }
};
function createBaseGetExperimentResponse() {
    return { experiment: undefined, models: {} };
}
exports.GetExperimentResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.experiment !== undefined) {
            exports.Experiment.encode(message.experiment, writer.uint32(10).fork()).ldelim();
        }
        Object.entries(message.models).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.GetExperimentResponse_ModelsEntry.encode({ key: key, value: value }, writer.uint32(18).fork()).ldelim();
        });
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetExperimentResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.experiment = exports.Experiment.decode(reader, reader.uint32());
                    break;
                case 2:
                    var entry2 = exports.GetExperimentResponse_ModelsEntry.decode(reader, reader.uint32());
                    if (entry2.value !== undefined) {
                        message.models[entry2.key] = entry2.value;
                    }
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            experiment: isSet(object.experiment) ? exports.Experiment.fromJSON(object.experiment) : undefined,
            models: isObject(object.models)
                ? Object.entries(object.models).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = exports.XpNetModel.fromJSON(value);
                    return acc;
                }, {})
                : {}
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.experiment !== undefined &&
            (obj.experiment = message.experiment ? exports.Experiment.toJSON(message.experiment) : undefined);
        obj.models = {};
        if (message.models) {
            Object.entries(message.models).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.models[k] = exports.XpNetModel.toJSON(v);
            });
        }
        return obj;
    },
    create: function (base) {
        return exports.GetExperimentResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetExperimentResponse();
        message.experiment = (object.experiment !== undefined && object.experiment !== null)
            ? exports.Experiment.fromPartial(object.experiment)
            : undefined;
        message.models = Object.entries((_a = object.models) !== null && _a !== void 0 ? _a : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = exports.XpNetModel.fromPartial(value);
            }
            return acc;
        }, {});
        return message;
    }
};
function createBaseGetExperimentResponse_ModelsEntry() {
    return { key: "", value: undefined };
}
exports.GetExperimentResponse_ModelsEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== undefined) {
            exports.XpNetModel.encode(message.value, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetExperimentResponse_ModelsEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = exports.XpNetModel.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            key: isSet(object.key) ? String(object.key) : "",
            value: isSet(object.value) ? exports.XpNetModel.fromJSON(object.value) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value ? exports.XpNetModel.toJSON(message.value) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.GetExperimentResponse_ModelsEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetExperimentResponse_ModelsEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (object.value !== undefined && object.value !== null)
            ? exports.XpNetModel.fromPartial(object.value)
            : undefined;
        return message;
    }
};
function createBaseUpdateExperimentRequest() {
    return { name: "", project: "", description: undefined, accessMode: undefined, creator: "", maintainers: [] };
}
exports.UpdateExperimentRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        if (message.project !== "") {
            writer.uint32(18).string(message.project);
        }
        if (message.description !== undefined) {
            exports.DescriptionUpdate.encode(message.description, writer.uint32(26).fork()).ldelim();
        }
        if (message.accessMode !== undefined) {
            exports.AccessModeUpdate.encode(message.accessMode, writer.uint32(34).fork()).ldelim();
        }
        if (message.creator !== "") {
            writer.uint32(42).string(message.creator);
        }
        for (var _i = 0, _a = message.maintainers; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(50).string(v);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateExperimentRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.project = reader.string();
                    break;
                case 3:
                    message.description = exports.DescriptionUpdate.decode(reader, reader.uint32());
                    break;
                case 4:
                    message.accessMode = exports.AccessModeUpdate.decode(reader, reader.uint32());
                    break;
                case 5:
                    message.creator = reader.string();
                    break;
                case 6:
                    message.maintainers.push(reader.string());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : "",
            project: isSet(object.project) ? String(object.project) : "",
            description: isSet(object.description) ? exports.DescriptionUpdate.fromJSON(object.description) : undefined,
            accessMode: isSet(object.accessMode) ? exports.AccessModeUpdate.fromJSON(object.accessMode) : undefined,
            creator: isSet(object.creator) ? String(object.creator) : "",
            maintainers: Array.isArray(object === null || object === void 0 ? void 0 : object.maintainers) ? object.maintainers.map(function (e) { return String(e); }) : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        message.project !== undefined && (obj.project = message.project);
        message.description !== undefined &&
            (obj.description = message.description ? exports.DescriptionUpdate.toJSON(message.description) : undefined);
        message.accessMode !== undefined &&
            (obj.accessMode = message.accessMode ? exports.AccessModeUpdate.toJSON(message.accessMode) : undefined);
        message.creator !== undefined && (obj.creator = message.creator);
        if (message.maintainers) {
            obj.maintainers = message.maintainers.map(function (e) { return e; });
        }
        else {
            obj.maintainers = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.UpdateExperimentRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseUpdateExperimentRequest();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        message.project = (_b = object.project) !== null && _b !== void 0 ? _b : "";
        message.description = (object.description !== undefined && object.description !== null)
            ? exports.DescriptionUpdate.fromPartial(object.description)
            : undefined;
        message.accessMode = (object.accessMode !== undefined && object.accessMode !== null)
            ? exports.AccessModeUpdate.fromPartial(object.accessMode)
            : undefined;
        message.creator = (_c = object.creator) !== null && _c !== void 0 ? _c : "";
        message.maintainers = ((_d = object.maintainers) === null || _d === void 0 ? void 0 : _d.map(function (e) { return e; })) || [];
        return message;
    }
};
function createBaseUpdateExperimentResponse() {
    return {};
}
exports.UpdateExperimentResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateExperimentResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.UpdateExperimentResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseUpdateExperimentResponse();
        return message;
    }
};
function createBaseCreateExperimentRequest() {
    return { experiment: undefined };
}
exports.CreateExperimentRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.experiment !== undefined) {
            exports.Experiment.encode(message.experiment, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCreateExperimentRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.experiment = exports.Experiment.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { experiment: isSet(object.experiment) ? exports.Experiment.fromJSON(object.experiment) : undefined };
    },
    toJSON: function (message) {
        var obj = {};
        message.experiment !== undefined &&
            (obj.experiment = message.experiment ? exports.Experiment.toJSON(message.experiment) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.CreateExperimentRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseCreateExperimentRequest();
        message.experiment = (object.experiment !== undefined && object.experiment !== null)
            ? exports.Experiment.fromPartial(object.experiment)
            : undefined;
        return message;
    }
};
function createBaseCreateExperimentResponse() {
    return {};
}
exports.CreateExperimentResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCreateExperimentResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.CreateExperimentResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseCreateExperimentResponse();
        return message;
    }
};
function createBaseDeleteExperimentRequest() {
    return { project: "", experiment: "" };
}
exports.DeleteExperimentRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.project !== "") {
            writer.uint32(10).string(message.project);
        }
        if (message.experiment !== "") {
            writer.uint32(18).string(message.experiment);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteExperimentRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.project = reader.string();
                    break;
                case 2:
                    message.experiment = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            project: isSet(object.project) ? String(object.project) : "",
            experiment: isSet(object.experiment) ? String(object.experiment) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.project !== undefined && (obj.project = message.project);
        message.experiment !== undefined && (obj.experiment = message.experiment);
        return obj;
    },
    create: function (base) {
        return exports.DeleteExperimentRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseDeleteExperimentRequest();
        message.project = (_a = object.project) !== null && _a !== void 0 ? _a : "";
        message.experiment = (_b = object.experiment) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseDeleteExperimentResponse() {
    return {};
}
exports.DeleteExperimentResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteExperimentResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.DeleteExperimentResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseDeleteExperimentResponse();
        return message;
    }
};
function createBaseGetRevisionRequest() {
    return { project: "", experiment: "", revision: "", encoding: 0 };
}
exports.GetRevisionRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.project !== "") {
            writer.uint32(10).string(message.project);
        }
        if (message.experiment !== "") {
            writer.uint32(18).string(message.experiment);
        }
        if (message.revision !== "") {
            writer.uint32(26).string(message.revision);
        }
        if (message.encoding !== 0) {
            writer.uint32(32).int32(message.encoding);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetRevisionRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.project = reader.string();
                    break;
                case 2:
                    message.experiment = reader.string();
                    break;
                case 3:
                    message.revision = reader.string();
                    break;
                case 4:
                    message.encoding = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            project: isSet(object.project) ? String(object.project) : "",
            experiment: isSet(object.experiment) ? String(object.experiment) : "",
            revision: isSet(object.revision) ? String(object.revision) : "",
            encoding: isSet(object.encoding) ? getRevisionRequest_EncodingFromJSON(object.encoding) : 0
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.project !== undefined && (obj.project = message.project);
        message.experiment !== undefined && (obj.experiment = message.experiment);
        message.revision !== undefined && (obj.revision = message.revision);
        message.encoding !== undefined && (obj.encoding = getRevisionRequest_EncodingToJSON(message.encoding));
        return obj;
    },
    create: function (base) {
        return exports.GetRevisionRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseGetRevisionRequest();
        message.project = (_a = object.project) !== null && _a !== void 0 ? _a : "";
        message.experiment = (_b = object.experiment) !== null && _b !== void 0 ? _b : "";
        message.revision = (_c = object.revision) !== null && _c !== void 0 ? _c : "";
        message.encoding = (_d = object.encoding) !== null && _d !== void 0 ? _d : 0;
        return message;
    }
};
function createBaseGetRevisionResponse() {
    return { model: undefined, encoding: "", ModelFile: "" };
}
exports.GetRevisionResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.model !== undefined) {
            exports.XpNetModel.encode(message.model, writer.uint32(10).fork()).ldelim();
        }
        if (message.encoding !== "") {
            writer.uint32(18).string(message.encoding);
        }
        if (message.ModelFile !== "") {
            writer.uint32(26).string(message.ModelFile);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetRevisionResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.model = exports.XpNetModel.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.encoding = reader.string();
                    break;
                case 3:
                    message.ModelFile = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            model: isSet(object.model) ? exports.XpNetModel.fromJSON(object.model) : undefined,
            encoding: isSet(object.encoding) ? String(object.encoding) : "",
            ModelFile: isSet(object.ModelFile) ? String(object.ModelFile) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.model !== undefined && (obj.model = message.model ? exports.XpNetModel.toJSON(message.model) : undefined);
        message.encoding !== undefined && (obj.encoding = message.encoding);
        message.ModelFile !== undefined && (obj.ModelFile = message.ModelFile);
        return obj;
    },
    create: function (base) {
        return exports.GetRevisionResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetRevisionResponse();
        message.model = (object.model !== undefined && object.model !== null)
            ? exports.XpNetModel.fromPartial(object.model)
            : undefined;
        message.encoding = (_a = object.encoding) !== null && _a !== void 0 ? _a : "";
        message.ModelFile = (_b = object.ModelFile) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseOrganization() {
    return {
        name: "",
        description: "",
        oid: 0,
        members: {},
        projects: {},
        state: 0,
        accessMode: 0,
        ver: 0,
        category: "",
        subcategory: ""
    };
}
exports.Organization = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        if (message.description !== "") {
            writer.uint32(18).string(message.description);
        }
        if (message.oid !== 0) {
            writer.uint32(24).uint32(message.oid);
        }
        Object.entries(message.members).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.Organization_MembersEntry.encode({ key: key, value: value }, writer.uint32(34).fork()).ldelim();
        });
        Object.entries(message.projects).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.Organization_ProjectsEntry.encode({ key: key, value: value }, writer.uint32(42).fork()).ldelim();
        });
        if (message.state !== 0) {
            writer.uint32(48).int32(message.state);
        }
        if (message.accessMode !== 0) {
            writer.uint32(56).int32(message.accessMode);
        }
        if (message.ver !== 0) {
            writer.uint32(64).int64(message.ver);
        }
        if (message.category !== "") {
            writer.uint32(74).string(message.category);
        }
        if (message.subcategory !== "") {
            writer.uint32(82).string(message.subcategory);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseOrganization();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.description = reader.string();
                    break;
                case 3:
                    message.oid = reader.uint32();
                    break;
                case 4:
                    var entry4 = exports.Organization_MembersEntry.decode(reader, reader.uint32());
                    if (entry4.value !== undefined) {
                        message.members[entry4.key] = entry4.value;
                    }
                    break;
                case 5:
                    var entry5 = exports.Organization_ProjectsEntry.decode(reader, reader.uint32());
                    if (entry5.value !== undefined) {
                        message.projects[entry5.key] = entry5.value;
                    }
                    break;
                case 6:
                    message.state = reader.int32();
                    break;
                case 7:
                    message.accessMode = reader.int32();
                    break;
                case 8:
                    message.ver = longToNumber(reader.int64());
                    break;
                case 9:
                    message.category = reader.string();
                    break;
                case 10:
                    message.subcategory = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : "",
            description: isSet(object.description) ? String(object.description) : "",
            oid: isSet(object.oid) ? Number(object.oid) : 0,
            members: isObject(object.members)
                ? Object.entries(object.members).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = exports.Member.fromJSON(value);
                    return acc;
                }, {})
                : {},
            projects: isObject(object.projects)
                ? Object.entries(object.projects).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = exports.Member.fromJSON(value);
                    return acc;
                }, {})
                : {},
            state: isSet(object.state) ? userStateFromJSON(object.state) : 0,
            accessMode: isSet(object.accessMode) ? accessModeFromJSON(object.accessMode) : 0,
            ver: isSet(object.ver) ? Number(object.ver) : 0,
            category: isSet(object.category) ? String(object.category) : "",
            subcategory: isSet(object.subcategory) ? String(object.subcategory) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        message.description !== undefined && (obj.description = message.description);
        message.oid !== undefined && (obj.oid = Math.round(message.oid));
        obj.members = {};
        if (message.members) {
            Object.entries(message.members).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.members[k] = exports.Member.toJSON(v);
            });
        }
        obj.projects = {};
        if (message.projects) {
            Object.entries(message.projects).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.projects[k] = exports.Member.toJSON(v);
            });
        }
        message.state !== undefined && (obj.state = userStateToJSON(message.state));
        message.accessMode !== undefined && (obj.accessMode = accessModeToJSON(message.accessMode));
        message.ver !== undefined && (obj.ver = Math.round(message.ver));
        message.category !== undefined && (obj.category = message.category);
        message.subcategory !== undefined && (obj.subcategory = message.subcategory);
        return obj;
    },
    create: function (base) {
        return exports.Organization.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
        var message = createBaseOrganization();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        message.description = (_b = object.description) !== null && _b !== void 0 ? _b : "";
        message.oid = (_c = object.oid) !== null && _c !== void 0 ? _c : 0;
        message.members = Object.entries((_d = object.members) !== null && _d !== void 0 ? _d : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = exports.Member.fromPartial(value);
            }
            return acc;
        }, {});
        message.projects = Object.entries((_e = object.projects) !== null && _e !== void 0 ? _e : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = exports.Member.fromPartial(value);
            }
            return acc;
        }, {});
        message.state = (_f = object.state) !== null && _f !== void 0 ? _f : 0;
        message.accessMode = (_g = object.accessMode) !== null && _g !== void 0 ? _g : 0;
        message.ver = (_h = object.ver) !== null && _h !== void 0 ? _h : 0;
        message.category = (_j = object.category) !== null && _j !== void 0 ? _j : "";
        message.subcategory = (_k = object.subcategory) !== null && _k !== void 0 ? _k : "";
        return message;
    }
};
function createBaseOrganization_MembersEntry() {
    return { key: "", value: undefined };
}
exports.Organization_MembersEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== undefined) {
            exports.Member.encode(message.value, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseOrganization_MembersEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            key: isSet(object.key) ? String(object.key) : "",
            value: isSet(object.value) ? exports.Member.fromJSON(object.value) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value ? exports.Member.toJSON(message.value) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.Organization_MembersEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseOrganization_MembersEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (object.value !== undefined && object.value !== null)
            ? exports.Member.fromPartial(object.value)
            : undefined;
        return message;
    }
};
function createBaseOrganization_ProjectsEntry() {
    return { key: "", value: undefined };
}
exports.Organization_ProjectsEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== undefined) {
            exports.Member.encode(message.value, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseOrganization_ProjectsEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            key: isSet(object.key) ? String(object.key) : "",
            value: isSet(object.value) ? exports.Member.fromJSON(object.value) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value ? exports.Member.toJSON(message.value) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.Organization_ProjectsEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseOrganization_ProjectsEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (object.value !== undefined && object.value !== null)
            ? exports.Member.fromPartial(object.value)
            : undefined;
        return message;
    }
};
function createBaseActivateOrganizationRequest() {
    return { organization: "" };
}
exports.ActivateOrganizationRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.organization !== "") {
            writer.uint32(10).string(message.organization);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseActivateOrganizationRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.organization = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { organization: isSet(object.organization) ? String(object.organization) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.organization !== undefined && (obj.organization = message.organization);
        return obj;
    },
    create: function (base) {
        return exports.ActivateOrganizationRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseActivateOrganizationRequest();
        message.organization = (_a = object.organization) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseActivateOrganizationResponse() {
    return {};
}
exports.ActivateOrganizationResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseActivateOrganizationResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.ActivateOrganizationResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseActivateOrganizationResponse();
        return message;
    }
};
function createBaseFreezeOrganizationRequest() {
    return { organization: "" };
}
exports.FreezeOrganizationRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.organization !== "") {
            writer.uint32(10).string(message.organization);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseFreezeOrganizationRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.organization = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { organization: isSet(object.organization) ? String(object.organization) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.organization !== undefined && (obj.organization = message.organization);
        return obj;
    },
    create: function (base) {
        return exports.FreezeOrganizationRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseFreezeOrganizationRequest();
        message.organization = (_a = object.organization) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseFreezeOrganizationResponse() {
    return {};
}
exports.FreezeOrganizationResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseFreezeOrganizationResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.FreezeOrganizationResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseFreezeOrganizationResponse();
        return message;
    }
};
function createBaseGetOrganizationsRequest() {
    return { filter: 0 };
}
exports.GetOrganizationsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.filter !== 0) {
            writer.uint32(8).int32(message.filter);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetOrganizationsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.filter = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { filter: isSet(object.filter) ? filterModeFromJSON(object.filter) : 0 };
    },
    toJSON: function (message) {
        var obj = {};
        message.filter !== undefined && (obj.filter = filterModeToJSON(message.filter));
        return obj;
    },
    create: function (base) {
        return exports.GetOrganizationsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetOrganizationsRequest();
        message.filter = (_a = object.filter) !== null && _a !== void 0 ? _a : 0;
        return message;
    }
};
function createBaseGetOrganizationsResponse() {
    return { organizations: [] };
}
exports.GetOrganizationsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        for (var _i = 0, _a = message.organizations; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.Organization.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetOrganizationsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.organizations.push(exports.Organization.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            organizations: Array.isArray(object === null || object === void 0 ? void 0 : object.organizations)
                ? object.organizations.map(function (e) { return exports.Organization.fromJSON(e); })
                : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.organizations) {
            obj.organizations = message.organizations.map(function (e) { return e ? exports.Organization.toJSON(e) : undefined; });
        }
        else {
            obj.organizations = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.GetOrganizationsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetOrganizationsResponse();
        message.organizations = ((_a = object.organizations) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.Organization.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseGetOrganizationRequest() {
    return { name: "" };
}
exports.GetOrganizationRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetOrganizationRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { name: isSet(object.name) ? String(object.name) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        return obj;
    },
    create: function (base) {
        return exports.GetOrganizationRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetOrganizationRequest();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseGetOrganizationResponse() {
    return { organization: undefined };
}
exports.GetOrganizationResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.organization !== undefined) {
            exports.Organization.encode(message.organization, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetOrganizationResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.organization = exports.Organization.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { organization: isSet(object.organization) ? exports.Organization.fromJSON(object.organization) : undefined };
    },
    toJSON: function (message) {
        var obj = {};
        message.organization !== undefined &&
            (obj.organization = message.organization ? exports.Organization.toJSON(message.organization) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.GetOrganizationResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetOrganizationResponse();
        message.organization = (object.organization !== undefined && object.organization !== null)
            ? exports.Organization.fromPartial(object.organization)
            : undefined;
        return message;
    }
};
function createBaseDeleteOrganizationRequest() {
    return { user: "", name: "" };
}
exports.DeleteOrganizationRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.user !== "") {
            writer.uint32(10).string(message.user);
        }
        if (message.name !== "") {
            writer.uint32(18).string(message.name);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteOrganizationRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.user = reader.string();
                    break;
                case 2:
                    message.name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { user: isSet(object.user) ? String(object.user) : "", name: isSet(object.name) ? String(object.name) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.user !== undefined && (obj.user = message.user);
        message.name !== undefined && (obj.name = message.name);
        return obj;
    },
    create: function (base) {
        return exports.DeleteOrganizationRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseDeleteOrganizationRequest();
        message.user = (_a = object.user) !== null && _a !== void 0 ? _a : "";
        message.name = (_b = object.name) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseDeleteOrganizationResponse() {
    return {};
}
exports.DeleteOrganizationResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteOrganizationResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.DeleteOrganizationResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseDeleteOrganizationResponse();
        return message;
    }
};
function createBaseCreateOrganizationRequest() {
    return { user: "", organization: undefined };
}
exports.CreateOrganizationRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.user !== "") {
            writer.uint32(10).string(message.user);
        }
        if (message.organization !== undefined) {
            exports.Organization.encode(message.organization, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCreateOrganizationRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.user = reader.string();
                    break;
                case 2:
                    message.organization = exports.Organization.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            user: isSet(object.user) ? String(object.user) : "",
            organization: isSet(object.organization) ? exports.Organization.fromJSON(object.organization) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.user !== undefined && (obj.user = message.user);
        message.organization !== undefined &&
            (obj.organization = message.organization ? exports.Organization.toJSON(message.organization) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.CreateOrganizationRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseCreateOrganizationRequest();
        message.user = (_a = object.user) !== null && _a !== void 0 ? _a : "";
        message.organization = (object.organization !== undefined && object.organization !== null)
            ? exports.Organization.fromPartial(object.organization)
            : undefined;
        return message;
    }
};
function createBaseCreateOrganizationResponse() {
    return {};
}
exports.CreateOrganizationResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCreateOrganizationResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.CreateOrganizationResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseCreateOrganizationResponse();
        return message;
    }
};
function createBaseUpdateOrganizationRequest() {
    return {
        name: "",
        description: undefined,
        state: undefined,
        accessMode: undefined,
        members: undefined,
        projects: undefined
    };
}
exports.UpdateOrganizationRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        if (message.description !== undefined) {
            exports.DescriptionUpdate.encode(message.description, writer.uint32(18).fork()).ldelim();
        }
        if (message.state !== undefined) {
            exports.UserStateUpdate.encode(message.state, writer.uint32(26).fork()).ldelim();
        }
        if (message.accessMode !== undefined) {
            exports.AccessModeUpdate.encode(message.accessMode, writer.uint32(34).fork()).ldelim();
        }
        if (message.members !== undefined) {
            exports.MembershipUpdate.encode(message.members, writer.uint32(42).fork()).ldelim();
        }
        if (message.projects !== undefined) {
            exports.MembershipUpdate.encode(message.projects, writer.uint32(50).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateOrganizationRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.description = exports.DescriptionUpdate.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.state = exports.UserStateUpdate.decode(reader, reader.uint32());
                    break;
                case 4:
                    message.accessMode = exports.AccessModeUpdate.decode(reader, reader.uint32());
                    break;
                case 5:
                    message.members = exports.MembershipUpdate.decode(reader, reader.uint32());
                    break;
                case 6:
                    message.projects = exports.MembershipUpdate.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : "",
            description: isSet(object.description) ? exports.DescriptionUpdate.fromJSON(object.description) : undefined,
            state: isSet(object.state) ? exports.UserStateUpdate.fromJSON(object.state) : undefined,
            accessMode: isSet(object.accessMode) ? exports.AccessModeUpdate.fromJSON(object.accessMode) : undefined,
            members: isSet(object.members) ? exports.MembershipUpdate.fromJSON(object.members) : undefined,
            projects: isSet(object.projects) ? exports.MembershipUpdate.fromJSON(object.projects) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        message.description !== undefined &&
            (obj.description = message.description ? exports.DescriptionUpdate.toJSON(message.description) : undefined);
        message.state !== undefined && (obj.state = message.state ? exports.UserStateUpdate.toJSON(message.state) : undefined);
        message.accessMode !== undefined &&
            (obj.accessMode = message.accessMode ? exports.AccessModeUpdate.toJSON(message.accessMode) : undefined);
        message.members !== undefined &&
            (obj.members = message.members ? exports.MembershipUpdate.toJSON(message.members) : undefined);
        message.projects !== undefined &&
            (obj.projects = message.projects ? exports.MembershipUpdate.toJSON(message.projects) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.UpdateOrganizationRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseUpdateOrganizationRequest();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        message.description = (object.description !== undefined && object.description !== null)
            ? exports.DescriptionUpdate.fromPartial(object.description)
            : undefined;
        message.state = (object.state !== undefined && object.state !== null)
            ? exports.UserStateUpdate.fromPartial(object.state)
            : undefined;
        message.accessMode = (object.accessMode !== undefined && object.accessMode !== null)
            ? exports.AccessModeUpdate.fromPartial(object.accessMode)
            : undefined;
        message.members = (object.members !== undefined && object.members !== null)
            ? exports.MembershipUpdate.fromPartial(object.members)
            : undefined;
        message.projects = (object.projects !== undefined && object.projects !== null)
            ? exports.MembershipUpdate.fromPartial(object.projects)
            : undefined;
        return message;
    }
};
function createBaseUpdateOrganizationResponse() {
    return {};
}
exports.UpdateOrganizationResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateOrganizationResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.UpdateOrganizationResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseUpdateOrganizationResponse();
        return message;
    }
};
function createBaseGetOrganizationMembersRequest() {
    return { organization: "" };
}
exports.GetOrganizationMembersRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.organization !== "") {
            writer.uint32(10).string(message.organization);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetOrganizationMembersRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.organization = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { organization: isSet(object.organization) ? String(object.organization) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.organization !== undefined && (obj.organization = message.organization);
        return obj;
    },
    create: function (base) {
        return exports.GetOrganizationMembersRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetOrganizationMembersRequest();
        message.organization = (_a = object.organization) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseGetOrganizationMembersResponse() {
    return { members: [] };
}
exports.GetOrganizationMembersResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        for (var _i = 0, _a = message.members; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.Member.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetOrganizationMembersResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.members.push(exports.Member.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { members: Array.isArray(object === null || object === void 0 ? void 0 : object.members) ? object.members.map(function (e) { return exports.Member.fromJSON(e); }) : [] };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.members) {
            obj.members = message.members.map(function (e) { return e ? exports.Member.toJSON(e) : undefined; });
        }
        else {
            obj.members = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.GetOrganizationMembersResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetOrganizationMembersResponse();
        message.members = ((_a = object.members) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.Member.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseGetOrganizationMemberRequest() {
    return { organization: "", username: "" };
}
exports.GetOrganizationMemberRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.organization !== "") {
            writer.uint32(10).string(message.organization);
        }
        if (message.username !== "") {
            writer.uint32(18).string(message.username);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetOrganizationMemberRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.organization = reader.string();
                    break;
                case 2:
                    message.username = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            organization: isSet(object.organization) ? String(object.organization) : "",
            username: isSet(object.username) ? String(object.username) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.organization !== undefined && (obj.organization = message.organization);
        message.username !== undefined && (obj.username = message.username);
        return obj;
    },
    create: function (base) {
        return exports.GetOrganizationMemberRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetOrganizationMemberRequest();
        message.organization = (_a = object.organization) !== null && _a !== void 0 ? _a : "";
        message.username = (_b = object.username) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseGetOrganizationMemberResponse() {
    return { member: undefined };
}
exports.GetOrganizationMemberResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.member !== undefined) {
            exports.Member.encode(message.member, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetOrganizationMemberResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.member = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { member: isSet(object.member) ? exports.Member.fromJSON(object.member) : undefined };
    },
    toJSON: function (message) {
        var obj = {};
        message.member !== undefined && (obj.member = message.member ? exports.Member.toJSON(message.member) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.GetOrganizationMemberResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetOrganizationMemberResponse();
        message.member = (object.member !== undefined && object.member !== null)
            ? exports.Member.fromPartial(object.member)
            : undefined;
        return message;
    }
};
function createBaseRequestOrganizationMembershipRequest() {
    return { organization: "", id: "", kind: 0, member: undefined };
}
exports.RequestOrganizationMembershipRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.organization !== "") {
            writer.uint32(10).string(message.organization);
        }
        if (message.id !== "") {
            writer.uint32(18).string(message.id);
        }
        if (message.kind !== 0) {
            writer.uint32(24).int32(message.kind);
        }
        if (message.member !== undefined) {
            exports.Member.encode(message.member, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseRequestOrganizationMembershipRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.organization = reader.string();
                    break;
                case 2:
                    message.id = reader.string();
                    break;
                case 3:
                    message.kind = reader.int32();
                    break;
                case 4:
                    message.member = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            organization: isSet(object.organization) ? String(object.organization) : "",
            id: isSet(object.id) ? String(object.id) : "",
            kind: isSet(object.kind) ? membershipTypeFromJSON(object.kind) : 0,
            member: isSet(object.member) ? exports.Member.fromJSON(object.member) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.organization !== undefined && (obj.organization = message.organization);
        message.id !== undefined && (obj.id = message.id);
        message.kind !== undefined && (obj.kind = membershipTypeToJSON(message.kind));
        message.member !== undefined && (obj.member = message.member ? exports.Member.toJSON(message.member) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.RequestOrganizationMembershipRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseRequestOrganizationMembershipRequest();
        message.organization = (_a = object.organization) !== null && _a !== void 0 ? _a : "";
        message.id = (_b = object.id) !== null && _b !== void 0 ? _b : "";
        message.kind = (_c = object.kind) !== null && _c !== void 0 ? _c : 0;
        message.member = (object.member !== undefined && object.member !== null)
            ? exports.Member.fromPartial(object.member)
            : undefined;
        return message;
    }
};
function createBaseRequestOrganizationMembershipResponse() {
    return { member: undefined };
}
exports.RequestOrganizationMembershipResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.member !== undefined) {
            exports.Member.encode(message.member, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseRequestOrganizationMembershipResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.member = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { member: isSet(object.member) ? exports.Member.fromJSON(object.member) : undefined };
    },
    toJSON: function (message) {
        var obj = {};
        message.member !== undefined && (obj.member = message.member ? exports.Member.toJSON(message.member) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.RequestOrganizationMembershipResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseRequestOrganizationMembershipResponse();
        message.member = (object.member !== undefined && object.member !== null)
            ? exports.Member.fromPartial(object.member)
            : undefined;
        return message;
    }
};
function createBaseConfirmOrganizationMembershipRequest() {
    return { organization: "", id: "", kind: 0 };
}
exports.ConfirmOrganizationMembershipRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.organization !== "") {
            writer.uint32(10).string(message.organization);
        }
        if (message.id !== "") {
            writer.uint32(18).string(message.id);
        }
        if (message.kind !== 0) {
            writer.uint32(24).int32(message.kind);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseConfirmOrganizationMembershipRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.organization = reader.string();
                    break;
                case 2:
                    message.id = reader.string();
                    break;
                case 3:
                    message.kind = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            organization: isSet(object.organization) ? String(object.organization) : "",
            id: isSet(object.id) ? String(object.id) : "",
            kind: isSet(object.kind) ? membershipTypeFromJSON(object.kind) : 0
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.organization !== undefined && (obj.organization = message.organization);
        message.id !== undefined && (obj.id = message.id);
        message.kind !== undefined && (obj.kind = membershipTypeToJSON(message.kind));
        return obj;
    },
    create: function (base) {
        return exports.ConfirmOrganizationMembershipRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseConfirmOrganizationMembershipRequest();
        message.organization = (_a = object.organization) !== null && _a !== void 0 ? _a : "";
        message.id = (_b = object.id) !== null && _b !== void 0 ? _b : "";
        message.kind = (_c = object.kind) !== null && _c !== void 0 ? _c : 0;
        return message;
    }
};
function createBaseConfirmOrganizationMembershipResponse() {
    return { member: undefined };
}
exports.ConfirmOrganizationMembershipResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.member !== undefined) {
            exports.Member.encode(message.member, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseConfirmOrganizationMembershipResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.member = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { member: isSet(object.member) ? exports.Member.fromJSON(object.member) : undefined };
    },
    toJSON: function (message) {
        var obj = {};
        message.member !== undefined && (obj.member = message.member ? exports.Member.toJSON(message.member) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.ConfirmOrganizationMembershipResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseConfirmOrganizationMembershipResponse();
        message.member = (object.member !== undefined && object.member !== null)
            ? exports.Member.fromPartial(object.member)
            : undefined;
        return message;
    }
};
function createBaseUpdateOrganizationMemberRequest() {
    return { organization: "", username: "", member: undefined };
}
exports.UpdateOrganizationMemberRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.organization !== "") {
            writer.uint32(10).string(message.organization);
        }
        if (message.username !== "") {
            writer.uint32(18).string(message.username);
        }
        if (message.member !== undefined) {
            exports.Member.encode(message.member, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateOrganizationMemberRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.organization = reader.string();
                    break;
                case 2:
                    message.username = reader.string();
                    break;
                case 3:
                    message.member = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            organization: isSet(object.organization) ? String(object.organization) : "",
            username: isSet(object.username) ? String(object.username) : "",
            member: isSet(object.member) ? exports.Member.fromJSON(object.member) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.organization !== undefined && (obj.organization = message.organization);
        message.username !== undefined && (obj.username = message.username);
        message.member !== undefined && (obj.member = message.member ? exports.Member.toJSON(message.member) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.UpdateOrganizationMemberRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseUpdateOrganizationMemberRequest();
        message.organization = (_a = object.organization) !== null && _a !== void 0 ? _a : "";
        message.username = (_b = object.username) !== null && _b !== void 0 ? _b : "";
        message.member = (object.member !== undefined && object.member !== null)
            ? exports.Member.fromPartial(object.member)
            : undefined;
        return message;
    }
};
function createBaseUpdateOrganizationMemberResponse() {
    return { member: undefined };
}
exports.UpdateOrganizationMemberResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.member !== undefined) {
            exports.Member.encode(message.member, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateOrganizationMemberResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.member = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { member: isSet(object.member) ? exports.Member.fromJSON(object.member) : undefined };
    },
    toJSON: function (message) {
        var obj = {};
        message.member !== undefined && (obj.member = message.member ? exports.Member.toJSON(message.member) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.UpdateOrganizationMemberResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseUpdateOrganizationMemberResponse();
        message.member = (object.member !== undefined && object.member !== null)
            ? exports.Member.fromPartial(object.member)
            : undefined;
        return message;
    }
};
function createBaseDeleteOrganizationMemberRequest() {
    return { organization: "", username: "" };
}
exports.DeleteOrganizationMemberRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.organization !== "") {
            writer.uint32(10).string(message.organization);
        }
        if (message.username !== "") {
            writer.uint32(18).string(message.username);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteOrganizationMemberRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.organization = reader.string();
                    break;
                case 2:
                    message.username = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            organization: isSet(object.organization) ? String(object.organization) : "",
            username: isSet(object.username) ? String(object.username) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.organization !== undefined && (obj.organization = message.organization);
        message.username !== undefined && (obj.username = message.username);
        return obj;
    },
    create: function (base) {
        return exports.DeleteOrganizationMemberRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseDeleteOrganizationMemberRequest();
        message.organization = (_a = object.organization) !== null && _a !== void 0 ? _a : "";
        message.username = (_b = object.username) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseDeleteOrganizationMemberResponse() {
    return {};
}
exports.DeleteOrganizationMemberResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteOrganizationMemberResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.DeleteOrganizationMemberResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseDeleteOrganizationMemberResponse();
        return message;
    }
};
function createBaseGetOrganizationProjectsRequest() {
    return { name: "" };
}
exports.GetOrganizationProjectsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetOrganizationProjectsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { name: isSet(object.name) ? String(object.name) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        return obj;
    },
    create: function (base) {
        return exports.GetOrganizationProjectsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetOrganizationProjectsRequest();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseGetOrganizationProjectsResponse() {
    return { projects: [] };
}
exports.GetOrganizationProjectsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        for (var _i = 0, _a = message.projects; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.Member.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetOrganizationProjectsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.projects.push(exports.Member.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { projects: Array.isArray(object === null || object === void 0 ? void 0 : object.projects) ? object.projects.map(function (e) { return exports.Member.fromJSON(e); }) : [] };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.projects) {
            obj.projects = message.projects.map(function (e) { return e ? exports.Member.toJSON(e) : undefined; });
        }
        else {
            obj.projects = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.GetOrganizationProjectsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetOrganizationProjectsResponse();
        message.projects = ((_a = object.projects) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.Member.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseGetOrganizationProjectRequest() {
    return { organization: "", project: "" };
}
exports.GetOrganizationProjectRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.organization !== "") {
            writer.uint32(10).string(message.organization);
        }
        if (message.project !== "") {
            writer.uint32(18).string(message.project);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetOrganizationProjectRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.organization = reader.string();
                    break;
                case 2:
                    message.project = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            organization: isSet(object.organization) ? String(object.organization) : "",
            project: isSet(object.project) ? String(object.project) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.organization !== undefined && (obj.organization = message.organization);
        message.project !== undefined && (obj.project = message.project);
        return obj;
    },
    create: function (base) {
        return exports.GetOrganizationProjectRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetOrganizationProjectRequest();
        message.organization = (_a = object.organization) !== null && _a !== void 0 ? _a : "";
        message.project = (_b = object.project) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseGetOrganizationProjectResponse() {
    return { member: undefined };
}
exports.GetOrganizationProjectResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.member !== undefined) {
            exports.Member.encode(message.member, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetOrganizationProjectResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.member = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { member: isSet(object.member) ? exports.Member.fromJSON(object.member) : undefined };
    },
    toJSON: function (message) {
        var obj = {};
        message.member !== undefined && (obj.member = message.member ? exports.Member.toJSON(message.member) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.GetOrganizationProjectResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetOrganizationProjectResponse();
        message.member = (object.member !== undefined && object.member !== null)
            ? exports.Member.fromPartial(object.member)
            : undefined;
        return message;
    }
};
function createBaseAddOrganizationProjectRequest() {
    return { organization: "", project: "", member: undefined };
}
exports.AddOrganizationProjectRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.organization !== "") {
            writer.uint32(10).string(message.organization);
        }
        if (message.project !== "") {
            writer.uint32(18).string(message.project);
        }
        if (message.member !== undefined) {
            exports.Member.encode(message.member, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseAddOrganizationProjectRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.organization = reader.string();
                    break;
                case 2:
                    message.project = reader.string();
                    break;
                case 3:
                    message.member = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            organization: isSet(object.organization) ? String(object.organization) : "",
            project: isSet(object.project) ? String(object.project) : "",
            member: isSet(object.member) ? exports.Member.fromJSON(object.member) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.organization !== undefined && (obj.organization = message.organization);
        message.project !== undefined && (obj.project = message.project);
        message.member !== undefined && (obj.member = message.member ? exports.Member.toJSON(message.member) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.AddOrganizationProjectRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseAddOrganizationProjectRequest();
        message.organization = (_a = object.organization) !== null && _a !== void 0 ? _a : "";
        message.project = (_b = object.project) !== null && _b !== void 0 ? _b : "";
        message.member = (object.member !== undefined && object.member !== null)
            ? exports.Member.fromPartial(object.member)
            : undefined;
        return message;
    }
};
function createBaseAddOrganizationProjectResponse() {
    return {};
}
exports.AddOrganizationProjectResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseAddOrganizationProjectResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.AddOrganizationProjectResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseAddOrganizationProjectResponse();
        return message;
    }
};
function createBaseUpdateOrganizationProjectRequest() {
    return { organization: "", project: "", member: undefined };
}
exports.UpdateOrganizationProjectRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.organization !== "") {
            writer.uint32(10).string(message.organization);
        }
        if (message.project !== "") {
            writer.uint32(18).string(message.project);
        }
        if (message.member !== undefined) {
            exports.Member.encode(message.member, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateOrganizationProjectRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.organization = reader.string();
                    break;
                case 2:
                    message.project = reader.string();
                    break;
                case 3:
                    message.member = exports.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            organization: isSet(object.organization) ? String(object.organization) : "",
            project: isSet(object.project) ? String(object.project) : "",
            member: isSet(object.member) ? exports.Member.fromJSON(object.member) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.organization !== undefined && (obj.organization = message.organization);
        message.project !== undefined && (obj.project = message.project);
        message.member !== undefined && (obj.member = message.member ? exports.Member.toJSON(message.member) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.UpdateOrganizationProjectRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseUpdateOrganizationProjectRequest();
        message.organization = (_a = object.organization) !== null && _a !== void 0 ? _a : "";
        message.project = (_b = object.project) !== null && _b !== void 0 ? _b : "";
        message.member = (object.member !== undefined && object.member !== null)
            ? exports.Member.fromPartial(object.member)
            : undefined;
        return message;
    }
};
function createBaseUpdateOrganizationProjectResponse() {
    return {};
}
exports.UpdateOrganizationProjectResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateOrganizationProjectResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.UpdateOrganizationProjectResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseUpdateOrganizationProjectResponse();
        return message;
    }
};
function createBaseDeleteOrganizationProjectRequest() {
    return { organization: "", project: "" };
}
exports.DeleteOrganizationProjectRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.organization !== "") {
            writer.uint32(10).string(message.organization);
        }
        if (message.project !== "") {
            writer.uint32(18).string(message.project);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteOrganizationProjectRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.organization = reader.string();
                    break;
                case 2:
                    message.project = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            organization: isSet(object.organization) ? String(object.organization) : "",
            project: isSet(object.project) ? String(object.project) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.organization !== undefined && (obj.organization = message.organization);
        message.project !== undefined && (obj.project = message.project);
        return obj;
    },
    create: function (base) {
        return exports.DeleteOrganizationProjectRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseDeleteOrganizationProjectRequest();
        message.organization = (_a = object.organization) !== null && _a !== void 0 ? _a : "";
        message.project = (_b = object.project) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseDeleteOrganizationProjectResponse() {
    return {};
}
exports.DeleteOrganizationProjectResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteOrganizationProjectResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.DeleteOrganizationProjectResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseDeleteOrganizationProjectResponse();
        return message;
    }
};
function createBaseGetUserConfigurationsRequest() {
    return {};
}
exports.GetUserConfigurationsRequest = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetUserConfigurationsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.GetUserConfigurationsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseGetUserConfigurationsRequest();
        return message;
    }
};
function createBaseGetUserConfigurationsResponse() {
    return { institutions: [], countries: [], usstates: [], categories: [] };
}
exports.GetUserConfigurationsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        for (var _i = 0, _a = message.institutions; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(10).string(v);
        }
        for (var _b = 0, _c = message.countries; _b < _c.length; _b++) {
            var v = _c[_b];
            exports.GetUserConfigurationsResponse_Country.encode(v, writer.uint32(18).fork()).ldelim();
        }
        for (var _d = 0, _e = message.usstates; _d < _e.length; _d++) {
            var v = _e[_d];
            exports.GetUserConfigurationsResponse_USState.encode(v, writer.uint32(26).fork()).ldelim();
        }
        for (var _f = 0, _g = message.categories; _f < _g.length; _f++) {
            var v = _g[_f];
            writer.uint32(34).string(v);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetUserConfigurationsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.institutions.push(reader.string());
                    break;
                case 2:
                    message.countries.push(exports.GetUserConfigurationsResponse_Country.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.usstates.push(exports.GetUserConfigurationsResponse_USState.decode(reader, reader.uint32()));
                    break;
                case 4:
                    message.categories.push(reader.string());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            institutions: Array.isArray(object === null || object === void 0 ? void 0 : object.institutions) ? object.institutions.map(function (e) { return String(e); }) : [],
            countries: Array.isArray(object === null || object === void 0 ? void 0 : object.countries)
                ? object.countries.map(function (e) { return exports.GetUserConfigurationsResponse_Country.fromJSON(e); })
                : [],
            usstates: Array.isArray(object === null || object === void 0 ? void 0 : object.usstates)
                ? object.usstates.map(function (e) { return exports.GetUserConfigurationsResponse_USState.fromJSON(e); })
                : [],
            categories: Array.isArray(object === null || object === void 0 ? void 0 : object.categories) ? object.categories.map(function (e) { return String(e); }) : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.institutions) {
            obj.institutions = message.institutions.map(function (e) { return e; });
        }
        else {
            obj.institutions = [];
        }
        if (message.countries) {
            obj.countries = message.countries.map(function (e) { return e ? exports.GetUserConfigurationsResponse_Country.toJSON(e) : undefined; });
        }
        else {
            obj.countries = [];
        }
        if (message.usstates) {
            obj.usstates = message.usstates.map(function (e) { return e ? exports.GetUserConfigurationsResponse_USState.toJSON(e) : undefined; });
        }
        else {
            obj.usstates = [];
        }
        if (message.categories) {
            obj.categories = message.categories.map(function (e) { return e; });
        }
        else {
            obj.categories = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.GetUserConfigurationsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseGetUserConfigurationsResponse();
        message.institutions = ((_a = object.institutions) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        message.countries = ((_b = object.countries) === null || _b === void 0 ? void 0 : _b.map(function (e) { return exports.GetUserConfigurationsResponse_Country.fromPartial(e); })) || [];
        message.usstates = ((_c = object.usstates) === null || _c === void 0 ? void 0 : _c.map(function (e) { return exports.GetUserConfigurationsResponse_USState.fromPartial(e); })) || [];
        message.categories = ((_d = object.categories) === null || _d === void 0 ? void 0 : _d.map(function (e) { return e; })) || [];
        return message;
    }
};
function createBaseGetUserConfigurationsResponse_Country() {
    return { name: "", ISO2: "" };
}
exports.GetUserConfigurationsResponse_Country = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        if (message.ISO2 !== "") {
            writer.uint32(18).string(message.ISO2);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetUserConfigurationsResponse_Country();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.ISO2 = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { name: isSet(object.name) ? String(object.name) : "", ISO2: isSet(object.ISO2) ? String(object.ISO2) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        message.ISO2 !== undefined && (obj.ISO2 = message.ISO2);
        return obj;
    },
    create: function (base) {
        return exports.GetUserConfigurationsResponse_Country.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetUserConfigurationsResponse_Country();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        message.ISO2 = (_b = object.ISO2) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseGetUserConfigurationsResponse_USState() {
    return { name: "", USPS2: "" };
}
exports.GetUserConfigurationsResponse_USState = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        if (message.USPS2 !== "") {
            writer.uint32(18).string(message.USPS2);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetUserConfigurationsResponse_USState();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.USPS2 = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : "",
            USPS2: isSet(object.USPS2) ? String(object.USPS2) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        message.USPS2 !== undefined && (obj.USPS2 = message.USPS2);
        return obj;
    },
    create: function (base) {
        return exports.GetUserConfigurationsResponse_USState.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetUserConfigurationsResponse_USState();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        message.USPS2 = (_b = object.USPS2) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseUpdateUserConfigurationsRequest() {
    return { institutions: [], categories: [], patchstrategy: undefined };
}
exports.UpdateUserConfigurationsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        for (var _i = 0, _a = message.institutions; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(10).string(v);
        }
        for (var _b = 0, _c = message.categories; _b < _c.length; _b++) {
            var v = _c[_b];
            writer.uint32(18).string(v);
        }
        if (message.patchstrategy !== undefined) {
            patch_types_1.PatchStrategy.encode(message.patchstrategy, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateUserConfigurationsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.institutions.push(reader.string());
                    break;
                case 2:
                    message.categories.push(reader.string());
                    break;
                case 3:
                    message.patchstrategy = patch_types_1.PatchStrategy.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            institutions: Array.isArray(object === null || object === void 0 ? void 0 : object.institutions) ? object.institutions.map(function (e) { return String(e); }) : [],
            categories: Array.isArray(object === null || object === void 0 ? void 0 : object.categories) ? object.categories.map(function (e) { return String(e); }) : [],
            patchstrategy: isSet(object.patchstrategy) ? patch_types_1.PatchStrategy.fromJSON(object.patchstrategy) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.institutions) {
            obj.institutions = message.institutions.map(function (e) { return e; });
        }
        else {
            obj.institutions = [];
        }
        if (message.categories) {
            obj.categories = message.categories.map(function (e) { return e; });
        }
        else {
            obj.categories = [];
        }
        message.patchstrategy !== undefined &&
            (obj.patchstrategy = message.patchstrategy ? patch_types_1.PatchStrategy.toJSON(message.patchstrategy) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.UpdateUserConfigurationsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseUpdateUserConfigurationsRequest();
        message.institutions = ((_a = object.institutions) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        message.categories = ((_b = object.categories) === null || _b === void 0 ? void 0 : _b.map(function (e) { return e; })) || [];
        message.patchstrategy = (object.patchstrategy !== undefined && object.patchstrategy !== null)
            ? patch_types_1.PatchStrategy.fromPartial(object.patchstrategy)
            : undefined;
        return message;
    }
};
function createBaseUpdateUserConfigurationsResponse() {
    return {};
}
exports.UpdateUserConfigurationsResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateUserConfigurationsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.UpdateUserConfigurationsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseUpdateUserConfigurationsResponse();
        return message;
    }
};
function createBaseGetEntityTypeConfigurationsRequest() {
    return {};
}
exports.GetEntityTypeConfigurationsRequest = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetEntityTypeConfigurationsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.GetEntityTypeConfigurationsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseGetEntityTypeConfigurationsRequest();
        return message;
    }
};
function createBaseEntityType() {
    return { etype: "", subtypes: [] };
}
exports.EntityType = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.etype !== "") {
            writer.uint32(10).string(message.etype);
        }
        for (var _i = 0, _a = message.subtypes; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(18).string(v);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseEntityType();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.etype = reader.string();
                    break;
                case 2:
                    message.subtypes.push(reader.string());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            etype: isSet(object.etype) ? String(object.etype) : "",
            subtypes: Array.isArray(object === null || object === void 0 ? void 0 : object.subtypes) ? object.subtypes.map(function (e) { return String(e); }) : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.etype !== undefined && (obj.etype = message.etype);
        if (message.subtypes) {
            obj.subtypes = message.subtypes.map(function (e) { return e; });
        }
        else {
            obj.subtypes = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.EntityType.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseEntityType();
        message.etype = (_a = object.etype) !== null && _a !== void 0 ? _a : "";
        message.subtypes = ((_b = object.subtypes) === null || _b === void 0 ? void 0 : _b.map(function (e) { return e; })) || [];
        return message;
    }
};
function createBaseGetEntityTypeConfigurationsResponse() {
    return { Types: [] };
}
exports.GetEntityTypeConfigurationsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        for (var _i = 0, _a = message.Types; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.EntityType.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetEntityTypeConfigurationsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.Types.push(exports.EntityType.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { Types: Array.isArray(object === null || object === void 0 ? void 0 : object.Types) ? object.Types.map(function (e) { return exports.EntityType.fromJSON(e); }) : [] };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.Types) {
            obj.Types = message.Types.map(function (e) { return e ? exports.EntityType.toJSON(e) : undefined; });
        }
        else {
            obj.Types = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.GetEntityTypeConfigurationsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetEntityTypeConfigurationsResponse();
        message.Types = ((_a = object.Types) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.EntityType.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseUpdateEntityTypeConfigurationsRequest() {
    return { Types: [], patchstrategy: undefined };
}
exports.UpdateEntityTypeConfigurationsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        for (var _i = 0, _a = message.Types; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.EntityType.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.patchstrategy !== undefined) {
            patch_types_1.PatchStrategy.encode(message.patchstrategy, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateEntityTypeConfigurationsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.Types.push(exports.EntityType.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.patchstrategy = patch_types_1.PatchStrategy.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            Types: Array.isArray(object === null || object === void 0 ? void 0 : object.Types) ? object.Types.map(function (e) { return exports.EntityType.fromJSON(e); }) : [],
            patchstrategy: isSet(object.patchstrategy) ? patch_types_1.PatchStrategy.fromJSON(object.patchstrategy) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.Types) {
            obj.Types = message.Types.map(function (e) { return e ? exports.EntityType.toJSON(e) : undefined; });
        }
        else {
            obj.Types = [];
        }
        message.patchstrategy !== undefined &&
            (obj.patchstrategy = message.patchstrategy ? patch_types_1.PatchStrategy.toJSON(message.patchstrategy) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.UpdateEntityTypeConfigurationsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseUpdateEntityTypeConfigurationsRequest();
        message.Types = ((_a = object.Types) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.EntityType.fromPartial(e); })) || [];
        message.patchstrategy = (object.patchstrategy !== undefined && object.patchstrategy !== null)
            ? patch_types_1.PatchStrategy.fromPartial(object.patchstrategy)
            : undefined;
        return message;
    }
};
function createBaseUpdateEntityTypeConfigurationsResponse() {
    return {};
}
exports.UpdateEntityTypeConfigurationsResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateEntityTypeConfigurationsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.UpdateEntityTypeConfigurationsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseUpdateEntityTypeConfigurationsResponse();
        return message;
    }
};
function createBaseGetPolicyRequest() {
    return {};
}
exports.GetPolicyRequest = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetPolicyRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.GetPolicyRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseGetPolicyRequest();
        return message;
    }
};
function createBaseGetPolicyResponse() {
    return { policy: "" };
}
exports.GetPolicyResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.policy !== "") {
            writer.uint32(10).string(message.policy);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetPolicyResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.policy = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { policy: isSet(object.policy) ? String(object.policy) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.policy !== undefined && (obj.policy = message.policy);
        return obj;
    },
    create: function (base) {
        return exports.GetPolicyResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetPolicyResponse();
        message.policy = (_a = object.policy) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseHealthRequest() {
    return {};
}
exports.HealthRequest = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseHealthRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.HealthRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseHealthRequest();
        return message;
    }
};
function createBaseHealthResponse() {
    return { status: "" };
}
exports.HealthResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.status !== "") {
            writer.uint32(10).string(message.status);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseHealthResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.status = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { status: isSet(object.status) ? String(object.status) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.status !== undefined && (obj.status = message.status);
        return obj;
    },
    create: function (base) {
        return exports.HealthResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseHealthResponse();
        message.status = (_a = object.status) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
var tsProtoGlobalThis = (function () {
    if (typeof globalThis !== "undefined") {
        return globalThis;
    }
    if (typeof self !== "undefined") {
        return self;
    }
    if (typeof window !== "undefined") {
        return window;
    }
    if (typeof global !== "undefined") {
        return global;
    }
    throw "Unable to locate global object";
})();
function toTimestamp(date) {
    var seconds = date.getTime() / 1000;
    var nanos = (date.getTime() % 1000) * 1000000;
    return { seconds: seconds, nanos: nanos };
}
function fromTimestamp(t) {
    var millis = t.seconds * 1000;
    millis += t.nanos / 1000000;
    return new Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof Date) {
        return o;
    }
    else if (typeof o === "string") {
        return new Date(o);
    }
    else {
        return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));
    }
}
function longToNumber(long) {
    if (long.gt(Number.MAX_SAFE_INTEGER)) {
        throw new tsProtoGlobalThis.Error("Value is larger than Number.MAX_SAFE_INTEGER");
    }
    return long.toNumber();
}
if (minimal_1["default"].util.Long !== long_1["default"]) {
    minimal_1["default"].util.Long = long_1["default"];
    minimal_1["default"].configure();
}
function isObject(value) {
    return typeof value === "object" && value !== null;
}
function isSet(value) {
    return value !== null && value !== undefined;
}
