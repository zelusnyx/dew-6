"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
exports.UnregisterResponse = exports.UnregisterRequest = exports.LogoutResponse = exports.LogoutRequest = exports.LoginResponse = exports.LoginRequest = exports.RegisterResponse = exports.RegisterRequest_TraitsEntry = exports.RegisterRequest = exports.GetIdentityResponse = exports.GetIdentityRequest = exports.ListIdentityResponse = exports.ListIdentityRequest = exports.IdentityInfo_TraitsEntry = exports.IdentityInfo = exports.protobufPackage = void 0;
/* eslint-disable */
var minimal_1 = __importDefault(require("protobufjs/minimal"));
exports.protobufPackage = "portal.v1";
function createBaseIdentityInfo() {
    return { username: "", email: "", admin: false, traits: {} };
}
exports.IdentityInfo = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.username !== "") {
            writer.uint32(10).string(message.username);
        }
        if (message.email !== "") {
            writer.uint32(18).string(message.email);
        }
        if (message.admin === true) {
            writer.uint32(24).bool(message.admin);
        }
        Object.entries(message.traits).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.IdentityInfo_TraitsEntry.encode({ key: key, value: value }, writer.uint32(34).fork()).ldelim();
        });
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseIdentityInfo();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.username = reader.string();
                    break;
                case 2:
                    message.email = reader.string();
                    break;
                case 3:
                    message.admin = reader.bool();
                    break;
                case 4:
                    var entry4 = exports.IdentityInfo_TraitsEntry.decode(reader, reader.uint32());
                    if (entry4.value !== undefined) {
                        message.traits[entry4.key] = entry4.value;
                    }
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            username: isSet(object.username) ? String(object.username) : "",
            email: isSet(object.email) ? String(object.email) : "",
            admin: isSet(object.admin) ? Boolean(object.admin) : false,
            traits: isObject(object.traits)
                ? Object.entries(object.traits).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = String(value);
                    return acc;
                }, {})
                : {}
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.username !== undefined && (obj.username = message.username);
        message.email !== undefined && (obj.email = message.email);
        message.admin !== undefined && (obj.admin = message.admin);
        obj.traits = {};
        if (message.traits) {
            Object.entries(message.traits).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.traits[k] = v;
            });
        }
        return obj;
    },
    create: function (base) {
        return exports.IdentityInfo.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseIdentityInfo();
        message.username = (_a = object.username) !== null && _a !== void 0 ? _a : "";
        message.email = (_b = object.email) !== null && _b !== void 0 ? _b : "";
        message.admin = (_c = object.admin) !== null && _c !== void 0 ? _c : false;
        message.traits = Object.entries((_d = object.traits) !== null && _d !== void 0 ? _d : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = String(value);
            }
            return acc;
        }, {});
        return message;
    }
};
function createBaseIdentityInfo_TraitsEntry() {
    return { key: "", value: "" };
}
exports.IdentityInfo_TraitsEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== "") {
            writer.uint32(18).string(message.value);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseIdentityInfo_TraitsEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { key: isSet(object.key) ? String(object.key) : "", value: isSet(object.value) ? String(object.value) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value);
        return obj;
    },
    create: function (base) {
        return exports.IdentityInfo_TraitsEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseIdentityInfo_TraitsEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (_b = object.value) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseListIdentityRequest() {
    return {};
}
exports.ListIdentityRequest = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseListIdentityRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.ListIdentityRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseListIdentityRequest();
        return message;
    }
};
function createBaseListIdentityResponse() {
    return { identities: [] };
}
exports.ListIdentityResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        for (var _i = 0, _a = message.identities; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.IdentityInfo.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseListIdentityResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.identities.push(exports.IdentityInfo.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            identities: Array.isArray(object === null || object === void 0 ? void 0 : object.identities) ? object.identities.map(function (e) { return exports.IdentityInfo.fromJSON(e); }) : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.identities) {
            obj.identities = message.identities.map(function (e) { return e ? exports.IdentityInfo.toJSON(e) : undefined; });
        }
        else {
            obj.identities = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.ListIdentityResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseListIdentityResponse();
        message.identities = ((_a = object.identities) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.IdentityInfo.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseGetIdentityRequest() {
    return { username: "" };
}
exports.GetIdentityRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.username !== "") {
            writer.uint32(10).string(message.username);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.username = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { username: isSet(object.username) ? String(object.username) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.username !== undefined && (obj.username = message.username);
        return obj;
    },
    create: function (base) {
        return exports.GetIdentityRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetIdentityRequest();
        message.username = (_a = object.username) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseGetIdentityResponse() {
    return { identity: undefined };
}
exports.GetIdentityResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.identity !== undefined) {
            exports.IdentityInfo.encode(message.identity, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.identity = exports.IdentityInfo.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { identity: isSet(object.identity) ? exports.IdentityInfo.fromJSON(object.identity) : undefined };
    },
    toJSON: function (message) {
        var obj = {};
        message.identity !== undefined &&
            (obj.identity = message.identity ? exports.IdentityInfo.toJSON(message.identity) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.GetIdentityResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityResponse();
        message.identity = (object.identity !== undefined && object.identity !== null)
            ? exports.IdentityInfo.fromPartial(object.identity)
            : undefined;
        return message;
    }
};
function createBaseRegisterRequest() {
    return {
        username: "",
        email: "",
        password: "",
        admin: false,
        traits: {},
        institution: "",
        category: "",
        country: "",
        usstate: "",
        name: ""
    };
}
exports.RegisterRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.username !== "") {
            writer.uint32(10).string(message.username);
        }
        if (message.email !== "") {
            writer.uint32(18).string(message.email);
        }
        if (message.password !== "") {
            writer.uint32(26).string(message.password);
        }
        if (message.admin === true) {
            writer.uint32(32).bool(message.admin);
        }
        Object.entries(message.traits).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.RegisterRequest_TraitsEntry.encode({ key: key, value: value }, writer.uint32(42).fork()).ldelim();
        });
        if (message.institution !== "") {
            writer.uint32(50).string(message.institution);
        }
        if (message.category !== "") {
            writer.uint32(58).string(message.category);
        }
        if (message.country !== "") {
            writer.uint32(66).string(message.country);
        }
        if (message.usstate !== "") {
            writer.uint32(74).string(message.usstate);
        }
        if (message.name !== "") {
            writer.uint32(82).string(message.name);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseRegisterRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.username = reader.string();
                    break;
                case 2:
                    message.email = reader.string();
                    break;
                case 3:
                    message.password = reader.string();
                    break;
                case 4:
                    message.admin = reader.bool();
                    break;
                case 5:
                    var entry5 = exports.RegisterRequest_TraitsEntry.decode(reader, reader.uint32());
                    if (entry5.value !== undefined) {
                        message.traits[entry5.key] = entry5.value;
                    }
                    break;
                case 6:
                    message.institution = reader.string();
                    break;
                case 7:
                    message.category = reader.string();
                    break;
                case 8:
                    message.country = reader.string();
                    break;
                case 9:
                    message.usstate = reader.string();
                    break;
                case 10:
                    message.name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            username: isSet(object.username) ? String(object.username) : "",
            email: isSet(object.email) ? String(object.email) : "",
            password: isSet(object.password) ? String(object.password) : "",
            admin: isSet(object.admin) ? Boolean(object.admin) : false,
            traits: isObject(object.traits)
                ? Object.entries(object.traits).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = String(value);
                    return acc;
                }, {})
                : {},
            institution: isSet(object.institution) ? String(object.institution) : "",
            category: isSet(object.category) ? String(object.category) : "",
            country: isSet(object.country) ? String(object.country) : "",
            usstate: isSet(object.usstate) ? String(object.usstate) : "",
            name: isSet(object.name) ? String(object.name) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.username !== undefined && (obj.username = message.username);
        message.email !== undefined && (obj.email = message.email);
        message.password !== undefined && (obj.password = message.password);
        message.admin !== undefined && (obj.admin = message.admin);
        obj.traits = {};
        if (message.traits) {
            Object.entries(message.traits).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.traits[k] = v;
            });
        }
        message.institution !== undefined && (obj.institution = message.institution);
        message.category !== undefined && (obj.category = message.category);
        message.country !== undefined && (obj.country = message.country);
        message.usstate !== undefined && (obj.usstate = message.usstate);
        message.name !== undefined && (obj.name = message.name);
        return obj;
    },
    create: function (base) {
        return exports.RegisterRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
        var message = createBaseRegisterRequest();
        message.username = (_a = object.username) !== null && _a !== void 0 ? _a : "";
        message.email = (_b = object.email) !== null && _b !== void 0 ? _b : "";
        message.password = (_c = object.password) !== null && _c !== void 0 ? _c : "";
        message.admin = (_d = object.admin) !== null && _d !== void 0 ? _d : false;
        message.traits = Object.entries((_e = object.traits) !== null && _e !== void 0 ? _e : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = String(value);
            }
            return acc;
        }, {});
        message.institution = (_f = object.institution) !== null && _f !== void 0 ? _f : "";
        message.category = (_g = object.category) !== null && _g !== void 0 ? _g : "";
        message.country = (_h = object.country) !== null && _h !== void 0 ? _h : "";
        message.usstate = (_j = object.usstate) !== null && _j !== void 0 ? _j : "";
        message.name = (_k = object.name) !== null && _k !== void 0 ? _k : "";
        return message;
    }
};
function createBaseRegisterRequest_TraitsEntry() {
    return { key: "", value: "" };
}
exports.RegisterRequest_TraitsEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== "") {
            writer.uint32(18).string(message.value);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseRegisterRequest_TraitsEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { key: isSet(object.key) ? String(object.key) : "", value: isSet(object.value) ? String(object.value) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value);
        return obj;
    },
    create: function (base) {
        return exports.RegisterRequest_TraitsEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseRegisterRequest_TraitsEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (_b = object.value) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseRegisterResponse() {
    return {};
}
exports.RegisterResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseRegisterResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.RegisterResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseRegisterResponse();
        return message;
    }
};
function createBaseLoginRequest() {
    return { username: "", password: "" };
}
exports.LoginRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.username !== "") {
            writer.uint32(10).string(message.username);
        }
        if (message.password !== "") {
            writer.uint32(26).string(message.password);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseLoginRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.username = reader.string();
                    break;
                case 3:
                    message.password = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            username: isSet(object.username) ? String(object.username) : "",
            password: isSet(object.password) ? String(object.password) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.username !== undefined && (obj.username = message.username);
        message.password !== undefined && (obj.password = message.password);
        return obj;
    },
    create: function (base) {
        return exports.LoginRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseLoginRequest();
        message.username = (_a = object.username) !== null && _a !== void 0 ? _a : "";
        message.password = (_b = object.password) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseLoginResponse() {
    return { token: "" };
}
exports.LoginResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.token !== "") {
            writer.uint32(10).string(message.token);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseLoginResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.token = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { token: isSet(object.token) ? String(object.token) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.token !== undefined && (obj.token = message.token);
        return obj;
    },
    create: function (base) {
        return exports.LoginResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseLoginResponse();
        message.token = (_a = object.token) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseLogoutRequest() {
    return { username: "" };
}
exports.LogoutRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.username !== "") {
            writer.uint32(10).string(message.username);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseLogoutRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.username = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { username: isSet(object.username) ? String(object.username) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.username !== undefined && (obj.username = message.username);
        return obj;
    },
    create: function (base) {
        return exports.LogoutRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseLogoutRequest();
        message.username = (_a = object.username) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseLogoutResponse() {
    return {};
}
exports.LogoutResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseLogoutResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.LogoutResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseLogoutResponse();
        return message;
    }
};
function createBaseUnregisterRequest() {
    return { username: "" };
}
exports.UnregisterRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.username !== "") {
            writer.uint32(10).string(message.username);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUnregisterRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.username = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { username: isSet(object.username) ? String(object.username) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.username !== undefined && (obj.username = message.username);
        return obj;
    },
    create: function (base) {
        return exports.UnregisterRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseUnregisterRequest();
        message.username = (_a = object.username) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseUnregisterResponse() {
    return {};
}
exports.UnregisterResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUnregisterResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.UnregisterResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseUnregisterResponse();
        return message;
    }
};
function isObject(value) {
    return typeof value === "object" && value !== null;
}
function isSet(value) {
    return value !== null && value !== undefined;
}
