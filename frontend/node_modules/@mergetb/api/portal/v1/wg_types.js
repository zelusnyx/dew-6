"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
exports.GetWgEnclaveResponse = exports.GetWgEnclaveRequest = exports.GetWgIfConfigResponse = exports.GetWgIfConfigRequest = exports.DelWgIfConfigResponse = exports.DelWgIfConfigRequest = exports.AddWgIfConfigResponse = exports.AddWgIfConfigRequest = exports.WgIfConfig = exports.WgEnclave_ClientIpsEntry = exports.WgEnclave_GatewayIpsEntry = exports.WgEnclave_ClientsEntry = exports.WgEnclave_GatewaysEntry = exports.WgEnclave = exports.protobufPackage = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
exports.protobufPackage = "portal.v1";
function createBaseWgEnclave() {
    return { enclaveid: "", gateways: {}, clients: {}, Ver: 0, gatewayIps: {}, clientIps: {} };
}
exports.WgEnclave = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.enclaveid !== "") {
            writer.uint32(10).string(message.enclaveid);
        }
        Object.entries(message.gateways).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.WgEnclave_GatewaysEntry.encode({ key: key, value: value }, writer.uint32(18).fork()).ldelim();
        });
        Object.entries(message.clients).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.WgEnclave_ClientsEntry.encode({ key: key, value: value }, writer.uint32(26).fork()).ldelim();
        });
        if (message.Ver !== 0) {
            writer.uint32(32).int64(message.Ver);
        }
        Object.entries(message.gatewayIps).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.WgEnclave_GatewayIpsEntry.encode({ key: key, value: value }, writer.uint32(42).fork()).ldelim();
        });
        Object.entries(message.clientIps).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.WgEnclave_ClientIpsEntry.encode({ key: key, value: value }, writer.uint32(50).fork()).ldelim();
        });
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseWgEnclave();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.enclaveid = reader.string();
                    break;
                case 2:
                    var entry2 = exports.WgEnclave_GatewaysEntry.decode(reader, reader.uint32());
                    if (entry2.value !== undefined) {
                        message.gateways[entry2.key] = entry2.value;
                    }
                    break;
                case 3:
                    var entry3 = exports.WgEnclave_ClientsEntry.decode(reader, reader.uint32());
                    if (entry3.value !== undefined) {
                        message.clients[entry3.key] = entry3.value;
                    }
                    break;
                case 4:
                    message.Ver = longToNumber(reader.int64());
                    break;
                case 5:
                    var entry5 = exports.WgEnclave_GatewayIpsEntry.decode(reader, reader.uint32());
                    if (entry5.value !== undefined) {
                        message.gatewayIps[entry5.key] = entry5.value;
                    }
                    break;
                case 6:
                    var entry6 = exports.WgEnclave_ClientIpsEntry.decode(reader, reader.uint32());
                    if (entry6.value !== undefined) {
                        message.clientIps[entry6.key] = entry6.value;
                    }
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            enclaveid: isSet(object.enclaveid) ? String(object.enclaveid) : "",
            gateways: isObject(object.gateways)
                ? Object.entries(object.gateways).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = exports.WgIfConfig.fromJSON(value);
                    return acc;
                }, {})
                : {},
            clients: isObject(object.clients)
                ? Object.entries(object.clients).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = exports.WgIfConfig.fromJSON(value);
                    return acc;
                }, {})
                : {},
            Ver: isSet(object.Ver) ? Number(object.Ver) : 0,
            gatewayIps: isObject(object.gatewayIps)
                ? Object.entries(object.gatewayIps).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = String(value);
                    return acc;
                }, {})
                : {},
            clientIps: isObject(object.clientIps)
                ? Object.entries(object.clientIps).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = String(value);
                    return acc;
                }, {})
                : {}
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.enclaveid !== undefined && (obj.enclaveid = message.enclaveid);
        obj.gateways = {};
        if (message.gateways) {
            Object.entries(message.gateways).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.gateways[k] = exports.WgIfConfig.toJSON(v);
            });
        }
        obj.clients = {};
        if (message.clients) {
            Object.entries(message.clients).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.clients[k] = exports.WgIfConfig.toJSON(v);
            });
        }
        message.Ver !== undefined && (obj.Ver = Math.round(message.Ver));
        obj.gatewayIps = {};
        if (message.gatewayIps) {
            Object.entries(message.gatewayIps).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.gatewayIps[k] = v;
            });
        }
        obj.clientIps = {};
        if (message.clientIps) {
            Object.entries(message.clientIps).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.clientIps[k] = v;
            });
        }
        return obj;
    },
    create: function (base) {
        return exports.WgEnclave.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f;
        var message = createBaseWgEnclave();
        message.enclaveid = (_a = object.enclaveid) !== null && _a !== void 0 ? _a : "";
        message.gateways = Object.entries((_b = object.gateways) !== null && _b !== void 0 ? _b : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = exports.WgIfConfig.fromPartial(value);
            }
            return acc;
        }, {});
        message.clients = Object.entries((_c = object.clients) !== null && _c !== void 0 ? _c : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = exports.WgIfConfig.fromPartial(value);
            }
            return acc;
        }, {});
        message.Ver = (_d = object.Ver) !== null && _d !== void 0 ? _d : 0;
        message.gatewayIps = Object.entries((_e = object.gatewayIps) !== null && _e !== void 0 ? _e : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = String(value);
            }
            return acc;
        }, {});
        message.clientIps = Object.entries((_f = object.clientIps) !== null && _f !== void 0 ? _f : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = String(value);
            }
            return acc;
        }, {});
        return message;
    }
};
function createBaseWgEnclave_GatewaysEntry() {
    return { key: "", value: undefined };
}
exports.WgEnclave_GatewaysEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== undefined) {
            exports.WgIfConfig.encode(message.value, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseWgEnclave_GatewaysEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = exports.WgIfConfig.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            key: isSet(object.key) ? String(object.key) : "",
            value: isSet(object.value) ? exports.WgIfConfig.fromJSON(object.value) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value ? exports.WgIfConfig.toJSON(message.value) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.WgEnclave_GatewaysEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseWgEnclave_GatewaysEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (object.value !== undefined && object.value !== null)
            ? exports.WgIfConfig.fromPartial(object.value)
            : undefined;
        return message;
    }
};
function createBaseWgEnclave_ClientsEntry() {
    return { key: "", value: undefined };
}
exports.WgEnclave_ClientsEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== undefined) {
            exports.WgIfConfig.encode(message.value, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseWgEnclave_ClientsEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = exports.WgIfConfig.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            key: isSet(object.key) ? String(object.key) : "",
            value: isSet(object.value) ? exports.WgIfConfig.fromJSON(object.value) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value ? exports.WgIfConfig.toJSON(message.value) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.WgEnclave_ClientsEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseWgEnclave_ClientsEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (object.value !== undefined && object.value !== null)
            ? exports.WgIfConfig.fromPartial(object.value)
            : undefined;
        return message;
    }
};
function createBaseWgEnclave_GatewayIpsEntry() {
    return { key: "", value: "" };
}
exports.WgEnclave_GatewayIpsEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== "") {
            writer.uint32(18).string(message.value);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseWgEnclave_GatewayIpsEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { key: isSet(object.key) ? String(object.key) : "", value: isSet(object.value) ? String(object.value) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value);
        return obj;
    },
    create: function (base) {
        return exports.WgEnclave_GatewayIpsEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseWgEnclave_GatewayIpsEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (_b = object.value) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseWgEnclave_ClientIpsEntry() {
    return { key: "", value: "" };
}
exports.WgEnclave_ClientIpsEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== "") {
            writer.uint32(18).string(message.value);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseWgEnclave_ClientIpsEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { key: isSet(object.key) ? String(object.key) : "", value: isSet(object.value) ? String(object.value) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value);
        return obj;
    },
    create: function (base) {
        return exports.WgEnclave_ClientIpsEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseWgEnclave_ClientIpsEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (_b = object.value) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseWgIfConfig() {
    return { endpoint: "", key: "", allowedips: [], accessaddr: "" };
}
exports.WgIfConfig = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.endpoint !== "") {
            writer.uint32(10).string(message.endpoint);
        }
        if (message.key !== "") {
            writer.uint32(18).string(message.key);
        }
        for (var _i = 0, _a = message.allowedips; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(26).string(v);
        }
        if (message.accessaddr !== "") {
            writer.uint32(34).string(message.accessaddr);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseWgIfConfig();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.endpoint = reader.string();
                    break;
                case 2:
                    message.key = reader.string();
                    break;
                case 3:
                    message.allowedips.push(reader.string());
                    break;
                case 4:
                    message.accessaddr = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            endpoint: isSet(object.endpoint) ? String(object.endpoint) : "",
            key: isSet(object.key) ? String(object.key) : "",
            allowedips: Array.isArray(object === null || object === void 0 ? void 0 : object.allowedips) ? object.allowedips.map(function (e) { return String(e); }) : [],
            accessaddr: isSet(object.accessaddr) ? String(object.accessaddr) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.endpoint !== undefined && (obj.endpoint = message.endpoint);
        message.key !== undefined && (obj.key = message.key);
        if (message.allowedips) {
            obj.allowedips = message.allowedips.map(function (e) { return e; });
        }
        else {
            obj.allowedips = [];
        }
        message.accessaddr !== undefined && (obj.accessaddr = message.accessaddr);
        return obj;
    },
    create: function (base) {
        return exports.WgIfConfig.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseWgIfConfig();
        message.endpoint = (_a = object.endpoint) !== null && _a !== void 0 ? _a : "";
        message.key = (_b = object.key) !== null && _b !== void 0 ? _b : "";
        message.allowedips = ((_c = object.allowedips) === null || _c === void 0 ? void 0 : _c.map(function (e) { return e; })) || [];
        message.accessaddr = (_d = object.accessaddr) !== null && _d !== void 0 ? _d : "";
        return message;
    }
};
function createBaseAddWgIfConfigRequest() {
    return { enclaveid: "", config: undefined, gateway: false };
}
exports.AddWgIfConfigRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.enclaveid !== "") {
            writer.uint32(10).string(message.enclaveid);
        }
        if (message.config !== undefined) {
            exports.WgIfConfig.encode(message.config, writer.uint32(18).fork()).ldelim();
        }
        if (message.gateway === true) {
            writer.uint32(24).bool(message.gateway);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseAddWgIfConfigRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.enclaveid = reader.string();
                    break;
                case 2:
                    message.config = exports.WgIfConfig.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.gateway = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            enclaveid: isSet(object.enclaveid) ? String(object.enclaveid) : "",
            config: isSet(object.config) ? exports.WgIfConfig.fromJSON(object.config) : undefined,
            gateway: isSet(object.gateway) ? Boolean(object.gateway) : false
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.enclaveid !== undefined && (obj.enclaveid = message.enclaveid);
        message.config !== undefined && (obj.config = message.config ? exports.WgIfConfig.toJSON(message.config) : undefined);
        message.gateway !== undefined && (obj.gateway = message.gateway);
        return obj;
    },
    create: function (base) {
        return exports.AddWgIfConfigRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseAddWgIfConfigRequest();
        message.enclaveid = (_a = object.enclaveid) !== null && _a !== void 0 ? _a : "";
        message.config = (object.config !== undefined && object.config !== null)
            ? exports.WgIfConfig.fromPartial(object.config)
            : undefined;
        message.gateway = (_b = object.gateway) !== null && _b !== void 0 ? _b : false;
        return message;
    }
};
function createBaseAddWgIfConfigResponse() {
    return {};
}
exports.AddWgIfConfigResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseAddWgIfConfigResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.AddWgIfConfigResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseAddWgIfConfigResponse();
        return message;
    }
};
function createBaseDelWgIfConfigRequest() {
    return { enclaveid: "", key: "" };
}
exports.DelWgIfConfigRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.enclaveid !== "") {
            writer.uint32(10).string(message.enclaveid);
        }
        if (message.key !== "") {
            writer.uint32(18).string(message.key);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDelWgIfConfigRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.enclaveid = reader.string();
                    break;
                case 2:
                    message.key = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            enclaveid: isSet(object.enclaveid) ? String(object.enclaveid) : "",
            key: isSet(object.key) ? String(object.key) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.enclaveid !== undefined && (obj.enclaveid = message.enclaveid);
        message.key !== undefined && (obj.key = message.key);
        return obj;
    },
    create: function (base) {
        return exports.DelWgIfConfigRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseDelWgIfConfigRequest();
        message.enclaveid = (_a = object.enclaveid) !== null && _a !== void 0 ? _a : "";
        message.key = (_b = object.key) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseDelWgIfConfigResponse() {
    return {};
}
exports.DelWgIfConfigResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDelWgIfConfigResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.DelWgIfConfigResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseDelWgIfConfigResponse();
        return message;
    }
};
function createBaseGetWgIfConfigRequest() {
    return { enclaveid: "", key: "" };
}
exports.GetWgIfConfigRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.enclaveid !== "") {
            writer.uint32(10).string(message.enclaveid);
        }
        if (message.key !== "") {
            writer.uint32(18).string(message.key);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetWgIfConfigRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.enclaveid = reader.string();
                    break;
                case 2:
                    message.key = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            enclaveid: isSet(object.enclaveid) ? String(object.enclaveid) : "",
            key: isSet(object.key) ? String(object.key) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.enclaveid !== undefined && (obj.enclaveid = message.enclaveid);
        message.key !== undefined && (obj.key = message.key);
        return obj;
    },
    create: function (base) {
        return exports.GetWgIfConfigRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetWgIfConfigRequest();
        message.enclaveid = (_a = object.enclaveid) !== null && _a !== void 0 ? _a : "";
        message.key = (_b = object.key) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseGetWgIfConfigResponse() {
    return { enclaveid: "", endpoint: "" };
}
exports.GetWgIfConfigResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.enclaveid !== "") {
            writer.uint32(10).string(message.enclaveid);
        }
        if (message.endpoint !== "") {
            writer.uint32(18).string(message.endpoint);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetWgIfConfigResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.enclaveid = reader.string();
                    break;
                case 2:
                    message.endpoint = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            enclaveid: isSet(object.enclaveid) ? String(object.enclaveid) : "",
            endpoint: isSet(object.endpoint) ? String(object.endpoint) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.enclaveid !== undefined && (obj.enclaveid = message.enclaveid);
        message.endpoint !== undefined && (obj.endpoint = message.endpoint);
        return obj;
    },
    create: function (base) {
        return exports.GetWgIfConfigResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetWgIfConfigResponse();
        message.enclaveid = (_a = object.enclaveid) !== null && _a !== void 0 ? _a : "";
        message.endpoint = (_b = object.endpoint) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseGetWgEnclaveRequest() {
    return { enclaveid: "" };
}
exports.GetWgEnclaveRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.enclaveid !== "") {
            writer.uint32(10).string(message.enclaveid);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetWgEnclaveRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.enclaveid = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { enclaveid: isSet(object.enclaveid) ? String(object.enclaveid) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.enclaveid !== undefined && (obj.enclaveid = message.enclaveid);
        return obj;
    },
    create: function (base) {
        return exports.GetWgEnclaveRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetWgEnclaveRequest();
        message.enclaveid = (_a = object.enclaveid) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseGetWgEnclaveResponse() {
    return { enclave: undefined };
}
exports.GetWgEnclaveResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.enclave !== undefined) {
            exports.WgEnclave.encode(message.enclave, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetWgEnclaveResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.enclave = exports.WgEnclave.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { enclave: isSet(object.enclave) ? exports.WgEnclave.fromJSON(object.enclave) : undefined };
    },
    toJSON: function (message) {
        var obj = {};
        message.enclave !== undefined && (obj.enclave = message.enclave ? exports.WgEnclave.toJSON(message.enclave) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.GetWgEnclaveResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetWgEnclaveResponse();
        message.enclave = (object.enclave !== undefined && object.enclave !== null)
            ? exports.WgEnclave.fromPartial(object.enclave)
            : undefined;
        return message;
    }
};
var tsProtoGlobalThis = (function () {
    if (typeof globalThis !== "undefined") {
        return globalThis;
    }
    if (typeof self !== "undefined") {
        return self;
    }
    if (typeof window !== "undefined") {
        return window;
    }
    if (typeof global !== "undefined") {
        return global;
    }
    throw "Unable to locate global object";
})();
function longToNumber(long) {
    if (long.gt(Number.MAX_SAFE_INTEGER)) {
        throw new tsProtoGlobalThis.Error("Value is larger than Number.MAX_SAFE_INTEGER");
    }
    return long.toNumber();
}
if (minimal_1["default"].util.Long !== long_1["default"]) {
    minimal_1["default"].util.Long = long_1["default"];
    minimal_1["default"].configure();
}
function isObject(value) {
    return typeof value === "object" && value !== null;
}
function isSet(value) {
    return value !== null && value !== undefined;
}
