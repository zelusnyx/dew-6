"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
exports.DeinitHarborResponse = exports.DeinitHarborRequest = exports.InitHarborResponse = exports.InitHarborRequest = exports.ListBlockPoolsResponse = exports.ListBlockPoolsRequest = exports.ActivateResourcesResponse = exports.ActivateResourcesRequest = exports.DeactivateResourcesResponse = exports.DeactivateResourcesRequest = exports.DeleteFacilityResponse = exports.DeleteFacilityRequest = exports.UpdateFacilityResponse = exports.UpdateFacilityRequest = exports.GetFacilityResponse = exports.GetFacilityRequest = exports.GetFacilitiesResponse = exports.GetFacilitiesRequest = exports.RegisterFacilityResponse = exports.RegisterFacilityRequest = exports.BlockPool = exports.Facility_MembersEntry = exports.Facility = exports.protobufPackage = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
var core_1 = require("../../mergetb/xir/v0.3/core");
var patch_types_1 = require("./patch_types");
var workspace_types_1 = require("./workspace_types");
exports.protobufPackage = "portal.v1";
function createBaseFacility() {
    return {
        name: "",
        address: "",
        description: "",
        accessMode: 0,
        members: {},
        certificate: "",
        cacertificate: "",
        ver: 0
    };
}
exports.Facility = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        if (message.address !== "") {
            writer.uint32(18).string(message.address);
        }
        if (message.description !== "") {
            writer.uint32(26).string(message.description);
        }
        if (message.accessMode !== 0) {
            writer.uint32(32).int32(message.accessMode);
        }
        Object.entries(message.members).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.Facility_MembersEntry.encode({ key: key, value: value }, writer.uint32(42).fork()).ldelim();
        });
        if (message.certificate !== "") {
            writer.uint32(50).string(message.certificate);
        }
        if (message.cacertificate !== "") {
            writer.uint32(58).string(message.cacertificate);
        }
        if (message.ver !== 0) {
            writer.uint32(64).int64(message.ver);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseFacility();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.address = reader.string();
                    break;
                case 3:
                    message.description = reader.string();
                    break;
                case 4:
                    message.accessMode = reader.int32();
                    break;
                case 5:
                    var entry5 = exports.Facility_MembersEntry.decode(reader, reader.uint32());
                    if (entry5.value !== undefined) {
                        message.members[entry5.key] = entry5.value;
                    }
                    break;
                case 6:
                    message.certificate = reader.string();
                    break;
                case 7:
                    message.cacertificate = reader.string();
                    break;
                case 8:
                    message.ver = longToNumber(reader.int64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : "",
            address: isSet(object.address) ? String(object.address) : "",
            description: isSet(object.description) ? String(object.description) : "",
            accessMode: isSet(object.accessMode) ? (0, workspace_types_1.accessModeFromJSON)(object.accessMode) : 0,
            members: isObject(object.members)
                ? Object.entries(object.members).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = workspace_types_1.Member.fromJSON(value);
                    return acc;
                }, {})
                : {},
            certificate: isSet(object.certificate) ? String(object.certificate) : "",
            cacertificate: isSet(object.cacertificate) ? String(object.cacertificate) : "",
            ver: isSet(object.ver) ? Number(object.ver) : 0
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        message.address !== undefined && (obj.address = message.address);
        message.description !== undefined && (obj.description = message.description);
        message.accessMode !== undefined && (obj.accessMode = (0, workspace_types_1.accessModeToJSON)(message.accessMode));
        obj.members = {};
        if (message.members) {
            Object.entries(message.members).forEach(function (_a) {
                var k = _a[0], v = _a[1];
                obj.members[k] = workspace_types_1.Member.toJSON(v);
            });
        }
        message.certificate !== undefined && (obj.certificate = message.certificate);
        message.cacertificate !== undefined && (obj.cacertificate = message.cacertificate);
        message.ver !== undefined && (obj.ver = Math.round(message.ver));
        return obj;
    },
    create: function (base) {
        return exports.Facility.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        var message = createBaseFacility();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        message.address = (_b = object.address) !== null && _b !== void 0 ? _b : "";
        message.description = (_c = object.description) !== null && _c !== void 0 ? _c : "";
        message.accessMode = (_d = object.accessMode) !== null && _d !== void 0 ? _d : 0;
        message.members = Object.entries((_e = object.members) !== null && _e !== void 0 ? _e : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = workspace_types_1.Member.fromPartial(value);
            }
            return acc;
        }, {});
        message.certificate = (_f = object.certificate) !== null && _f !== void 0 ? _f : "";
        message.cacertificate = (_g = object.cacertificate) !== null && _g !== void 0 ? _g : "";
        message.ver = (_h = object.ver) !== null && _h !== void 0 ? _h : 0;
        return message;
    }
};
function createBaseFacility_MembersEntry() {
    return { key: "", value: undefined };
}
exports.Facility_MembersEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== undefined) {
            workspace_types_1.Member.encode(message.value, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseFacility_MembersEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = workspace_types_1.Member.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            key: isSet(object.key) ? String(object.key) : "",
            value: isSet(object.value) ? workspace_types_1.Member.fromJSON(object.value) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value ? workspace_types_1.Member.toJSON(message.value) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.Facility_MembersEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseFacility_MembersEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value = (object.value !== undefined && object.value !== null)
            ? workspace_types_1.Member.fromPartial(object.value)
            : undefined;
        return message;
    }
};
function createBaseBlockPool() {
    return { blocks: [] };
}
exports.BlockPool = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        for (var _i = 0, _a = message.blocks; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(10).string(v);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseBlockPool();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.blocks.push(reader.string());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { blocks: Array.isArray(object === null || object === void 0 ? void 0 : object.blocks) ? object.blocks.map(function (e) { return String(e); }) : [] };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.blocks) {
            obj.blocks = message.blocks.map(function (e) { return e; });
        }
        else {
            obj.blocks = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.BlockPool.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseBlockPool();
        message.blocks = ((_a = object.blocks) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        return message;
    }
};
function createBaseRegisterFacilityRequest() {
    return { facility: undefined, model: undefined };
}
exports.RegisterFacilityRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.facility !== undefined) {
            exports.Facility.encode(message.facility, writer.uint32(10).fork()).ldelim();
        }
        if (message.model !== undefined) {
            core_1.Facility.encode(message.model, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseRegisterFacilityRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.facility = exports.Facility.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.model = core_1.Facility.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            facility: isSet(object.facility) ? exports.Facility.fromJSON(object.facility) : undefined,
            model: isSet(object.model) ? core_1.Facility.fromJSON(object.model) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.facility !== undefined && (obj.facility = message.facility ? exports.Facility.toJSON(message.facility) : undefined);
        message.model !== undefined && (obj.model = message.model ? core_1.Facility.toJSON(message.model) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.RegisterFacilityRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseRegisterFacilityRequest();
        message.facility = (object.facility !== undefined && object.facility !== null)
            ? exports.Facility.fromPartial(object.facility)
            : undefined;
        message.model = (object.model !== undefined && object.model !== null)
            ? core_1.Facility.fromPartial(object.model)
            : undefined;
        return message;
    }
};
function createBaseRegisterFacilityResponse() {
    return { code: 0, message: "" };
}
exports.RegisterFacilityResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.code !== 0) {
            writer.uint32(8).int32(message.code);
        }
        if (message.message !== "") {
            writer.uint32(18).string(message.message);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseRegisterFacilityResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.code = reader.int32();
                    break;
                case 2:
                    message.message = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            code: isSet(object.code) ? Number(object.code) : 0,
            message: isSet(object.message) ? String(object.message) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.code !== undefined && (obj.code = Math.round(message.code));
        message.message !== undefined && (obj.message = message.message);
        return obj;
    },
    create: function (base) {
        return exports.RegisterFacilityResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseRegisterFacilityResponse();
        message.code = (_a = object.code) !== null && _a !== void 0 ? _a : 0;
        message.message = (_b = object.message) !== null && _b !== void 0 ? _b : "";
        return message;
    }
};
function createBaseGetFacilitiesRequest() {
    return {};
}
exports.GetFacilitiesRequest = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetFacilitiesRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.GetFacilitiesRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseGetFacilitiesRequest();
        return message;
    }
};
function createBaseGetFacilitiesResponse() {
    return { facilities: [] };
}
exports.GetFacilitiesResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        for (var _i = 0, _a = message.facilities; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.Facility.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetFacilitiesResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.facilities.push(exports.Facility.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            facilities: Array.isArray(object === null || object === void 0 ? void 0 : object.facilities) ? object.facilities.map(function (e) { return exports.Facility.fromJSON(e); }) : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.facilities) {
            obj.facilities = message.facilities.map(function (e) { return e ? exports.Facility.toJSON(e) : undefined; });
        }
        else {
            obj.facilities = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.GetFacilitiesResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetFacilitiesResponse();
        message.facilities = ((_a = object.facilities) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.Facility.fromPartial(e); })) || [];
        return message;
    }
};
function createBaseGetFacilityRequest() {
    return { name: "", withModel: false };
}
exports.GetFacilityRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        if (message.withModel === true) {
            writer.uint32(16).bool(message.withModel);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetFacilityRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.withModel = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : "",
            withModel: isSet(object.withModel) ? Boolean(object.withModel) : false
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        message.withModel !== undefined && (obj.withModel = message.withModel);
        return obj;
    },
    create: function (base) {
        return exports.GetFacilityRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetFacilityRequest();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        message.withModel = (_b = object.withModel) !== null && _b !== void 0 ? _b : false;
        return message;
    }
};
function createBaseGetFacilityResponse() {
    return { facility: undefined, model: undefined };
}
exports.GetFacilityResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.facility !== undefined) {
            exports.Facility.encode(message.facility, writer.uint32(10).fork()).ldelim();
        }
        if (message.model !== undefined) {
            core_1.Facility.encode(message.model, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetFacilityResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.facility = exports.Facility.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.model = core_1.Facility.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            facility: isSet(object.facility) ? exports.Facility.fromJSON(object.facility) : undefined,
            model: isSet(object.model) ? core_1.Facility.fromJSON(object.model) : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.facility !== undefined && (obj.facility = message.facility ? exports.Facility.toJSON(message.facility) : undefined);
        message.model !== undefined && (obj.model = message.model ? core_1.Facility.toJSON(message.model) : undefined);
        return obj;
    },
    create: function (base) {
        return exports.GetFacilityResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetFacilityResponse();
        message.facility = (object.facility !== undefined && object.facility !== null)
            ? exports.Facility.fromPartial(object.facility)
            : undefined;
        message.model = (object.model !== undefined && object.model !== null)
            ? core_1.Facility.fromPartial(object.model)
            : undefined;
        return message;
    }
};
function createBaseUpdateFacilityRequest() {
    return {
        name: "",
        address: "",
        description: undefined,
        accessMode: undefined,
        members: undefined,
        certificate: "",
        cacertificate: "",
        model: undefined,
        modelPatchStrategy: undefined
    };
}
exports.UpdateFacilityRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        if (message.address !== "") {
            writer.uint32(18).string(message.address);
        }
        if (message.description !== undefined) {
            workspace_types_1.DescriptionUpdate.encode(message.description, writer.uint32(26).fork()).ldelim();
        }
        if (message.accessMode !== undefined) {
            workspace_types_1.AccessModeUpdate.encode(message.accessMode, writer.uint32(34).fork()).ldelim();
        }
        if (message.members !== undefined) {
            workspace_types_1.MembershipUpdate.encode(message.members, writer.uint32(42).fork()).ldelim();
        }
        if (message.certificate !== "") {
            writer.uint32(50).string(message.certificate);
        }
        if (message.cacertificate !== "") {
            writer.uint32(58).string(message.cacertificate);
        }
        if (message.model !== undefined) {
            core_1.Facility.encode(message.model, writer.uint32(66).fork()).ldelim();
        }
        if (message.modelPatchStrategy !== undefined) {
            patch_types_1.PatchStrategy.encode(message.modelPatchStrategy, writer.uint32(74).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateFacilityRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.address = reader.string();
                    break;
                case 3:
                    message.description = workspace_types_1.DescriptionUpdate.decode(reader, reader.uint32());
                    break;
                case 4:
                    message.accessMode = workspace_types_1.AccessModeUpdate.decode(reader, reader.uint32());
                    break;
                case 5:
                    message.members = workspace_types_1.MembershipUpdate.decode(reader, reader.uint32());
                    break;
                case 6:
                    message.certificate = reader.string();
                    break;
                case 7:
                    message.cacertificate = reader.string();
                    break;
                case 8:
                    message.model = core_1.Facility.decode(reader, reader.uint32());
                    break;
                case 9:
                    message.modelPatchStrategy = patch_types_1.PatchStrategy.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            name: isSet(object.name) ? String(object.name) : "",
            address: isSet(object.address) ? String(object.address) : "",
            description: isSet(object.description) ? workspace_types_1.DescriptionUpdate.fromJSON(object.description) : undefined,
            accessMode: isSet(object.accessMode) ? workspace_types_1.AccessModeUpdate.fromJSON(object.accessMode) : undefined,
            members: isSet(object.members) ? workspace_types_1.MembershipUpdate.fromJSON(object.members) : undefined,
            certificate: isSet(object.certificate) ? String(object.certificate) : "",
            cacertificate: isSet(object.cacertificate) ? String(object.cacertificate) : "",
            model: isSet(object.model) ? core_1.Facility.fromJSON(object.model) : undefined,
            modelPatchStrategy: isSet(object.modelPatchStrategy)
                ? patch_types_1.PatchStrategy.fromJSON(object.modelPatchStrategy)
                : undefined
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        message.address !== undefined && (obj.address = message.address);
        message.description !== undefined &&
            (obj.description = message.description ? workspace_types_1.DescriptionUpdate.toJSON(message.description) : undefined);
        message.accessMode !== undefined &&
            (obj.accessMode = message.accessMode ? workspace_types_1.AccessModeUpdate.toJSON(message.accessMode) : undefined);
        message.members !== undefined &&
            (obj.members = message.members ? workspace_types_1.MembershipUpdate.toJSON(message.members) : undefined);
        message.certificate !== undefined && (obj.certificate = message.certificate);
        message.cacertificate !== undefined && (obj.cacertificate = message.cacertificate);
        message.model !== undefined && (obj.model = message.model ? core_1.Facility.toJSON(message.model) : undefined);
        message.modelPatchStrategy !== undefined && (obj.modelPatchStrategy = message.modelPatchStrategy
            ? patch_types_1.PatchStrategy.toJSON(message.modelPatchStrategy)
            : undefined);
        return obj;
    },
    create: function (base) {
        return exports.UpdateFacilityRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseUpdateFacilityRequest();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        message.address = (_b = object.address) !== null && _b !== void 0 ? _b : "";
        message.description = (object.description !== undefined && object.description !== null)
            ? workspace_types_1.DescriptionUpdate.fromPartial(object.description)
            : undefined;
        message.accessMode = (object.accessMode !== undefined && object.accessMode !== null)
            ? workspace_types_1.AccessModeUpdate.fromPartial(object.accessMode)
            : undefined;
        message.members = (object.members !== undefined && object.members !== null)
            ? workspace_types_1.MembershipUpdate.fromPartial(object.members)
            : undefined;
        message.certificate = (_c = object.certificate) !== null && _c !== void 0 ? _c : "";
        message.cacertificate = (_d = object.cacertificate) !== null && _d !== void 0 ? _d : "";
        message.model = (object.model !== undefined && object.model !== null)
            ? core_1.Facility.fromPartial(object.model)
            : undefined;
        message.modelPatchStrategy = (object.modelPatchStrategy !== undefined && object.modelPatchStrategy !== null)
            ? patch_types_1.PatchStrategy.fromPartial(object.modelPatchStrategy)
            : undefined;
        return message;
    }
};
function createBaseUpdateFacilityResponse() {
    return {};
}
exports.UpdateFacilityResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseUpdateFacilityResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.UpdateFacilityResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseUpdateFacilityResponse();
        return message;
    }
};
function createBaseDeleteFacilityRequest() {
    return { name: "" };
}
exports.DeleteFacilityRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.name !== "") {
            writer.uint32(10).string(message.name);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteFacilityRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return { name: isSet(object.name) ? String(object.name) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        message.name !== undefined && (obj.name = message.name);
        return obj;
    },
    create: function (base) {
        return exports.DeleteFacilityRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseDeleteFacilityRequest();
        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : "";
        return message;
    }
};
function createBaseDeleteFacilityResponse() {
    return {};
}
exports.DeleteFacilityResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeleteFacilityResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.DeleteFacilityResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseDeleteFacilityResponse();
        return message;
    }
};
function createBaseDeactivateResourcesRequest() {
    return { facility: "", resources: [] };
}
exports.DeactivateResourcesRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.facility !== "") {
            writer.uint32(10).string(message.facility);
        }
        for (var _i = 0, _a = message.resources; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(18).string(v);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeactivateResourcesRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.facility = reader.string();
                    break;
                case 2:
                    message.resources.push(reader.string());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            facility: isSet(object.facility) ? String(object.facility) : "",
            resources: Array.isArray(object === null || object === void 0 ? void 0 : object.resources) ? object.resources.map(function (e) { return String(e); }) : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.facility !== undefined && (obj.facility = message.facility);
        if (message.resources) {
            obj.resources = message.resources.map(function (e) { return e; });
        }
        else {
            obj.resources = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.DeactivateResourcesRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseDeactivateResourcesRequest();
        message.facility = (_a = object.facility) !== null && _a !== void 0 ? _a : "";
        message.resources = ((_b = object.resources) === null || _b === void 0 ? void 0 : _b.map(function (e) { return e; })) || [];
        return message;
    }
};
function createBaseDeactivateResourcesResponse() {
    return {};
}
exports.DeactivateResourcesResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeactivateResourcesResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.DeactivateResourcesResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseDeactivateResourcesResponse();
        return message;
    }
};
function createBaseActivateResourcesRequest() {
    return { facility: "", resources: [] };
}
exports.ActivateResourcesRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.facility !== "") {
            writer.uint32(10).string(message.facility);
        }
        for (var _i = 0, _a = message.resources; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(18).string(v);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseActivateResourcesRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.facility = reader.string();
                    break;
                case 2:
                    message.resources.push(reader.string());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            facility: isSet(object.facility) ? String(object.facility) : "",
            resources: Array.isArray(object === null || object === void 0 ? void 0 : object.resources) ? object.resources.map(function (e) { return String(e); }) : []
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.facility !== undefined && (obj.facility = message.facility);
        if (message.resources) {
            obj.resources = message.resources.map(function (e) { return e; });
        }
        else {
            obj.resources = [];
        }
        return obj;
    },
    create: function (base) {
        return exports.ActivateResourcesRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseActivateResourcesRequest();
        message.facility = (_a = object.facility) !== null && _a !== void 0 ? _a : "";
        message.resources = ((_b = object.resources) === null || _b === void 0 ? void 0 : _b.map(function (e) { return e; })) || [];
        return message;
    }
};
function createBaseActivateResourcesResponse() {
    return {};
}
exports.ActivateResourcesResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseActivateResourcesResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.ActivateResourcesResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseActivateResourcesResponse();
        return message;
    }
};
function createBaseListBlockPoolsRequest() {
    return {};
}
exports.ListBlockPoolsRequest = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseListBlockPoolsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.ListBlockPoolsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseListBlockPoolsRequest();
        return message;
    }
};
function createBaseListBlockPoolsResponse() {
    return {};
}
exports.ListBlockPoolsResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseListBlockPoolsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.ListBlockPoolsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseListBlockPoolsResponse();
        return message;
    }
};
function createBaseInitHarborRequest() {
    return { facility: "", ver: 0, rid: "", eid: "", pid: "" };
}
exports.InitHarborRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.facility !== "") {
            writer.uint32(10).string(message.facility);
        }
        if (message.ver !== 0) {
            writer.uint32(16).int64(message.ver);
        }
        if (message.rid !== "") {
            writer.uint32(26).string(message.rid);
        }
        if (message.eid !== "") {
            writer.uint32(34).string(message.eid);
        }
        if (message.pid !== "") {
            writer.uint32(42).string(message.pid);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseInitHarborRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.facility = reader.string();
                    break;
                case 2:
                    message.ver = longToNumber(reader.int64());
                    break;
                case 3:
                    message.rid = reader.string();
                    break;
                case 4:
                    message.eid = reader.string();
                    break;
                case 5:
                    message.pid = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            facility: isSet(object.facility) ? String(object.facility) : "",
            ver: isSet(object.ver) ? Number(object.ver) : 0,
            rid: isSet(object.rid) ? String(object.rid) : "",
            eid: isSet(object.eid) ? String(object.eid) : "",
            pid: isSet(object.pid) ? String(object.pid) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.facility !== undefined && (obj.facility = message.facility);
        message.ver !== undefined && (obj.ver = Math.round(message.ver));
        message.rid !== undefined && (obj.rid = message.rid);
        message.eid !== undefined && (obj.eid = message.eid);
        message.pid !== undefined && (obj.pid = message.pid);
        return obj;
    },
    create: function (base) {
        return exports.InitHarborRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseInitHarborRequest();
        message.facility = (_a = object.facility) !== null && _a !== void 0 ? _a : "";
        message.ver = (_b = object.ver) !== null && _b !== void 0 ? _b : 0;
        message.rid = (_c = object.rid) !== null && _c !== void 0 ? _c : "";
        message.eid = (_d = object.eid) !== null && _d !== void 0 ? _d : "";
        message.pid = (_e = object.pid) !== null && _e !== void 0 ? _e : "";
        return message;
    }
};
function createBaseInitHarborResponse() {
    return {};
}
exports.InitHarborResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseInitHarborResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.InitHarborResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseInitHarborResponse();
        return message;
    }
};
function createBaseDeinitHarborRequest() {
    return { facility: "", ver: 0, rid: "", eid: "", pid: "" };
}
exports.DeinitHarborRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        if (message.facility !== "") {
            writer.uint32(10).string(message.facility);
        }
        if (message.ver !== 0) {
            writer.uint32(16).int64(message.ver);
        }
        if (message.rid !== "") {
            writer.uint32(26).string(message.rid);
        }
        if (message.eid !== "") {
            writer.uint32(34).string(message.eid);
        }
        if (message.pid !== "") {
            writer.uint32(42).string(message.pid);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeinitHarborRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.facility = reader.string();
                    break;
                case 2:
                    message.ver = longToNumber(reader.int64());
                    break;
                case 3:
                    message.rid = reader.string();
                    break;
                case 4:
                    message.eid = reader.string();
                    break;
                case 5:
                    message.pid = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            facility: isSet(object.facility) ? String(object.facility) : "",
            ver: isSet(object.ver) ? Number(object.ver) : 0,
            rid: isSet(object.rid) ? String(object.rid) : "",
            eid: isSet(object.eid) ? String(object.eid) : "",
            pid: isSet(object.pid) ? String(object.pid) : ""
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.facility !== undefined && (obj.facility = message.facility);
        message.ver !== undefined && (obj.ver = Math.round(message.ver));
        message.rid !== undefined && (obj.rid = message.rid);
        message.eid !== undefined && (obj.eid = message.eid);
        message.pid !== undefined && (obj.pid = message.pid);
        return obj;
    },
    create: function (base) {
        return exports.DeinitHarborRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseDeinitHarborRequest();
        message.facility = (_a = object.facility) !== null && _a !== void 0 ? _a : "";
        message.ver = (_b = object.ver) !== null && _b !== void 0 ? _b : 0;
        message.rid = (_c = object.rid) !== null && _c !== void 0 ? _c : "";
        message.eid = (_d = object.eid) !== null && _d !== void 0 ? _d : "";
        message.pid = (_e = object.pid) !== null && _e !== void 0 ? _e : "";
        return message;
    }
};
function createBaseDeinitHarborResponse() {
    return {};
}
exports.DeinitHarborResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1["default"].Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1["default"].Reader ? input : new minimal_1["default"].Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseDeinitHarborResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        return {};
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    },
    create: function (base) {
        return exports.DeinitHarborResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseDeinitHarborResponse();
        return message;
    }
};
var tsProtoGlobalThis = (function () {
    if (typeof globalThis !== "undefined") {
        return globalThis;
    }
    if (typeof self !== "undefined") {
        return self;
    }
    if (typeof window !== "undefined") {
        return window;
    }
    if (typeof global !== "undefined") {
        return global;
    }
    throw "Unable to locate global object";
})();
function longToNumber(long) {
    if (long.gt(Number.MAX_SAFE_INTEGER)) {
        throw new tsProtoGlobalThis.Error("Value is larger than Number.MAX_SAFE_INTEGER");
    }
    return long.toNumber();
}
if (minimal_1["default"].util.Long !== long_1["default"]) {
    minimal_1["default"].util.Long = long_1["default"];
    minimal_1["default"].configure();
}
function isObject(value) {
    return typeof value === "object" && value !== null;
}
function isSet(value) {
    return value !== null && value !== undefined;
}
