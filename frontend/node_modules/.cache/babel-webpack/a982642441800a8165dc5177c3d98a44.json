{"ast":null,"code":"import { Injectable, ɵɵdefineInjectable, Directive, Input, Component, Optional, HostBinding, Renderer2, ElementRef, Inject, forwardRef, NgModule, ɵɵinject } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { findIconDefinition, parse, icon, counter, text } from '@fortawesome/fontawesome-svg-core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nconst _c0 = [[[\"fa-icon\"], [\"fa-duotone-icon\"], [\"fa-layers-text\"], [\"fa-layers-counter\"]]];\nconst _c1 = [\"fa-icon, fa-duotone-icon, fa-layers-text, fa-layers-counter\"];\nconst _c2 = [[[\"fa-icon\", \"stackItemSize\", \"\"], [\"fa-duotone-icon\", \"stackItemSize\", \"\"]]];\nconst _c3 = [\"fa-icon[stackItemSize],fa-duotone-icon[stackItemSize]\"];\n\nclass FaConfig {\n  constructor() {\n    /**\n     * Default prefix to use, when one is not provided with the icon name.\n     *\n     * \\@default 'fas'\n     */\n    this.defaultPrefix = 'fas';\n    /**\n     * Whether components should lookup icon definitions in the global icon\n     * library (the one available from\n     * `import { library } from '\\@fortawesome/fontawesome-svg-core')`.\n     *\n     * See https://github.com/FortAwesome/angular-fontawesome/blob/master/docs/usage/icon-library.md\n     * for detailed description of library modes.\n     *\n     * - 'unset' - Components should lookup icon definitions in the global library\n     * and emit warning if they find a definition there. This option is a default\n     * to assist existing applications with a migration. Applications are expected\n     * to switch to using {\\@link FaIconLibrary}.\n     * - true - Components should lookup icon definitions in the global library.\n     * Note that global icon library is deprecated and support for it will be\n     * removed. This option can be used to temporarily suppress warnings.\n     * - false - Components should not lookup icon definitions in the global\n     * library. Library will throw an error if missing icon is found in the global\n     * library.\n     *\n     * @deprecated This option is deprecated since 0.5.0. In 0.6.0 default will\n     * be changed to false. In 0.7.0 the option will be removed together with the\n     * support for the global icon library.\n     *\n     * \\@default 'unset'\n     */\n\n    this.globalLibrary = 'unset';\n  }\n\n}\n\nFaConfig.ɵfac = function FaConfig_Factory(t) {\n  return new (t || FaConfig)();\n};\n\nFaConfig.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: FaConfig,\n  factory: FaConfig.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nFaConfig.ngInjectableDef = ɵɵdefineInjectable({\n  factory: function FaConfig_Factory() {\n    return new FaConfig();\n  },\n  token: FaConfig,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass FaIconLibrary {\n  constructor() {\n    this.definitions = {};\n  }\n  /**\n   * @param {...?} icons\n   * @return {?}\n   */\n\n\n  addIcons(...icons) {\n    for (let i = 0; i < icons.length; i++) {\n      /** @type {?} */\n      const icon = icons[i];\n\n      if (!(icon.prefix in this.definitions)) {\n        this.definitions[icon.prefix] = {};\n      }\n\n      this.definitions[icon.prefix][icon.iconName] = icon;\n    }\n  }\n  /**\n   * @param {...?} packs\n   * @return {?}\n   */\n\n\n  addIconPacks(...packs) {\n    for (let i = 0; i < packs.length; i++) {\n      /** @type {?} */\n      const pack = packs[i];\n      /** @type {?} */\n\n      const icons = Object.keys(pack).map(\n      /**\n      * @param {?} key\n      * @return {?}\n      */\n      key => pack[key]);\n      this.addIcons(...icons);\n    }\n  }\n  /**\n   * @param {?} prefix\n   * @param {?} name\n   * @return {?}\n   */\n\n\n  getIconDefinition(prefix, name) {\n    if (prefix in this.definitions && name in this.definitions[prefix]) {\n      return this.definitions[prefix][name];\n    }\n\n    return null;\n  }\n\n}\n\nFaIconLibrary.ɵfac = function FaIconLibrary_Factory(t) {\n  return new (t || FaIconLibrary)();\n};\n\nFaIconLibrary.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: FaIconLibrary,\n  factory: FaIconLibrary.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nFaIconLibrary.ngInjectableDef = ɵɵdefineInjectable({\n  factory: function FaIconLibrary_Factory() {\n    return new FaIconLibrary();\n  },\n  token: FaIconLibrary,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst faWarnIfIconDefinitionMissing =\n/**\n* @param {?} iconSpec\n* @return {?}\n*/\niconSpec => {\n  console.error(`FontAwesome: Could not find icon with iconName=${iconSpec.iconName} and prefix=${iconSpec.prefix}. ` + `This warning will become a hard error in 0.6.0.`);\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst faWarnIfIconSpecMissing =\n/**\n* @return {?}\n*/\n() => {\n  console.error('FontAwesome: Property `icon` is required for `fa-icon`/`fa-duotone-icon` components. ' + `This warning will become a hard error in 0.6.0.`);\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Fontawesome class list.\n * Returns classes array by props.\n * @type {?}\n */\n\n\nconst faClassList =\n/**\n* @param {?} props\n* @return {?}\n*/\nprops => {\n  /** @type {?} */\n  const classes = {\n    'fa-spin': props.spin,\n    'fa-pulse': props.pulse,\n    'fa-fw': props.fixedWidth,\n    'fa-border': props.border,\n    'fa-li': props.listItem,\n    'fa-inverse': props.inverse,\n    'fa-layers-counter': props.counter,\n    'fa-flip-horizontal': props.flip === 'horizontal' || props.flip === 'both',\n    'fa-flip-vertical': props.flip === 'vertical' || props.flip === 'both',\n    [`fa-${props.size}`]: props.size !== null,\n    [`fa-rotate-${props.rotate}`]: props.rotate !== null,\n    [`fa-pull-${props.pull}`]: props.pull !== null,\n    [`fa-stack-${props.stackItemSize}`]: props.stackItemSize != null\n  };\n  return Object.keys(classes).map(\n  /**\n  * @param {?} key\n  * @return {?}\n  */\n  key => classes[key] ? key : null).filter(\n  /**\n  * @param {?} key\n  * @return {?}\n  */\n  key => key);\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Returns if is IconLookup or not.\n * @type {?}\n */\n\n\nconst isIconLookup =\n/**\n* @param {?} i\n* @return {?}\n*/\ni => {\n  return (\n    /** @type {?} */\n    i.prefix !== undefined &&\n    /** @type {?} */\n    i.iconName !== undefined\n  );\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Normalizing icon spec.\n * @type {?}\n */\n\n\nconst faNormalizeIconSpec =\n/**\n* @param {?} iconSpec\n* @param {?} defaultPrefix\n* @return {?}\n*/\n(iconSpec, defaultPrefix) => {\n  if (isIconLookup(iconSpec)) {\n    return iconSpec;\n  }\n\n  if (Array.isArray(iconSpec) &&\n  /** @type {?} */\n  iconSpec.length === 2) {\n    return {\n      prefix: iconSpec[0],\n      iconName: iconSpec[1]\n    };\n  }\n\n  if (typeof iconSpec === 'string') {\n    return {\n      prefix: defaultPrefix,\n      iconName: iconSpec\n    };\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet FaStackItemSizeDirective = /*#__PURE__*/(() => {\n  class FaStackItemSizeDirective {\n    constructor() {\n      /**\n       * Specify whether icon inside {\\@link FaStackComponent} should be rendered in\n       * regular size (1x) or as a larger icon (2x).\n       */\n      this.stackItemSize = '1x';\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n\n    ngOnChanges(changes) {\n      if ('size' in changes) {\n        throw new Error('fa-icon is not allowed to customize size when used inside fa-stack. ' + 'Set size on the enclosing fa-stack instead: <fa-stack size=\"4x\">...</fa-stack>.');\n      }\n    }\n\n  }\n\n  FaStackItemSizeDirective.ɵfac = function FaStackItemSizeDirective_Factory(t) {\n    return new (t || FaStackItemSizeDirective)();\n  };\n\n  FaStackItemSizeDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FaStackItemSizeDirective,\n    selectors: [[\"fa-icon\", \"stackItemSize\", \"\"], [\"fa-duotone-icon\", \"stackItemSize\", \"\"]],\n    inputs: {\n      stackItemSize: \"stackItemSize\",\n      size: \"size\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return FaStackItemSizeDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet FaIconComponent = /*#__PURE__*/(() => {\n  class FaIconComponent {\n    /**\n     * @param {?} sanitizer\n     * @param {?} config\n     * @param {?} iconLibrary\n     * @param {?} stackItem\n     */\n    constructor(sanitizer, config, iconLibrary, stackItem) {\n      this.sanitizer = sanitizer;\n      this.config = config;\n      this.iconLibrary = iconLibrary;\n      this.stackItem = stackItem;\n      this.classes = [];\n    }\n    /**\n     * @deprecated Since 0.5.0. Will be removed in 0.6.0. Use `icon` property directly.\n     * @return {?}\n     */\n\n\n    get iconProp() {\n      return this.icon;\n    }\n    /**\n     * @deprecated Since 0.5.0. Will be removed in 0.6.0. Use `icon` property directly.\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    set iconProp(value) {\n      this.icon = value;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n\n    ngOnChanges(changes) {\n      if (this.icon == null) {\n        return faWarnIfIconSpecMissing();\n      }\n\n      if (changes) {\n        /** @type {?} */\n        const iconDefinition = this.findIconDefinition(this.icon);\n\n        if (iconDefinition != null) {\n          /** @type {?} */\n          const params = this.buildParams();\n          this.renderIcon(iconDefinition, params);\n        }\n      }\n    }\n    /**\n     * Programmatically trigger rendering of the icon.\n     *\n     * This method is useful, when creating {\\@link FaIconComponent} dynamically or\n     * changing its inputs programmatically as in these cases icon won't be\n     * re-rendered automatically.\n     * @return {?}\n     */\n\n\n    render() {\n      this.ngOnChanges({});\n    }\n    /**\n     * @protected\n     * @param {?} i\n     * @return {?}\n     */\n\n\n    findIconDefinition(i) {\n      /** @type {?} */\n      const lookup = faNormalizeIconSpec(i, this.config.defaultPrefix);\n\n      if ('icon' in lookup) {\n        return lookup;\n      }\n      /** @type {?} */\n\n\n      const definition = this.iconLibrary.getIconDefinition(lookup.prefix, lookup.iconName);\n\n      if (definition != null) {\n        return definition;\n      }\n      /** @type {?} */\n\n\n      const globalDefinition = findIconDefinition(lookup);\n\n      if (globalDefinition != null) {\n        /** @type {?} */\n        const message = 'Global icon library is deprecated. ' + 'Consult https://github.com/FortAwesome/angular-fontawesome/blob/master/UPGRADING.md ' + 'for the migration instructions.';\n\n        if (this.config.globalLibrary === 'unset') {\n          console.error('FontAwesome: ' + message);\n        } else if (!this.config.globalLibrary) {\n          throw new Error(message);\n        }\n\n        return globalDefinition;\n      }\n\n      faWarnIfIconDefinitionMissing(lookup);\n      return null;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n\n    buildParams() {\n      /** @type {?} */\n      const classOpts = {\n        flip: this.flip,\n        spin: this.spin,\n        pulse: this.pulse,\n        border: this.border,\n        inverse: this.inverse,\n        listItem: this.listItem,\n        size: this.size || null,\n        pull: this.pull || null,\n        rotate: this.rotate || null,\n        fixedWidth: this.fixedWidth,\n        stackItemSize: this.stackItem != null ? this.stackItem.stackItemSize : null\n      };\n      /** @type {?} */\n\n      const parsedTransform = typeof this.transform === 'string' ? parse.transform(this.transform) : this.transform;\n      return {\n        title: this.title,\n        transform: parsedTransform,\n        classes: [...faClassList(classOpts), ...this.classes],\n        mask: this.mask != null ? this.findIconDefinition(this.mask) : null,\n        styles: this.styles != null ? this.styles : {},\n        symbol: this.symbol,\n        attributes: {\n          role: this.a11yRole\n        }\n      };\n    }\n    /**\n     * @private\n     * @param {?} definition\n     * @param {?} params\n     * @return {?}\n     */\n\n\n    renderIcon(definition, params) {\n      /** @type {?} */\n      const renderedIcon = icon(definition, params);\n      this.renderedIconHTML = this.sanitizer.bypassSecurityTrustHtml(renderedIcon.html.join('\\n'));\n    }\n\n  }\n\n  FaIconComponent.ɵfac = function FaIconComponent_Factory(t) {\n    return new (t || FaIconComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(FaConfig), ɵngcc0.ɵɵdirectiveInject(FaIconLibrary), ɵngcc0.ɵɵdirectiveInject(FaStackItemSizeDirective, 8));\n  };\n\n  FaIconComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FaIconComponent,\n    selectors: [[\"fa-icon\"]],\n    hostAttrs: [1, \"ng-fa-icon\"],\n    hostVars: 2,\n    hostBindings: function FaIconComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"innerHTML\", ctx.renderedIconHTML, ɵngcc0.ɵɵsanitizeHtml);\n        ɵngcc0.ɵɵattribute(\"title\", ctx.title);\n      }\n    },\n    inputs: {\n      classes: \"classes\",\n      icon: \"icon\",\n      title: \"title\",\n      spin: \"spin\",\n      pulse: \"pulse\",\n      mask: \"mask\",\n      styles: \"styles\",\n      flip: \"flip\",\n      size: \"size\",\n      pull: \"pull\",\n      border: \"border\",\n      inverse: \"inverse\",\n      symbol: \"symbol\",\n      listItem: \"listItem\",\n      rotate: \"rotate\",\n      fixedWidth: \"fixedWidth\",\n      transform: \"transform\",\n      a11yRole: \"a11yRole\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function FaIconComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  /** @nocollapse */\n\n  return FaIconComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet FaDuotoneIconComponent = /*#__PURE__*/(() => {\n  class FaDuotoneIconComponent extends FaIconComponent {\n    /**\n     * @protected\n     * @param {?} i\n     * @return {?}\n     */\n    findIconDefinition(i) {\n      /** @type {?} */\n      const lookup = super.findIconDefinition(i);\n\n      if (lookup != null && lookup.prefix !== 'fad') {\n        throw new Error('The specified icon does not appear to be a Duotone icon. ' + 'Check that you specified the correct style: ' + `<fa-duotone-icon [icon]=\"['fab', '${lookup.iconName}']\"></fa-duotone-icon> ` + `or use: <fa-icon icon=\"${lookup.iconName}\"></fa-icon> instead.`);\n      }\n\n      return lookup;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n\n    buildParams() {\n      /** @type {?} */\n      const params = super.buildParams();\n\n      if (this.swapOpacity === true || this.swapOpacity === 'true') {\n        params.classes.push('fa-swap-opacity');\n      }\n\n      if (this.primaryOpacity != null) {\n        params.styles['--fa-primary-opacity'] = this.primaryOpacity.toString();\n      }\n\n      if (this.secondaryOpacity != null) {\n        params.styles['--fa-secondary-opacity'] = this.secondaryOpacity.toString();\n      }\n\n      if (this.primaryColor != null) {\n        params.styles['--fa-primary-color'] = this.primaryColor;\n      }\n\n      if (this.secondaryColor != null) {\n        params.styles['--fa-secondary-color'] = this.secondaryColor;\n      }\n\n      return params;\n    }\n\n  }\n\n  FaDuotoneIconComponent.ɵfac = /*@__PURE__*/function () {\n    let ɵFaDuotoneIconComponent_BaseFactory;\n    return function FaDuotoneIconComponent_Factory(t) {\n      return (ɵFaDuotoneIconComponent_BaseFactory || (ɵFaDuotoneIconComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FaDuotoneIconComponent)))(t || FaDuotoneIconComponent);\n    };\n  }();\n\n  FaDuotoneIconComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FaDuotoneIconComponent,\n    selectors: [[\"fa-duotone-icon\"]],\n    inputs: {\n      swapOpacity: \"swapOpacity\",\n      primaryOpacity: \"primaryOpacity\",\n      secondaryOpacity: \"secondaryOpacity\",\n      primaryColor: \"primaryColor\",\n      secondaryColor: \"secondaryColor\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function FaDuotoneIconComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return FaDuotoneIconComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Fontawesome layers.\n */\n\n\nlet FaLayersComponent = /*#__PURE__*/(() => {\n  class FaLayersComponent {\n    /**\n     * @param {?} renderer\n     * @param {?} elementRef\n     */\n    constructor(renderer, elementRef) {\n      this.renderer = renderer;\n      this.elementRef = elementRef;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnInit() {\n      this.renderer.addClass(this.elementRef.nativeElement, 'fa-layers');\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n\n    ngOnChanges(changes) {\n      if ('size' in changes) {\n        if (changes.size.currentValue != null) {\n          this.renderer.addClass(this.elementRef.nativeElement, `fa-${changes.size.currentValue}`);\n        }\n\n        if (changes.size.previousValue != null) {\n          this.renderer.removeClass(this.elementRef.nativeElement, `fa-${changes.size.previousValue}`);\n        }\n      }\n    }\n\n  }\n\n  FaLayersComponent.ɵfac = function FaLayersComponent_Factory(t) {\n    return new (t || FaLayersComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  FaLayersComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FaLayersComponent,\n    selectors: [[\"fa-layers\"]],\n    hostVars: 2,\n    hostBindings: function FaLayersComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"fa-fw\", ctx.fixedWidth);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      fixedWidth: \"fixedWidth\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    template: function FaLayersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  /** @nocollapse */\n\n  return FaLayersComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Warns if parent component not existing.\n * @type {?}\n */\n\n\nconst faWarnIfParentNotExist =\n/**\n* @param {?} parent\n* @param {?} parentName\n* @param {?} childName\n* @return {?}\n*/\n(parent, parentName, childName) => {\n  if (!parent) {\n    console.error(`FontAwesome: ${childName} should be used as child of ${parentName} only.`);\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @abstract\n */\n\n\nlet FaLayersTextBaseComponent = /*#__PURE__*/(() => {\n  class FaLayersTextBaseComponent {\n    /**\n     * @param {?} parent\n     * @param {?} sanitizer\n     */\n    constructor(parent, sanitizer) {\n      this.parent = parent;\n      this.sanitizer = sanitizer;\n      this.classes = [];\n      faWarnIfParentNotExist(this.parent, 'FaLayersComponent', this.constructor.name);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n\n    ngOnChanges(changes) {\n      if (changes) {\n        this.updateParams();\n        this.updateContent();\n      }\n    }\n    /**\n     * Updating content by params and content.\n     * @private\n     * @return {?}\n     */\n\n\n    updateContent() {\n      this.renderedHTML = this.sanitizer.bypassSecurityTrustHtml(this.renderFontawesomeObject(this.content || '', this.params).html.join('\\n'));\n    }\n\n  }\n\n  FaLayersTextBaseComponent.ɵfac = function FaLayersTextBaseComponent_Factory(t) {\n    return new (t || FaLayersTextBaseComponent)(ɵngcc0.ɵɵinject(forwardRef(\n    /**\n    * @return {?}\n    */\n    () => FaLayersComponent), 8), ɵngcc0.ɵɵinject(ɵngcc1.DomSanitizer));\n  };\n\n  FaLayersTextBaseComponent.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: FaLayersTextBaseComponent,\n    factory: FaLayersTextBaseComponent.ɵfac\n  });\n  FaLayersTextBaseComponent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FaLayersTextBaseComponent,\n    hostVars: 1,\n    hostBindings: function FaLayersTextBaseComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"innerHTML\", ctx.renderedHTML, ɵngcc0.ɵɵsanitizeHtml);\n      }\n    },\n    inputs: {\n      classes: \"classes\",\n      content: \"content\",\n      title: \"title\",\n      styles: \"styles\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  /** @nocollapse */\n\n  return FaLayersTextBaseComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Fontawesome layers counter.\n */\n\n\nlet FaLayersCounterComponent = /*#__PURE__*/(() => {\n  class FaLayersCounterComponent extends FaLayersTextBaseComponent {\n    /**\n     * Updating params by component props.\n     * @protected\n     * @return {?}\n     */\n    updateParams() {\n      this.params = {\n        title: this.title,\n        classes: this.classes,\n        styles: this.styles\n      };\n    }\n    /**\n     * @protected\n     * @param {?} content\n     * @param {?=} params\n     * @return {?}\n     */\n\n\n    renderFontawesomeObject(content, params) {\n      return counter(content, params);\n    }\n\n  }\n\n  FaLayersCounterComponent.ɵfac = /*@__PURE__*/function () {\n    let ɵFaLayersCounterComponent_BaseFactory;\n    return function FaLayersCounterComponent_Factory(t) {\n      return (ɵFaLayersCounterComponent_BaseFactory || (ɵFaLayersCounterComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FaLayersCounterComponent)))(t || FaLayersCounterComponent);\n    };\n  }();\n\n  FaLayersCounterComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FaLayersCounterComponent,\n    selectors: [[\"fa-layers-counter\"]],\n    hostAttrs: [1, \"ng-fa-layers-counter\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function FaLayersCounterComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return FaLayersCounterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Fontawesome layers text.\n */\n\n\nlet FaLayersTextComponent = /*#__PURE__*/(() => {\n  class FaLayersTextComponent extends FaLayersTextBaseComponent {\n    /**\n     * Updating params by component props.\n     * @protected\n     * @return {?}\n     */\n    updateParams() {\n      /** @type {?} */\n      const classOpts = {\n        flip: this.flip,\n        spin: this.spin,\n        pulse: this.pulse,\n        border: this.border,\n        inverse: this.inverse,\n        listItem: this.listItem,\n        size: this.size || null,\n        pull: this.pull || null,\n        rotate: this.rotate || null,\n        fixedWidth: this.fixedWidth\n      };\n      /** @type {?} */\n\n      const parsedTransform = typeof this.transform === 'string' ? parse.transform(this.transform) : this.transform;\n      this.params = {\n        transform: parsedTransform,\n        classes: [...faClassList(classOpts), ...this.classes],\n        title: this.title,\n        styles: this.styles\n      };\n    }\n    /**\n     * @protected\n     * @param {?} content\n     * @param {?=} params\n     * @return {?}\n     */\n\n\n    renderFontawesomeObject(content, params) {\n      return text(content, params);\n    }\n\n  }\n\n  FaLayersTextComponent.ɵfac = /*@__PURE__*/function () {\n    let ɵFaLayersTextComponent_BaseFactory;\n    return function FaLayersTextComponent_Factory(t) {\n      return (ɵFaLayersTextComponent_BaseFactory || (ɵFaLayersTextComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FaLayersTextComponent)))(t || FaLayersTextComponent);\n    };\n  }();\n\n  FaLayersTextComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FaLayersTextComponent,\n    selectors: [[\"fa-layers-text\"]],\n    hostAttrs: [1, \"ng-fa-layers-text\"],\n    inputs: {\n      spin: \"spin\",\n      pulse: \"pulse\",\n      flip: \"flip\",\n      size: \"size\",\n      pull: \"pull\",\n      border: \"border\",\n      inverse: \"inverse\",\n      listItem: \"listItem\",\n      rotate: \"rotate\",\n      fixedWidth: \"fixedWidth\",\n      transform: \"transform\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function FaLayersTextComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return FaLayersTextComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet FaStackComponent = /*#__PURE__*/(() => {\n  class FaStackComponent {\n    /**\n     * @param {?} renderer\n     * @param {?} elementRef\n     */\n    constructor(renderer, elementRef) {\n      this.renderer = renderer;\n      this.elementRef = elementRef;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnInit() {\n      this.renderer.addClass(this.elementRef.nativeElement, 'fa-stack');\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n\n    ngOnChanges(changes) {\n      if ('size' in changes) {\n        if (changes.size.currentValue != null) {\n          this.renderer.addClass(this.elementRef.nativeElement, `fa-${changes.size.currentValue}`);\n        }\n\n        if (changes.size.previousValue != null) {\n          this.renderer.removeClass(this.elementRef.nativeElement, `fa-${changes.size.previousValue}`);\n        }\n      }\n    }\n\n  }\n\n  FaStackComponent.ɵfac = function FaStackComponent_Factory(t) {\n    return new (t || FaStackComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  FaStackComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FaStackComponent,\n    selectors: [[\"fa-stack\"]],\n    inputs: {\n      size: \"size\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c3,\n    decls: 1,\n    vars: 0,\n    template: function FaStackComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  /** @nocollapse */\n\n  return FaStackComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet FontAwesomeModule = /*#__PURE__*/(() => {\n  class FontAwesomeModule {}\n\n  FontAwesomeModule.ɵfac = function FontAwesomeModule_Factory(t) {\n    return new (t || FontAwesomeModule)();\n  };\n\n  FontAwesomeModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FontAwesomeModule\n  });\n  FontAwesomeModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return FontAwesomeModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FontAwesomeModule, {\n    declarations: [FaIconComponent, FaDuotoneIconComponent, FaLayersComponent, FaLayersTextComponent, FaLayersCounterComponent, FaStackComponent, FaStackItemSizeDirective],\n    exports: [FaIconComponent, FaDuotoneIconComponent, FaLayersComponent, FaLayersTextComponent, FaLayersCounterComponent, FaStackComponent, FaStackItemSizeDirective]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @deprecated Since 0.5.0. Will be removed in 0.6.0. Use FaConfig directly.\n */\n\n\nclass FaIconService {\n  /**\n   * @param {?} config\n   */\n  constructor(config) {\n    this.config = config;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get defaultPrefix() {\n    return this.config.defaultPrefix;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set defaultPrefix(value) {\n    this.config.defaultPrefix = value;\n  }\n\n}\n\nFaIconService.ɵfac = function FaIconService_Factory(t) {\n  return new (t || FaIconService)(ɵngcc0.ɵɵinject(FaConfig));\n};\n\nFaIconService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: FaIconService,\n  factory: FaIconService.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\n/** @nocollapse */\nFaIconService.ngInjectableDef = ɵɵdefineInjectable({\n  factory: function FaIconService_Factory() {\n    return new FaIconService(ɵɵinject(FaConfig));\n  },\n  token: FaIconService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nexport { FaConfig, FaDuotoneIconComponent, FaIconComponent, FaIconLibrary, FaIconService, FaLayersComponent, FaLayersCounterComponent, FaLayersTextComponent, FaStackComponent, FaStackItemSizeDirective, FontAwesomeModule, FaLayersTextBaseComponent as ɵa }; //# sourceMappingURL=angular-fontawesome.js.map","map":null,"metadata":{},"sourceType":"module"}