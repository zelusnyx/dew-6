{"ast":null,"code":"import { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"src/app/http-service.service\";\nimport * as i4 from \"../../../state-service.service\";\n\nfunction UploadComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Drag & drop a file. or Click on \");\n    i0.ɵɵelementStart(2, \"span\", 4);\n    i0.ɵɵlistener(\"click\", function UploadComponent_ng_template_3_Template_span_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const openFileSelector_r1 = restoredCtx.openFileSelector;\n      return openFileSelector_r1();\n    });\n    i0.ɵɵelementStart(3, \"u\");\n    i0.ɵɵtext(4, \"Browse Files\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \" to upload. (accepts \");\n    i0.ɵɵelementStart(6, \"b\");\n    i0.ɵɵtext(7, \".dew\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \" files only) \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let UploadComponent = /*#__PURE__*/(() => {\n  class UploadComponent {\n    constructor(_snackBar, dialog, http, state) {\n      this._snackBar = _snackBar;\n      this.dialog = dialog;\n      this.http = http;\n      this.state = state;\n      this.files = [];\n      this.filename = \"\";\n    }\n\n    dropped(files) {\n      //this.files = files;\n      for (const droppedFile of files) {\n        this.files.push(droppedFile); // Is it a file?\n\n        this.upload(droppedFile);\n\n        if (droppedFile.fileEntry.isFile) {\n          const fileEntry = droppedFile.fileEntry;\n          fileEntry.file(file => {\n            this.filename = file.name; // Here you can access the real file\n\n            var reader = new FileReader();\n\n            reader.onload = () => {// console.log(reader.result);\n            };\n\n            reader.readAsText(file);\n          });\n        } else {\n          // It was a directory (empty directories are added, otherwise only files)\n          const fileEntry = droppedFile.fileEntry;\n          console.log(droppedFile.relativePath, fileEntry);\n        }\n      }\n    }\n\n    fileOver(event) {\n      console.log(event);\n    }\n\n    fileLeave(event) {\n      console.log(event);\n    }\n\n    delete(index) {\n      const fileEntry = this.files[index].fileEntry;\n\n      this._snackBar.open(\"File name \" + fileEntry.name + \" is deleted.\", \"Close\", {\n        duration: 2000\n      });\n\n      this.files.splice(index, 1);\n    }\n\n    upload(item) {\n      const fileEntry = item.fileEntry;\n      this.state.enableLoader();\n      fileEntry.file(file => {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        this.http.put(\"v1/pr/upload/dew\", formData, {\n          responseType: \"blob\",\n          withCredential: true\n        }).subscribe(data => {\n          this.state.disableLoader();\n\n          if (data.behaviors != undefined) {\n            this.state.setActors(data.actors);\n            this.state.setBehavior(data.behaviors);\n            this.state.setBindings(data.bindings);\n            this.state.setConstraints(data.constraints);\n            this.state.setUpload(true); // this.state.setBindings(data.constraints);\n\n            this._snackBar.open(\"File name \" + fileEntry.name + \" is uploaded!\", \"Close\", {\n              duration: 2000\n            });\n          } else {\n            this._snackBar.open(\"Error in uploading file name \" + fileEntry.name, \"Close\", {\n              duration: 2000\n            });\n          }\n        }, error => {\n          this._snackBar.open(\"Error in uploading file name \" + fileEntry.name, \"Close\", {\n            duration: 2000\n          });\n\n          this.state.disableLoader();\n        });\n      }); //   alert(fileEntry.name+\" is uploaded!\");\n    }\n\n    preview(item) {\n      const dialogRef = this.dialog.open(FilePreviewComponent, {\n        data: item.fileEntry\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        console.log(result);\n      });\n    }\n\n  }\n\n  UploadComponent.ɵfac = function UploadComponent_Factory(t) {\n    return new (t || UploadComponent)(i0.ɵɵdirectiveInject(i1.MatSnackBar), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.HttpService), i0.ɵɵdirectiveInject(i4.StateService));\n  };\n\n  UploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UploadComponent,\n    selectors: [[\"upload\"]],\n    decls: 5,\n    vars: 0,\n    consts: [[1, \"row\"], [1, \"col-md-12\"], [\"dropZoneLabel\", \"Drop files here\", \"accept\", \".dew\", 3, \"onFileDrop\", \"onFileOver\", \"onFileLeave\"], [\"accept\", \"ns\", \"multiple\", \"false\", \"ngx-file-drop-content-tmp\", \"\"], [2, \"cursor\", \"pointer\", 3, \"click\"]],\n    template: function UploadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"ngx-file-drop\", 2);\n        i0.ɵɵlistener(\"onFileDrop\", function UploadComponent_Template_ngx_file_drop_onFileDrop_2_listener($event) {\n          return ctx.dropped($event);\n        })(\"onFileOver\", function UploadComponent_Template_ngx_file_drop_onFileOver_2_listener($event) {\n          return ctx.fileOver($event);\n        })(\"onFileLeave\", function UploadComponent_Template_ngx_file_drop_onFileLeave_2_listener($event) {\n          return ctx.fileLeave($event);\n        });\n        i0.ɵɵtemplate(3, UploadComponent_ng_template_3_Template, 9, 0, \"ng-template\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"br\");\n      }\n    },\n    styles: [\".pointer[_ngcontent-%COMP%]{cursor:pointer;padding:.2em}.cdk-overlay-pane[_ngcontent-%COMP%]{max-width:80%}.upload-name[_ngcontent-%COMP%]{text-align:center}\"]\n  });\n  return UploadComponent;\n})();\nexport let FilePreviewComponent = /*#__PURE__*/(() => {\n  class FilePreviewComponent {\n    constructor(dialogRef, file) {\n      this.dialogRef = dialogRef;\n      this.file = file;\n      var t = this;\n      file.file(file => {\n        // Here you can access the real file\n        var reader = new FileReader();\n\n        reader.onload = () => {\n          t.fileContent = reader.result;\n        };\n\n        reader.readAsText(file);\n      });\n    }\n\n    onNoClick() {\n      this.dialogRef.close();\n    }\n\n  }\n\n  FilePreviewComponent.ɵfac = function FilePreviewComponent_Factory(t) {\n    return new (t || FilePreviewComponent)(i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  FilePreviewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FilePreviewComponent,\n    selectors: [[\"file-preview\"]],\n    decls: 9,\n    vars: 4,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"mat-typography\"], [3, \"innerHTML\"], [\"align\", \"end\"], [\"mat-button\", \"\", 3, \"mat-dialog-close\"], [\"mat-button\", \"\", \"cdkFocusInitial\", \"\", 3, \"mat-dialog-close\"]],\n    template: function FilePreviewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-dialog-content\", 1);\n        i0.ɵɵelement(3, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-dialog-actions\", 3);\n        i0.ɵɵelementStart(5, \"button\", 4);\n        i0.ɵɵtext(6, \"close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 5);\n        i0.ɵɵtext(8, \"upload\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"Content of \", ctx.file.name, \":\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"innerHTML\", ctx.fileContent, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mat-dialog-close\", false);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mat-dialog-close\", true);\n      }\n    },\n    encapsulation: 2\n  });\n  return FilePreviewComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}