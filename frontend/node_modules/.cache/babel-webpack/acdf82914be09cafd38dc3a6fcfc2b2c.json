{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as shape from 'd3-shape';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/http-service.service\";\nimport * as i2 from \"src/app/state-service.service\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@swimlane/ngx-graph\";\nimport * as i6 from \"@angular/common\";\nconst _c0 = [\"graph\"];\n\nfunction DependencyGraphComponent_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"marker\", 29);\n    i0.ɵɵelement(1, \"path\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"marker\", 31);\n    i0.ɵɵelementStart(3, \"text\");\n    i0.ɵɵtext(4, \"ALL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"marker\", 32);\n    i0.ɵɵelementStart(6, \"text\");\n    i0.ɵɵtext(7, \"ANY\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DependencyGraphComponent_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 33);\n    i0.ɵɵelementStart(1, \"rect\", 34);\n    i0.ɵɵlistener(\"mousedown\", function DependencyGraphComponent_ng_template_17_Template__svg_rect_mousedown_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const node_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onNodeCircleMouseDown($event, node_r11);\n    })(\"mouseup\", function DependencyGraphComponent_ng_template_17_Template__svg_rect_mouseup_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const node_r11 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.onNodeCircleMouseUp($event, node_r11);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"text\", 35);\n    i0.ɵɵlistener(\"mousedown\", function DependencyGraphComponent_ng_template_17_Template__svg_text_mousedown_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const node_r11 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.onNodeCircleMouseDown($event, node_r11);\n    })(\"mouseup\", function DependencyGraphComponent_ng_template_17_Template__svg_text_mouseup_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const node_r11 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.onNodeCircleMouseUp($event, node_r11);\n    });\n    i0.ɵɵelementStart(3, \"tspan\", 36);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"tspan\", 37);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"tspan\", 38);\n    i0.ɵɵtext(8, \"action\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const node_r11 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"width\", node_r11.dimension.width)(\"height\", node_r11.dimension.height)(\"fill\", ctx_r4.getColor(node_r11));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"x\", 10)(\"y\", node_r11.dimension.height / 16);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"visibility\", ctx_r4.showWaitTime(node_r11.data.wait_time));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"(Waits : \", node_r11.data.wait_time, \")\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(node_r11.data.action);\n  }\n}\n\nfunction DependencyGraphComponent_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 39);\n    i0.ɵɵelement(1, \"rect\", 40);\n    i0.ɵɵelementStart(2, \"text\", 41);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cluster_r17 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"width\", cluster_r17.dimension.width)(\"height\", cluster_r17.dimension.height)(\"fill\", ctx_r6.getColor(cluster_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"x\", 10)(\"y\", 30);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"(Actor: \", cluster_r17.label, \")\");\n  }\n}\n\nfunction DependencyGraphComponent_ng_template_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 42);\n    i0.ɵɵlistener(\"click\", function DependencyGraphComponent_ng_template_21_Template__svg_g_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const link_r18 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.deleteEdge($event, link_r18);\n    });\n    i0.ɵɵelement(1, \"rect\", 43);\n    i0.ɵɵelement(2, \"path\", 44);\n    i0.ɵɵelementStart(3, \"text\", 45);\n    i0.ɵɵelementStart(4, \"textPath\", 46);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const link_r18 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"x\", link_r18.midPoint.x - 20)(\"y\", link_r18.midPoint.y)(\"visibility\", ctx_r8.isEditable());\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"id\", link_r18.id)(\"marker-mid\", ctx_r8.getAllOrAnyKeyword(link_r18));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"dominant-baseline\", link_r18.dominantBaseline);\n    i0.ɵɵattribute(\"href\", \"#\" + link_r18.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", link_r18.label, \" \");\n  }\n}\n\nfunction DependencyGraphComponent__svg_line_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 47);\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"x1\", ctx_r9.startingDragPosition.x)(\"y1\", ctx_r9.startingDragPosition.y)(\"x2\", ctx_r9.currentDragPosition.x)(\"y2\", ctx_r9.currentDragPosition.y);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\n\nfunction DependencyGraphComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 28);\n    i0.ɵɵelement(2, \"div\", 48);\n    i0.ɵɵelementStart(3, \"div\", 17);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r21 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c1, item_r21.value));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r21.key, \" \");\n  }\n}\n\nexport let DependencyGraphComponent = /*#__PURE__*/(() => {\n  class DependencyGraphComponent {\n    constructor(http, state) {\n      this.http = http;\n      this.state = state;\n      this.navigate = new EventEmitter();\n      this.nodes = [];\n      this.links = [];\n      this.layout = 'dagreCluster';\n      this.layoutSettings = {\n        orientation: \"TB\"\n      };\n      this.clusters = [];\n      this.clusters2 = [];\n      this.curveType = 'Bundle';\n      this.curve = shape.curveLinear;\n      this.interpolationTypes = ['Bundle', 'Cardinal', 'Catmull Rom', 'Linear', 'Monotone X', 'Monotone Y', 'Natural', 'Step', 'Step After', 'Step Before'];\n      this.draggingEnabled = true;\n      this.panningEnabled = true;\n      this.zoomEnabled = false;\n      this.customColors = [\"#bf9d76\", \"#f2dfa7\", \"#a5d7c6\", \"#afafaf\", \"#ba9383\", \"#d9d5c3\", \"#55C22D\", \"#C1F33D\", \"#3CC099\", \"#AFFFFF\", \"#8CFC9D\", \"#76CFFA\", \"#FC9F32\"];\n      this.matching = {};\n      this.zoomLevel = 1.0;\n      this.zoomSpeed = 0.1;\n      this.minZoomLevel = 0.1;\n      this.maxZoomLevel = 4.0;\n      this.panOnZoom = true;\n      this.autoZoom = false;\n      this.autoCenter = true;\n      this.showClusters = false;\n      this.isDragging = false;\n      this.draggingNode = null;\n      this.currentDragPosition = {\n        x: 0,\n        y: 0\n      };\n      this.startingDragPosition = {\n        x: 0,\n        y: 0\n      };\n      this.mouseOverNode = null;\n      this.update$ = new Subject();\n      this.center$ = new Subject();\n      this.zoomToFit$ = new Subject();\n    }\n\n    ngOnInit() {\n      this.state.getExperimentColors().subscribe(d => {\n        this.matching = d;\n      });\n      this.state.getBehavior().subscribe(behavior => {\n        this.http.put(\"v1/pr/hlb/dependency_graph/parse\", {\n          \"scenario\": behavior\n        }, {\n          withCredential: true\n        }).subscribe(d => {\n          this.nodes = [];\n          this.links = [];\n          this.clusters = [];\n          var actors = {};\n          var c2 = [];\n\n          for (const n of d['nodes']) {\n            var n2 = {\n              data: n,\n              id: n.id,\n              label: n.actors[0]\n            };\n\n            if (actors.hasOwnProperty(n.actors[0])) {\n              actors[n.actors[0]].push(n.id);\n            } else {\n              actors[n.actors[0]] = [n.id];\n            }\n\n            this.nodes.push(n2);\n            this.nodes = [...this.nodes];\n          }\n\n          for (const [actor, values] of Object.entries(actors)) {\n            console.log(values);\n            var c1 = {\n              id: actor,\n              label: actor,\n              childNodeIds: actors[actor]\n            };\n            c2.push(c1);\n          }\n\n          for (const e of d['edges']) {\n            var e2 = e;\n            this.links.push(e2);\n            this.links = [...this.links];\n          }\n\n          this.clusters2 = c2;\n\n          if (this.showClusters) {\n            this.clusters = c2;\n          }\n\n          this.update$.next(true);\n        });\n      });\n    }\n    /**\n     * toggleDragging\n     */\n\n\n    toggleDragging() {\n      this.draggingEnabled = !this.draggingEnabled;\n      console.log(this.nodes);\n      this.update$.next(true);\n    }\n\n    toggleClusters() {\n      this.showClusters = !this.showClusters;\n      var x = this.clusters;\n      this.clusters = this.clusters2;\n      this.clusters2 = x;\n      this.update$.next(true);\n    }\n    /**\n     * getAllOrAnyKeyword\n     */\n\n\n    getAllOrAnyKeyword(link) {\n      if (link.data.all_or_any !== \"\") {\n        return \"url(#\" + link.data.all_or_any + \"_keyword)\";\n      } else {\n        return \"\";\n      }\n    }\n    /**\n     * showWaitTime\n     */\n\n\n    showWaitTime(wait_time) {\n      if (wait_time === \"None\") {\n        return \"hidden\";\n      } else {\n        return \"visible\";\n      }\n    }\n    /**\n     * isEditable\n     */\n\n\n    isEditable() {\n      if (this.draggingEnabled) {\n        return \"hidden\";\n      } else {\n        return \"visible\";\n      }\n    }\n    /**\n     * getColor\n    node   */\n\n\n    getColor(node) {\n      const existingColors = Object.values(this.matching);\n\n      if (this.matching.hasOwnProperty(node.label)) {\n        return this.matching[node.label];\n      } else {\n        var c = this.customColors[Math.floor(Math.random() * this.customColors.length)];\n\n        while (existingColors.includes(c)) {\n          c = this.customColors[Math.floor(Math.random() * this.customColors.length)];\n        }\n\n        this.matching[node.label] = c;\n        this.state.setExperimentColors(this.matching);\n        return c;\n      }\n    }\n    /**\n     * zoomIn\n     */\n\n\n    zoomIn() {\n      this.graphEl.zoom(1.1);\n    }\n    /**\n     * zoomOut\n     */\n\n\n    zoomOut() {\n      this.graphEl.zoom(0.9);\n    }\n\n    fitToView() {\n      this.zoomToFit$.next(true);\n    }\n    /**\n     * getCloseBoxHeight\n     */\n\n\n    getCloseBoxHeight() {\n      if (this.draggingEnabled) {\n        return 0;\n      } else {\n        return 20;\n      }\n    }\n    /**\n     * getCloseBoxWidth\n     */\n\n\n    getCloseBoxWidth() {\n      if (this.draggingEnabled) {\n        return 0;\n      } else {\n        return 20;\n      }\n    }\n    /**\n       * On mouse up event\n       *\n       */\n\n\n    onMouseMove(event) {\n      if (!this.isDragging) {\n        return;\n      }\n\n      this.currentDragPosition.x += event.movementX / this.graphEl.zoomLevel;\n      this.currentDragPosition.y += event.movementY / this.graphEl.zoomLevel;\n    }\n    /**\n     * On mouse up event\n     *\n     */\n\n\n    onMouseUp(event) {\n      if (this.isDragging && this.draggingNode) {\n        // logic if mouse is released over another node\n        console.log(event, this.draggingNode);\n      }\n\n      this.isDragging = false;\n      this.draggingNode = undefined;\n    }\n    /**\n     * On node circle mouse down to kick off dragging\n     *\n     */\n\n\n    onNodeCircleMouseDown(event, node) {\n      if (this.draggingEnabled) {\n        return;\n      }\n\n      this.isDragging = true;\n      this.draggingNode = node;\n      this.startingDragPosition = {\n        x: (event.layerX - this.graphEl.panOffsetX) / this.graphEl.zoomLevel,\n        y: (event.layerY - this.graphEl.panOffsetY) / this.graphEl.zoomLevel\n      };\n      this.currentDragPosition = {\n        x: (event.layerX - this.graphEl.panOffsetX) / this.graphEl.zoomLevel,\n        y: (event.layerY - this.graphEl.panOffsetY) / this.graphEl.zoomLevel\n      };\n      setTimeout(() => {\n        this.mouseOverNode = undefined;\n      });\n    }\n\n    onNodeCircleMouseUp(event, node) {\n      if (this.draggingEnabled) {\n        return;\n      }\n\n      this.isDragging = false;\n      var src = this.draggingNode;\n      var dest = node;\n\n      if (src.id == dest.id) {\n        return;\n      }\n\n      var edge = {\n        id: Math.random().toString(36).substring(7),\n        source: this.draggingNode.id,\n        target: dest.id,\n        label: this.draggingNode.label + \"Run\" + this.draggingNode.data.action + \"Sig\",\n        data: {\n          all_or_any: \"\"\n        }\n      };\n\n      if (src.data['e_events'].indexOf(edge.label) === -1) {\n        src.data['e_events'].push(edge.label);\n      }\n\n      if (dest.data['t_events'].indexOf(edge.label) === -1) {\n        dest.data['t_events'].push(edge.label);\n      }\n\n      var reconstructedString = this.reconstructDEW(src);\n      var reconstructedString2 = this.reconstructDEW(dest);\n      var behaviors = null;\n      this.state.behavior.subscribe(b => {\n        behaviors = b;\n      });\n      var bindings = null;\n      this.state.bindings.subscribe(b => {\n        bindings = b;\n      });\n      bindings.push({\n        key: edge.label,\n        category: \"event\",\n        value: \"\"\n      });\n      behaviors[parseInt(src.id) - 1] = reconstructedString;\n      behaviors[parseInt(dest.id) - 1] = reconstructedString2;\n      this.state.setBehavior(behaviors);\n      this.state.setBindings(bindings);\n      this.links.push(edge);\n      this.links = [...this.links];\n      this.startingDragPosition = {\n        x: (event.layerX - this.graphEl.panOffsetX) / this.graphEl.zoomLevel,\n        y: (event.layerY - this.graphEl.panOffsetY) / this.graphEl.zoomLevel\n      };\n      this.currentDragPosition = {\n        x: node.position.x + node.dimension.width / 2,\n        y: node.position.y\n      };\n      setTimeout(() => {\n        this.mouseOverNode = undefined;\n      });\n    }\n    /**\n     * deleteEdge\n     */\n\n\n    deleteEdge(event, edge) {\n      if (this.draggingEnabled) {\n        return;\n      }\n\n      this.links = this.links.filter(e => {\n        return e.id != edge.id;\n      });\n      var src = this.nodes.find(n => {\n        return n.id === edge.source;\n      });\n      var dest = this.nodes.find(n => {\n        return n.id === edge.target;\n      });\n      src.data.e_events.splice(src.data.e_events.indexOf(edge.label), 1);\n      dest.data.t_events.splice(dest.data.t_events.indexOf(edge.label), 1); // TODO: Move into a method\n\n      var reconstructedString = this.reconstructDEW(src);\n      var reconstructedString2 = this.reconstructDEW(dest);\n      var behaviors = null;\n      this.state.behavior.subscribe(b => {\n        behaviors = b;\n      });\n      behaviors[parseInt(src.id) - 1] = reconstructedString;\n      behaviors[parseInt(dest.id) - 1] = reconstructedString2;\n      this.state.setBehavior(behaviors);\n      var bindings = null;\n      this.state.getBindings().subscribe(b => {\n        bindings = b;\n      });\n      bindings = bindings.filter(e => {\n        return e.key !== edge.label;\n      });\n      this.state.setBindings(bindings);\n    }\n    /**\n     * getMatching\n     */\n\n\n    getMatching() {\n      return this.matching;\n    }\n\n    reconstructDEW(node) {\n      var reconstructedString = \"\";\n\n      if (node.data['t_events'].length > 0) {\n        reconstructedString += \"when \" + node.data['t_events'].join(\", \") + \" \";\n      }\n\n      if (node.data['wait_time'] !== \"None\") {\n        reconstructedString += \" wait \" + JSON.parse(node.data['wait_time'].replace(/'/g, '\"')).join(\",\") + \" \";\n      }\n\n      reconstructedString += node.data['actors'].join(\", \") + \" \" + node.data[\"action\"] + \" \";\n\n      if (node.data['e_events'].length > 0) {\n        reconstructedString += \"emit \" + node.data['e_events'].join(\", \");\n      }\n\n      return reconstructedString;\n    }\n\n    showSlides() {\n      this.navigate.emit(4);\n    }\n\n    showEditor() {\n      this.navigate.emit(1);\n    }\n\n  }\n\n  DependencyGraphComponent.ɵfac = function DependencyGraphComponent_Factory(t) {\n    return new (t || DependencyGraphComponent)(i0.ɵɵdirectiveInject(i1.HttpService), i0.ɵɵdirectiveInject(i2.StateService));\n  };\n\n  DependencyGraphComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DependencyGraphComponent,\n    selectors: [[\"dependency-graph\"]],\n    viewQuery: function DependencyGraphComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.graphEl = _t.first);\n      }\n    },\n    hostBindings: function DependencyGraphComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mousemove\", function DependencyGraphComponent_mousemove_HostBindingHandler($event) {\n          return ctx.onMouseMove($event);\n        }, false, i0.ɵɵresolveDocument)(\"mouseup\", function DependencyGraphComponent_mouseup_HostBindingHandler($event) {\n          return ctx.onMouseUp($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    outputs: {\n      navigate: \"navigate\"\n    },\n    decls: 61,\n    vars: 22,\n    consts: [[1, \"container\"], [1, \"row\", \"sticky-top\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 1, \"col-md-2\", 3, \"click\"], [1, \"col-md-8\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 1, \"col-md-2\", 3, \"click\"], [1, \"row\"], [1, \"col-md-8\", \"taller\"], [3, \"links\", \"nodes\", \"clusters\", \"layout\", \"layoutSettings\", \"curve\", \"draggingEnabled\", \"panningEnabled\", \"enableZoom\", \"zoomSpeed\", \"minZoomLevel\", \"maxZoomLevel\", \"panOnZoom\", \"autoZoom\", \"autoCenter\", \"update$\", \"center$\", \"zoomToFit$\"], [\"graph\", \"\"], [\"defsTemplate\", \"\"], [\"nodeTemplate\", \"\"], [\"clusterTemplate\", \"\"], [\"linkTemplate\", \"\"], [\"class\", \"line drag-line\", \"marker-end\", \"url(#arrow)\", 4, \"ngIf\"], [1, \"col-md-4\", \"padded\"], [4, \"ngFor\", \"ngForOf\"], [1, \"col-md-3\"], [1, \"col-md-9\"], [\"type\", \"button\", 1, \"btn\", \"btn-info\", 3, \"click\"], [1, \"fa\", \"fa-plus\", \"info\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", 3, \"click\"], [1, \"fa\", \"fa-minus\", \"info\"], [1, \"custom-control\", \"custom-switch\", \"bottom-border\"], [\"type\", \"checkbox\", \"id\", \"editmode\", 1, \"custom-control-input\", 3, \"click\"], [\"for\", \"editmode\", 1, \"custom-control-label\"], [\"type\", \"checkbox\", \"id\", \"show-clusters\", 1, \"custom-control-input\", 3, \"click\"], [\"for\", \"show-clusters\", 1, \"custom-control-label\"], [1, \"row\", \"bottom-border\"], [\"id\", \"arrow\", \"viewBox\", \"0 -5 10 10\", \"refX\", \"8\", \"refY\", \"0\", \"markerWidth\", \"4\", \"markerHeight\", \"4\", \"orient\", \"auto\"], [\"d\", \"M0,-5L10,0L0,5\", 1, \"arrow-head\"], [\"id\", \"all_keyword\", \"viewBox\", \"0 -20 30 30\", \"refX\", \"30\", \"refY\", \"-20\", \"markerWidth\", \"80\", \"markerHeight\", \"20\", \"orient\", \"0\"], [\"id\", \"any_keyword\", \"viewBox\", \"0 -20 30 30\", \"refX\", \"30\", \"refY\", \"-20\", \"markerWidth\", \"80\", \"markerHeight\", \"20\", \"orient\", \"0\"], [1, \"node\"], [3, \"mousedown\", \"mouseup\"], [\"font-size\", \"large\", 3, \"mousedown\", \"mouseup\"], [\"x\", \"10\", \"dy\", \"1em\", 1, \"wait_time_text\"], [\"dominant-baseline\", \"middle\", \"x\", \"10\", \"dy\", \"1em\"], [\"x\", \"10\", \"dy\", \"2em\", \"visibility\", \"hidden\"], [1, \"node\", \"cluster\"], [\"rx\", \"5\", \"ry\", \"5\"], [\"alignment-baseline\", \"central\"], [1, \"edge\", 3, \"click\"], [\"fill\", \"red\", \"stroke\", \"none\", \"width\", \"20\", \"height\", \"20\"], [\"stroke-width\", \"2\", \"marker-end\", \"url(#arrow)\", 1, \"line\"], [\"text-anchor\", \"middle\"], [\"startOffset\", \"50%\", 1, \"text-path\"], [\"marker-end\", \"url(#arrow)\", 1, \"line\", \"drag-line\"], [1, \"col-md-3\", 3, \"ngStyle\"]],\n    template: function DependencyGraphComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"mat-toolbar\");\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function DependencyGraphComponent_Template_button_click_3_listener() {\n          return ctx.showSlides();\n        });\n        i0.ɵɵtext(4, \"Previous : Edit Slides\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function DependencyGraphComponent_Template_button_click_6_listener() {\n          return ctx.showEditor();\n        });\n        i0.ɵɵtext(7, \"Next : Go to editor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10, \"This graph outlines the sequence of actions in your scenario. Edges denote dependencies where one action produces an event/trigger that the other action depends on.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 5);\n        i0.ɵɵelementStart(12, \"div\", 6);\n        i0.ɵɵelementStart(13, \"ngx-graph\", 7, 8);\n        i0.ɵɵtemplate(15, DependencyGraphComponent_ng_template_15_Template, 8, 0, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(17, DependencyGraphComponent_ng_template_17_Template, 9, 8, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(19, DependencyGraphComponent_ng_template_19_Template, 4, 6, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(21, DependencyGraphComponent_ng_template_21_Template, 6, 9, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(23, DependencyGraphComponent__svg_line_23_Template, 1, 4, \"line\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 14);\n        i0.ɵɵelementStart(25, \"div\", 5);\n        i0.ɵɵtext(26, \"Legend\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(27, DependencyGraphComponent_div_27_Template, 5, 4, \"div\", 15);\n        i0.ɵɵpipe(28, \"keyvalue\");\n        i0.ɵɵelement(29, \"br\");\n        i0.ɵɵelementStart(30, \"div\", 5);\n        i0.ɵɵelementStart(31, \"div\", 16);\n        i0.ɵɵtext(32, \"Zoom level\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 17);\n        i0.ɵɵelementStart(34, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function DependencyGraphComponent_Template_button_click_34_listener() {\n          return ctx.zoomIn();\n        });\n        i0.ɵɵelement(35, \"i\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function DependencyGraphComponent_Template_button_click_36_listener() {\n          return ctx.fitToView();\n        });\n        i0.ɵɵtext(37, \" Fit to view \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function DependencyGraphComponent_Template_button_click_38_listener() {\n          return ctx.zoomOut();\n        });\n        i0.ɵɵelement(39, \"i\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"br\");\n        i0.ɵɵelementStart(41, \"div\", 23);\n        i0.ɵɵelementStart(42, \"input\", 24);\n        i0.ɵɵlistener(\"click\", function DependencyGraphComponent_Template_input_click_42_listener() {\n          return ctx.toggleDragging();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"label\", 25);\n        i0.ɵɵtext(44, \"Edit edges\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(45, \"br\");\n        i0.ɵɵelementStart(46, \"div\", 23);\n        i0.ɵɵelementStart(47, \"input\", 26);\n        i0.ɵɵlistener(\"click\", function DependencyGraphComponent_Template_input_click_47_listener() {\n          return ctx.toggleClusters();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"label\", 27);\n        i0.ɵɵtext(49, \"Show clusters\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(50, \"br\");\n        i0.ɵɵelementStart(51, \"div\", 28);\n        i0.ɵɵelementStart(52, \"ul\");\n        i0.ɵɵelementStart(53, \"li\");\n        i0.ɵɵtext(54, \"To add an edge, toggle the switch, click on the source (hold the button and do not release) and drag the arrow till the destination.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"li\");\n        i0.ɵɵtext(56, \"To delete an edge, click on the red box next to the edge. Please note that the mouse icon changes when a node or edge is clickable.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"li\");\n        i0.ɵɵtext(58, \"To zoom in or zoom out, use the (+) and (-) buttons to increase or decrease the zoom level\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"li\");\n        i0.ɵɵtext(60, \"Please use the panning functionality instead of scrolling. (Click on the white area and drag in the desired direction)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"links\", ctx.links)(\"nodes\", ctx.nodes)(\"clusters\", ctx.clusters)(\"layout\", ctx.layout)(\"layoutSettings\", ctx.layoutSettings)(\"curve\", ctx.curve)(\"draggingEnabled\", ctx.draggingEnabled)(\"panningEnabled\", ctx.panningEnabled)(\"enableZoom\", ctx.zoomEnabled)(\"zoomSpeed\", ctx.zoomSpeed)(\"minZoomLevel\", ctx.minZoomLevel)(\"maxZoomLevel\", ctx.maxZoomLevel)(\"panOnZoom\", ctx.panOnZoom)(\"autoZoom\", ctx.autoZoom)(\"autoCenter\", ctx.autoCenter)(\"update$\", ctx.update$)(\"center$\", ctx.center$)(\"zoomToFit$\", ctx.zoomToFit$);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.draggingNode);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(28, 20, ctx.matching));\n      }\n    },\n    directives: [i3.MatToolbar, i4.MatButton, i5.GraphComponent, i6.NgIf, i6.NgForOf, i6.NgStyle],\n    pipes: [i6.KeyValuePipe],\n    styles: [\".taller[_ngcontent-%COMP%]{border:1px solid #666;max-height:1000px}.node[_ngcontent-%COMP%]{max-height:150px}.padded[_ngcontent-%COMP%]{padding:30px}.bottom-border[_ngcontent-%COMP%]{border-bottom:1px dotted #666;padding-bottom:10px;padding-top:10px}.drag-line[_ngcontent-%COMP%]{stroke-width:2px;stroke:#000;stroke-dasharray:4}.wait_time_text[_ngcontent-%COMP%]{font-size:small;font-style:italic;font-family:serif;font-weight:bold}\"]\n  });\n  return DependencyGraphComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}