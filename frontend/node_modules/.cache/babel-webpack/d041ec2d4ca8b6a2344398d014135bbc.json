{"ast":null,"code":"import { moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport * as Quill from \"quill\";\nimport EditorService from \"../common/editor-service\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/http-service.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"src/app/state-service.service\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"ngx-quill\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/button\";\nimport * as i12 from \"../common/text-filter.pipe\";\n\nfunction HlbComponent_div_10_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function HlbComponent_div_10_button_3_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const word_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.insertValue(word_r11.value);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const word_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"disabled\", word_r11.flag);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(word_r11.value);\n  }\n}\n\nfunction HlbComponent_div_10_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r10.suggestionbehaviorMessage);\n  }\n}\n\nfunction HlbComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2, \"Suggestions:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, HlbComponent_div_10_button_3_Template, 2, 2, \"button\", 17);\n    i0.ɵɵpipe(4, \"textfilter\");\n    i0.ɵɵpipe(5, \"slice\");\n    i0.ɵɵtemplate(6, HlbComponent_div_10_button_6_Template, 2, 2, \"button\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", !ctx_r0.isEnable(2));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(4, 3, i0.ɵɵpipeBind3(5, 6, ctx_r0.behaviorWordList, 0, 3), ctx_r0.behaviorTextFilter));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.suggestionbehaviorMessage != null);\n  }\n}\n\nfunction HlbComponent_div_21_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function HlbComponent_div_21_button_3_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const word_r16 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return ctx_r17.insertValueInConstraint(word_r16.value);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const word_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(word_r16.value);\n  }\n}\n\nfunction HlbComponent_div_21_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r15.suggestionConstraintMessage);\n  }\n}\n\nfunction HlbComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2, \"Suggestions:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, HlbComponent_div_21_button_3_Template, 2, 1, \"button\", 21);\n    i0.ɵɵpipe(4, \"textfilter\");\n    i0.ɵɵpipe(5, \"slice\");\n    i0.ɵɵtemplate(6, HlbComponent_div_21_button_6_Template, 2, 2, \"button\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", !ctx_r1.isEnable(3));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(4, 3, i0.ɵɵpipeBind3(5, 6, ctx_r1.constraintWordList, 0, 3), ctx_r1.constraintTextFilter));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.suggestionConstraintMessage != null);\n  }\n}\n\nfunction HlbComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵelementStart(2, \"i\");\n    i0.ɵɵtext(3, \"No Bindings Needed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HlbComponent_div_31_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵelementStart(2, \"mat-form-field\", 26);\n    i0.ɵɵelementStart(3, \"mat-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 27);\n    i0.ɵɵlistener(\"ngModelChange\", function HlbComponent_div_31_li_2_Template_input_ngModelChange_5_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const item_r20 = restoredCtx.$implicit;\n      return item_r20.value = $event;\n    })(\"change\", function HlbComponent_div_31_li_2_Template_input_change_5_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return ctx_r24.storeBinding();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r20 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(item_r20.key + \" represents: \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r19.onlyReadable())(\"ngModel\", item_r20.value);\n  }\n}\n\nfunction HlbComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"ul\", 24);\n    i0.ɵɵtemplate(2, HlbComponent_div_31_li_2_Template, 7, 3, \"li\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.bindingList);\n  }\n}\n\nfunction HlbComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵelementStart(1, \"div\", 28);\n    i0.ɵɵelementStart(2, \"div\", 29);\n    i0.ɵɵelementStart(3, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function HlbComponent_div_33_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.addBindings();\n    });\n    i0.ɵɵtext(4, \"Generate Ns File\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HlbComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵelementStart(2, \"i\");\n    i0.ɵɵtext(3, \"No Actors\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HlbComponent_div_41_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r28 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r28.text, \" \");\n  }\n}\n\nfunction HlbComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, HlbComponent_div_41_div_1_Template, 3, 1, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.actorsList);\n  }\n}\n\nfunction HlbComponent_div_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵelementStart(2, \"i\");\n    i0.ɵɵtext(3, \"No Bindings Needed.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HlbComponent_div_49_div_1_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 38);\n  }\n}\n\nfunction HlbComponent_div_49_div_1_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 39);\n  }\n}\n\nfunction HlbComponent_div_49_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, HlbComponent_div_49_div_1_i_3_Template, 1, 0, \"i\", 36);\n    i0.ɵɵtemplate(4, HlbComponent_div_49_div_1_i_4_Template, 1, 0, \"i\", 37);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r31 = ctx.$implicit;\n    const ctx_r30 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r31.key, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r30.isEmpty(item_r31));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r30.isEmpty(item_r31));\n  }\n}\n\nfunction HlbComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, HlbComponent_div_49_div_1_Template, 5, 3, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.bindingList);\n  }\n}\n\nconst _c0 = function () {\n  return {\n    height: \"400px\",\n    border: \"none\"\n  };\n};\n\nconst _c1 = function () {\n  return {\n    container: \"#editor1\"\n  };\n};\n\nconst _c2 = function (a0) {\n  return {\n    counter: a0,\n    toolbar: false\n  };\n};\n\nfunction BindingPopUp_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵelementStart(2, \"i\");\n    i0.ɵɵtext(3, \"No Bindings Needed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BindingPopUp_div_7_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 12);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵelementStart(2, \"mat-form-field\", 13);\n    i0.ɵɵelementStart(3, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function BindingPopUp_div_7_li_2_Template_input_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r3 = restoredCtx.$implicit;\n      return item_r3.value = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", item_r3.key + \" represents: \");\n    i0.ɵɵproperty(\"ngModel\", item_r3.value);\n  }\n}\n\nfunction BindingPopUp_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"ul\", 10);\n    i0.ɵɵtemplate(2, BindingPopUp_div_7_li_2_Template, 5, 2, \"li\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.bindingList);\n  }\n}\n\nconst _c3 = \".behavior-list[_ngcontent-%COMP%]{margin:.1em;list-style:none;padding:0}.behavior-box[_ngcontent-%COMP%]{margin:.5em;border:1px solid #ccc;padding:.5em}.word-bubble[_ngcontent-%COMP%]{border:1px dotted black;border-radius:1em;padding:.4em;margin:.1em;cursor:pointer}.binding-word-bubble[_ngcontent-%COMP%]{border:1px solid black;float:left;margin:2px;border-radius:8px;padding:3px}.word-bubble-button[_ngcontent-%COMP%]{border-radius:1em;padding:.4em;margin:.1em}.float-left[_ngcontent-%COMP%]{float:left}.actions[_ngcontent-%COMP%]{float:right;cursor:pointer;display:none}.behavior-list[_ngcontent-%COMP%]:hover   .actions[_ngcontent-%COMP%]{display:block}.disabled[_ngcontent-%COMP%]{pointer-events:none}.grabbable[_ngcontent-%COMP%]{cursor:move;cursor:grab;cursor:-webkit-grab}.grabbable[_ngcontent-%COMP%]:active{cursor:grabbing;cursor:-webkit-grabbing}.mat-radio-button[_ngcontent-%COMP%] ~ .mat-radio-button[_ngcontent-%COMP%]{margin-left:16px}.padding-left-right[_ngcontent-%COMP%]{padding-left:5px;padding-right:5px}.button-padding[_ngcontent-%COMP%]{margin-left:.1em}.expand[_ngcontent-%COMP%]{float:right;cursor:pointer}.hide[_ngcontent-%COMP%]{display:none}\";\nQuill.register(\"modules/counter\", EditorService);\nexport let HlbComponent = /*#__PURE__*/(() => {\n  class HlbComponent {\n    constructor(http, dialog, stateservice, _snackBar, changeDetection) {\n      this.http = http;\n      this.dialog = dialog;\n      this.stateservice = stateservice;\n      this._snackBar = _snackBar;\n      this.changeDetection = changeDetection;\n      this.actorTextFilter = \"\";\n      this.behaviorTextFilter = {\n        name: \"behavior\",\n        text: \"\"\n      };\n      this.constraintTextFilter = {\n        name: \"constraint\",\n        text: \"\"\n      };\n      this.behaviorList = [];\n      this.constraintWordList = [];\n      this.actorsList = [];\n      this.contraintList = [];\n      this.bindingList = [];\n      this.bindingMap = new Map();\n      this.behaviorWordList = [];\n      this.inputText = \"\";\n      this.actors = \"\";\n      this.selectedIndex = 0;\n    }\n\n    onlyReadable() {\n      return this.tokenLevel == 'read';\n    }\n\n    ngOnInit() {\n      this.bindingMap = new Map();\n      this.behaviorList = [];\n      const instance = this;\n      this.tokenLevel = this.stateservice.getTokenLevel();\n      this.stateservice.getBehavior().subscribe(data => {\n        if (data != null) {\n          var text = \"\";\n          data.forEach(element => {\n            text += element + \"<br>\";\n          });\n          instance.behaviorText = text;\n        }\n      });\n      this.stateservice.getBindings().subscribe(data => {\n        if (data != null) {\n          //console.log(data);\n          this.bindingList = [];\n          this.bindingMap = new Map();\n          data.forEach(element => {\n            var list = element.trim().split(\" \");\n            var key = list[0];\n            var value = list.splice(1);\n            value = value.join(\" \");\n            var t = {\n              key: key,\n              value: value\n            };\n            this.bindingMap.set(key, t);\n            this.bindingList.push(t);\n          }); //console.log(this.bindingMap);\n        }\n      });\n      this.stateservice.getActors().subscribe(data => {\n        // //console.log(data);\n        if (data != null) {\n          instance.actorsList = [];\n          data.forEach(element => {\n            this.actorsList.push({\n              text: element\n            });\n          });\n        }\n      });\n      this.stateservice.getConstraints().subscribe(data => {\n        // //console.log(data);\n        if (data != null) {\n          var text = \"\";\n          data.forEach(element => {\n            text += element + \"<br>\";\n          });\n          instance.constraintText = text;\n        }\n      });\n    }\n\n    drop(event, list) {\n      moveItemInArray(list, event.previousIndex, event.currentIndex);\n    }\n\n    created(editor, id) {\n      // //console.log(id);\n      var instance = this;\n\n      switch (id) {\n        case 1:\n          this.actorService = editor.getModule(\"counter\");\n          break;\n\n        case 2:\n          this.behaviorService = editor.getModule(\"counter\");\n          this.behaviorService.isBlur().subscribe(data => {\n            if (data && instance.behaviorService.isTextChanged()) this.updateActors();\n            if (!data) this.textBoxId = 2;else this.textBoxId = -1;\n          });\n          this.behaviorService.isEnterPressed().subscribe(flag => {\n            if (flag && instance.behaviorService.isTextChanged()) {\n              if (this.behaviorService.getText().trim() === \"\") return;\n              var index = this.behaviorService.getText().length - 2;\n              if (this.behaviorService.getText().charAt(index) == \"\\n\") this.updateActors();\n            }\n          });\n          this.behaviorService.isTabPressed().subscribe(flag => {\n            if (flag) {\n              //console.log(\"inside istab\");\n              if (this.stateservice.getCurrentBehaviorWord().trim() != \"\") this.insertValue(this.stateservice.getCurrentBehaviorWord(), true); //this.behaviorService\n            }\n          });\n          this.behaviorService.getSuggestionData().subscribe(data => {\n            if (data != null) {\n              var params = {\n                type: \"behavior\",\n                suggestion_for: data.currentSentence,\n                behaviors: data.remainingSentences,\n                constraints: [],\n                actors: []\n              };\n              var constraints = this.constraintService.getText().trim();\n\n              if (constraints != \"\") {\n                var constraintsList = constraints.split(\"\\n\");\n                params.constraints = constraintsList;\n              }\n\n              this.behaviorTextFilter.text = \"\";\n              this.http.put(\"v1/pr/hlb/suggestions\", params, {\n                withCredential: true\n              }).subscribe(data => {\n                var list = [];\n                data.suggestions.forEach(element => {\n                  list.push({\n                    value: element,\n                    flag: false\n                  });\n                });\n                if (data.suggestion_text.trim() != \"\") this.suggestionbehaviorMessage = data.suggestion_text;else this.suggestionbehaviorMessage = null;\n                this.behaviorWordList = list;\n                this.changeDetection.detectChanges();\n              });\n            }\n          });\n          this.behaviorService.getCurrentWord().subscribe(data => {\n            //console.log(data);\n            if (data != null && data.trim()) {\n              this.behaviorTextFilter.text = data;\n            }\n          });\n          break;\n\n        case 3:\n          this.constraintService = editor.getModule(\"counter\");\n          this.constraintService.isBlur().subscribe(data => {\n            if (data && instance.constraintService.isTextChanged()) this.updateActorsConstraint();\n            if (!data) this.textBoxId = 3;else this.textBoxId = -1;\n          });\n          this.constraintService.isEnterPressed().subscribe(flag => {\n            if (flag && instance.constraintService.isTextChanged()) {\n              if (this.constraintService.getText().trim() === \"\") return;\n              var index = this.constraintService.getText().length - 2;\n              if (this.constraintService.getText().charAt(index) == \"\\n\") this.updateActorsConstraint();\n            }\n          });\n          this.constraintService.isTabPressed().subscribe(flag => {\n            if (flag) {\n              if (this.stateservice.getCurrentConstraintWord().trim() != \"\") this.insertValueInConstraint(this.stateservice.getCurrentConstraintWord(), true); //this.behaviorService\n            }\n          });\n          this.constraintService.getSuggestionData().subscribe(data => {\n            console.log(\"Blah!!\");\n\n            if (data != null) {\n              var params = {\n                type: \"constraint\",\n                suggestion_for: data.currentSentence,\n                behaviors: [],\n                constraints: data.remainingSentences,\n                actors: []\n              };\n              var behaviors = this.behaviorService.getText().trim();\n\n              if (behaviors != \"\") {\n                var behaviorsList = behaviors.split(\"\\n\");\n                params.behaviors = behaviorsList;\n              }\n\n              this.constraintTextFilter.text = \"\";\n              this.http.put(\"v1/pr/hlb/suggestions\", params, {\n                withCredential: true\n              }).subscribe(data => {\n                var list = [];\n                data.suggestions.forEach(element => {\n                  list.push({\n                    value: element,\n                    flag: false\n                  });\n                });\n                if (data.suggestion_text.trim() != \"\") this.suggestionConstraintMessage = data.suggestion_text;else this.suggestionConstraintMessage = null;\n                this.constraintWordList = list;\n                this.changeDetection.detectChanges();\n              });\n            }\n          });\n          this.constraintService.getCurrentWord().subscribe(data => {\n            ////console.log(data);\n            if (data != null && data.trim()) {\n              this.constraintTextFilter.text = data;\n            }\n          });\n          break;\n      }\n    }\n\n    updateActors() {\n      //console.log('inside update Actors');\n      if (this.behaviorService.getText().trim() === \"\") {\n        this.actorsList = [];\n        return;\n      }\n\n      var data = {\n        ParseType: \"bash\",\n        Scenario: [],\n        Constraints: []\n      };\n      this.behaviorList = [];\n      var blist = this.behaviorService.getText().trim().split(\"\\n\");\n      blist.forEach(element => {\n        var text = element.trim();\n\n        if (text != \"\") {\n          data.Scenario.push(text);\n          this.behaviorList.push(text);\n        }\n      });\n      this.stateservice.setBehavior(this.behaviorList);\n      this.http.put(\"v1/pr/hlb/parse\", data, {\n        withCredential: true\n      }).subscribe(data => {\n        this.extractInfo(data);\n      });\n    }\n\n    updateActorsConstraint() {\n      if (this.constraintService.getText().trim() === \"\") {\n        this.actorsList = [];\n        return;\n      }\n\n      var data = {\n        ParseType: \"bash\",\n        Scenario: [],\n        Constraints: []\n      };\n      this.contraintList = [];\n      var blist = this.constraintService.getText().trim().split(\"\\n\");\n      blist.forEach(element => {\n        var text = element.trim();\n\n        if (text != \"\") {\n          data.Constraints.push(text);\n          this.contraintList.push(text);\n        }\n      });\n      this.stateservice.setConstraints(this.contraintList);\n      this.http.put(\"v1/pr/hlb/parse\", data, {\n        withCredential: true\n      }).subscribe(data => {//console.log(data);\n        //   this.extractInfo(data);\n      });\n    }\n\n    extractInfo(data) {\n      this.extractScenario(data.parsedScenario);\n    }\n\n    onBlurMethod() {}\n\n    extractScenario(scenario) {\n      //console.log(scenario);\n      // this.bindingMap = new Map<String,any>();\n      this.actorsList = [];\n      this.bindingList = [];\n      var trigger = [];\n      scenario.forEach(element => {\n        this.extractActors(element[1] != null ? element[1] : []);\n\n        if (element[0] != null) {\n          element[0].map(x => {\n            if (!trigger.includes(x)) {\n              trigger.push(x);\n            }\n          });\n        }\n\n        if (element[2] != null) element[2].map(x => {\n          if (!trigger.includes(x)) {\n            trigger.push(x);\n          }\n        });\n        if (element[3] != null) element[3].map(x => {\n          if (!trigger.includes(x)) {\n            trigger.push(x);\n          }\n        });\n      });\n      this.extractEvents(trigger); // this.loadBindings();\n\n      this.changeDetection.detectChanges();\n    }\n\n    isEmpty(binding) {\n      if (binding.value == undefined) return true;\n      return binding.value.trim() == \"\";\n    }\n\n    loadBindings() {\n      this.bindingMap.forEach((value, key) => {\n        this.bindingList.push(key);\n      });\n    }\n\n    extractEvents(triggers //,actions,emitters\n    ) {\n      //console.log(this.bindingMap);\n      if (triggers != null) triggers.forEach(element => {\n        //console.log(element);\n        if (!this.bindingMap.has(element)) {\n          var t = {\n            key: element,\n            value: \"\"\n          };\n          this.bindingMap.set(element, t);\n          this.bindingList.push(t);\n        } else {\n          this.bindingList.push(this.bindingMap.get(element));\n        }\n      }); //   if(actions!=null)\n      //   actions.forEach(element => {\n      //     //console.log(element);\n      //     if (!this.bindingMap.has(element)){\n      //       var t = {key:element,value:\"\"};\n      //       this.bindingMap.set(element,t);\n      //       this.bindingList.push(t);\n      // }else{\n      //   this.bindingList.push(this.bindingMap.get(element));\n      // }\n      //   });\n      //   if(emitters!=null)\n      //   emitters.forEach(element => {\n      //     //console.log(element);\n      //     if (!this.bindingMap.has(element)){\n      //       var t = {key:element,value:\"\"};\n      //       this.bindingMap.set(element,t);\n      //       this.bindingList.push(t);\n      // }else{\n      //   this.bindingList.push(this.bindingMap.get(element));\n      // }\n      //   });\n      // //console.log(this.bindingMap);\n    }\n\n    logChangeBehavior(event) {\n      if (this.behaviorService.getText().trim() === \"\") return; // var index = this.behaviorService.getText().length-2;\n      // if (this.behaviorService.getText().charAt(index) == '\\n')\n      //     this.updateActors();\n    }\n\n    logChangeConstraints(event) {\n      if (this.constraintService.getText().trim() === \"\") return; // //console.log(this.constraintService.getText().charAt(this.constraintService.getText().length-1))\n    }\n\n    insertValue(text, flag = false) {\n      //console.log(\"word:\"+text);\n      this.service.insertValue(text, flag, this.behaviorTextFilter.text);\n    }\n\n    insertValueInConstraint(text, flag = false) {\n      this.service.insertValue(text, flag, this.constraintTextFilter.text);\n    }\n\n    selectTextBox(id) {\n      this.textBoxId = id;\n\n      switch (id) {\n        case 1:\n          this.service = this.actorService;\n          break;\n\n        case 2:\n          this.service = this.behaviorService;\n          break;\n\n        case 3:\n          this.service = this.constraintService;\n          break;\n      }\n    }\n\n    isEnable(id) {\n      return this.textBoxId == id;\n    }\n\n    extractActors(data) {\n      data.forEach(element => {\n        ////console.log(element);\n        this.insertActor(element);\n      });\n      var alist = [];\n      this.actorsList.forEach(element => {\n        alist.push(element.text);\n      });\n      this.stateservice.setActors(alist);\n    }\n\n    insertActor(actor) {\n      var t = this.actorsList.find(function (element) {\n        return element.text === actor;\n      }); // //console.log(t);\n\n      if (t == undefined) this.actorsList.push({\n        text: actor\n      });\n    }\n\n    clear() {\n      //console.log(this.behaviorText);\n      this.service.clear();\n      this.behaviorText = \"\";\n    }\n\n    selectedTab(index) {\n      this.selectedIndex = index;\n    }\n\n    addBindings() {\n      //console.log(this.bindingList);\n      var dialogRef = this.dialog.open(BindingPopUp, {\n        width: \"70%\",\n        data: this.bindingList\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        //console.log('The dialog was closed');\n        this.generateNs();\n      });\n    }\n\n    generateNs() {\n      var data = {\n        actors: [],\n        behaviors: [],\n        constraints: [],\n        bindings: []\n      };\n      if (this.actorsList.length == 0) return;\n      if (this.behaviorList.length == 0) return;\n      this.actorsList.forEach(element => {\n        data.actors.push(element.text);\n      });\n      var flag = false;\n      this.behaviorList.forEach(element => {\n        data.behaviors.push(element);\n      });\n      this.contraintList.forEach(element => {\n        data.constraints.push(element.text);\n      });\n      this.bindingList.forEach(element => {\n        if (element.value == null || element.value.trim() == \"\") {\n          flag = true;\n          return;\n        }\n\n        data.bindings.push(element.key + \" \" + element.value);\n      });\n      if (flag) return;\n      this.stateservice.enableLoader();\n      this.http.put(\"v1/pr/hlb/generateNs\", data, {\n        withCredential: true\n      }).subscribe(data => {\n        //console.log(data);\n        this.stateservice.disableLoader();\n        this.downLoadFile(data.script);\n\n        this._snackBar.open(\"Successfully Downloaded.\", \"close\", {\n          duration: 2000\n        }); // this.stateservice.setBindings(data.Bindings);\n\n      }, error => {\n        this.stateservice.disableLoader();\n\n        this._snackBar.open(error, \"close\", {\n          duration: 2000\n        });\n      });\n    }\n\n    storeBinding() {\n      // console.log(this.bindingList);\n      var binding = [];\n      this.bindingList.forEach(element => {\n        binding.push(element.key.trim() + \" \" + element.value.trim());\n      });\n      this.stateservice.setBindings(binding);\n    }\n\n    downLoadFile(data) {\n      var blob = new Blob([data], {\n        type: \"text/plain\"\n      }); //console.log(blob);\n      // var url = (window.URL || window.webkitURL).createObjectURL(blob);\n\n      var fileName = \"experiment.txt\";\n\n      if (\"msSaveOrOpenBlob\" in navigator) {\n        navigator.msSaveOrOpenBlob(blob, fileName);\n      } else {\n        var downloadLink = document.createElement(\"a\");\n        downloadLink.download = fileName;\n        downloadLink.innerHTML = \"Download File\"; // if ('webkitURL' in window) {\n        // Chrome allows the link to be clicked\n        // without actually adding it to the DOM.\n        //  downloadLink.href = window.webkitURL.createObjectURL(blob);\n        // } else {\n        // Firefox requires the link to be added to the DOM\n        // before it can be clicked.\n\n        downloadLink.href = window.URL.createObjectURL(blob); //downloadLink.onclick = destroyClickedElement;\n\n        downloadLink.style.display = \"none\";\n        document.body.appendChild(downloadLink); //  }\n\n        downloadLink.click();\n      }\n    }\n\n  }\n\n  HlbComponent.ɵfac = function HlbComponent_Factory(t) {\n    return new (t || HlbComponent)(i0.ɵɵdirectiveInject(i1.HttpService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.StateService), i0.ɵɵdirectiveInject(i4.MatSnackBar), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  HlbComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HlbComponent,\n    selectors: [[\"hlb\"]],\n    decls: 50,\n    vars: 25,\n    consts: [[1, \"row\"], [1, \"col-md-9\"], [1, \"row\", 2, \"margin\", \".5em\"], [1, \"col-md-12\", 2, \"padding\", \"0\"], [2, \"text-align\", \"center\"], [1, \"col-md-12\", 3, \"click\"], [\"style\", \"margin: .6em;border-bottom: 1px solid #eee;\", 3, \"hidden\", 4, \"ngIf\"], [1, \"flex-container\", 3, \"blur\"], [3, \"disabled\", \"styles\", \"modules\", \"ngModel\", \"ngModelChange\", \"onContentChanged\", \"onEditorCreated\"], [1, \"flex-container\"], [\"style\", \"font-size: .8em;text-align: center;\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"col-md-3\", 2, \"margin-top\", \".5em\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"row\", 2, \"margin-top\", \".1em\", \"margin-bottom\", \".1em\"], [\"style\", \"  height: auto;\\n            display: flow-root;\\n            padding: 0;\", 4, \"ngIf\"], [2, \"margin\", \".6em\", \"border-bottom\", \"1px solid #eee\", 3, \"hidden\"], [\"type\", \"button\", \"class\", \"btn btn-outline-primary word-bubble-button\", 3, \"disabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"class\", \"btn btn-outline-primary word-bubble-button\", 3, \"disabled\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", \"word-bubble-button\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", \"word-bubble-button\", 3, \"disabled\"], [\"type\", \"button\", \"class\", \"btn btn-outline-primary word-bubble-button\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", \"word-bubble-button\", 3, \"click\"], [2, \"font-size\", \".8em\", \"text-align\", \"center\"], [1, \"behavior-list\"], [4, \"ngFor\", \"ngForOf\"], [\"appearance\", \"outline\", 2, \"width\", \"100%\"], [\"matInput\", \"\", 3, \"disabled\", \"ngModel\", \"ngModelChange\", \"change\"], [1, \"col-md-12\", 2, \"padding\", \"1em\"], [2, \"text-align\", \"center\", \"padding\", \".1em\"], [\"mat-stroked-button\", \"\", 3, \"click\"], [2, \"height\", \"auto\", \"display\", \"flow-root\", \"padding\", \"0\"], [\"class\", \"binding-word-bubble\", \"style\", \"  border: 1px solid black;\", 4, \"ngFor\", \"ngForOf\"], [1, \"binding-word-bubble\", 2, \"border\", \"1px solid black\"], [\"class\", \"binding-word-bubble\", 4, \"ngFor\", \"ngForOf\"], [1, \"binding-word-bubble\"], [\"class\", \"fas fa-exclamation-circle\", \"style\", \"color: red;\", 4, \"ngIf\"], [\"class\", \"fa fa-check-circle\", \"style\", \"color: green;\", 4, \"ngIf\"], [1, \"fas\", \"fa-exclamation-circle\", 2, \"color\", \"red\"], [1, \"fa\", \"fa-check-circle\", 2, \"color\", \"green\"]],\n    template: function HlbComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"mat-card\");\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtext(6, \" Behavior\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementStart(8, \"div\", 0);\n        i0.ɵɵelementStart(9, \"div\", 5);\n        i0.ɵɵlistener(\"click\", function HlbComponent_Template_div_click_9_listener() {\n          return ctx.selectTextBox(2);\n        });\n        i0.ɵɵtemplate(10, HlbComponent_div_10_Template, 7, 10, \"div\", 6);\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵlistener(\"blur\", function HlbComponent_Template_div_blur_11_listener() {\n          return ctx.onBlurMethod();\n        });\n        i0.ɵɵelementStart(12, \"quill-editor\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function HlbComponent_Template_quill_editor_ngModelChange_12_listener($event) {\n          return ctx.behaviorText = $event;\n        })(\"onContentChanged\", function HlbComponent_Template_quill_editor_onContentChanged_12_listener($event) {\n          return ctx.logChangeBehavior($event);\n        })(\"onEditorCreated\", function HlbComponent_Template_quill_editor_onEditorCreated_12_listener($event) {\n          return ctx.created($event, 2);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 2);\n        i0.ɵɵelementStart(14, \"div\", 3);\n        i0.ɵɵelementStart(15, \"mat-card\");\n        i0.ɵɵelementStart(16, \"div\", 4);\n        i0.ɵɵtext(17, \" Constraints\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"hr\");\n        i0.ɵɵelementStart(19, \"div\", 0);\n        i0.ɵɵelementStart(20, \"div\", 5);\n        i0.ɵɵlistener(\"click\", function HlbComponent_Template_div_click_20_listener() {\n          return ctx.selectTextBox(3);\n        });\n        i0.ɵɵtemplate(21, HlbComponent_div_21_Template, 7, 10, \"div\", 6);\n        i0.ɵɵelementStart(22, \"div\", 9);\n        i0.ɵɵelementStart(23, \"quill-editor\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function HlbComponent_Template_quill_editor_ngModelChange_23_listener($event) {\n          return ctx.constraintText = $event;\n        })(\"onContentChanged\", function HlbComponent_Template_quill_editor_onContentChanged_23_listener($event) {\n          return ctx.logChangeConstraints($event);\n        })(\"onEditorCreated\", function HlbComponent_Template_quill_editor_onEditorCreated_23_listener($event) {\n          return ctx.created($event, 3);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 2);\n        i0.ɵɵelementStart(25, \"div\", 3);\n        i0.ɵɵelementStart(26, \"mat-card\");\n        i0.ɵɵelementStart(27, \"div\", 4);\n        i0.ɵɵtext(28, \" Bindings\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"hr\");\n        i0.ɵɵtemplate(30, HlbComponent_div_30_Template, 4, 0, \"div\", 10);\n        i0.ɵɵtemplate(31, HlbComponent_div_31_Template, 3, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 12);\n        i0.ɵɵtemplate(33, HlbComponent_div_33_Template, 5, 0, \"div\", 13);\n        i0.ɵɵelementStart(34, \"div\", 14);\n        i0.ɵɵelementStart(35, \"div\", 3);\n        i0.ɵɵelementStart(36, \"mat-card\");\n        i0.ɵɵelementStart(37, \"div\", 4);\n        i0.ɵɵtext(38, \"Actors \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"hr\");\n        i0.ɵɵtemplate(40, HlbComponent_div_40_Template, 4, 0, \"div\", 10);\n        i0.ɵɵtemplate(41, HlbComponent_div_41_Template, 2, 1, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 14);\n        i0.ɵɵelementStart(43, \"div\", 3);\n        i0.ɵɵelementStart(44, \"mat-card\");\n        i0.ɵɵelementStart(45, \"div\", 4);\n        i0.ɵɵtext(46, \"Bindings Needed \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(47, \"hr\");\n        i0.ɵɵtemplate(48, HlbComponent_div_48_Template, 4, 0, \"div\", 10);\n        i0.ɵɵtemplate(49, HlbComponent_div_49_Template, 2, 1, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", !ctx.onlyReadable());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.onlyReadable())(\"styles\", i0.ɵɵpureFunction0(17, _c0))(\"modules\", i0.ɵɵpureFunction1(19, _c2, i0.ɵɵpureFunction0(18, _c1)))(\"ngModel\", ctx.behaviorText);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", !ctx.onlyReadable());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.onlyReadable())(\"styles\", i0.ɵɵpureFunction0(21, _c0))(\"modules\", i0.ɵɵpureFunction1(23, _c2, i0.ɵɵpureFunction0(22, _c1)))(\"ngModel\", ctx.constraintText);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.bindingList.length == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.bindingList.length != 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.onlyReadable());\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.actorsList.length == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.actorsList.length != 0);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.bindingList.length == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.bindingList.length != 0);\n      }\n    },\n    directives: [i5.MatCard, i6.NgIf, i7.QuillEditorComponent, i8.NgControlStatus, i8.NgModel, i6.NgForOf, i9.MatFormField, i9.MatLabel, i10.MatInput, i8.DefaultValueAccessor, i11.MatButton],\n    pipes: [i12.TextFilterPipe, i6.SlicePipe],\n    styles: [_c3]\n  });\n  return HlbComponent;\n})();\nexport let BindingPopUp = /*#__PURE__*/(() => {\n  class BindingPopUp {\n    constructor(dialogRef, bindingList) {\n      this.dialogRef = dialogRef;\n      this.bindingList = bindingList;\n    }\n\n    onNoClick() {\n      this.dialogRef.close();\n    }\n\n  }\n\n  BindingPopUp.ɵfac = function BindingPopUp_Factory(t) {\n    return new (t || BindingPopUp)(i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  BindingPopUp.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BindingPopUp,\n    selectors: [[\"hlb-binding\"]],\n    decls: 13,\n    vars: 3,\n    consts: [[\"mat-dialog-content\", \"\"], [1, \"row\", 2, \"margin\", \".5em\"], [1, \"col-md-12\"], [2, \"text-align\", \"center\"], [\"style\", \"font-size: .8em;text-align: center;\", 4, \"ngIf\"], [4, \"ngIf\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-button\", \"\", \"cdkFocusInitial\", \"\", 3, \"mat-dialog-close\"], [2, \"font-size\", \".8em\", \"text-align\", \"center\"], [1, \"behavior-list\"], [\"class\", \"binding-box\", 4, \"ngFor\", \"ngForOf\"], [1, \"binding-box\"], [2, \"width\", \"100%\"], [\"matInput\", \"\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"]],\n    template: function BindingPopUp_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtext(4, \" Bindings\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"hr\");\n        i0.ɵɵtemplate(6, BindingPopUp_div_6_Template, 4, 0, \"div\", 4);\n        i0.ɵɵtemplate(7, BindingPopUp_div_7_Template, 3, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function BindingPopUp_Template_button_click_9_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ɵɵtext(10, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 8);\n        i0.ɵɵtext(12, \"Download\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.bindingList.length == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.bindingList.length != 0);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"mat-dialog-close\", ctx.bindingList);\n      }\n    },\n    directives: [i2.MatDialogContent, i6.NgIf, i2.MatDialogActions, i11.MatButton, i2.MatDialogClose, i6.NgForOf, i9.MatFormField, i10.MatInput, i8.DefaultValueAccessor, i8.NgControlStatus, i8.NgModel],\n    styles: [_c3]\n  });\n  return BindingPopUp;\n})();","map":null,"metadata":{},"sourceType":"module"}