{"ast":null,"code":"import { BehaviorSubject, Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../http-service.service\";\nimport * as i2 from \"./auth.service\";\nimport * as i3 from \"../state-service.service\";\nexport let InitUserService = /*#__PURE__*/(() => {\n  class InitUserService {\n    constructor(http, authService, state) {\n      this.http = http;\n      this.authService = authService;\n      this.state = state;\n      this.login = false;\n      this.user = new BehaviorSubject(null);\n    }\n\n    getUser() {\n      return this.user.asObservable();\n    }\n\n    getUserDetailForRegistration(id) {\n      return new Promise((resolve, reject) => {\n        var param = {\n          token: id\n        };\n        this.http.post(\"/api/v1/p/user/getgoogleuserinfo/\", param, {\n          withCredential: true\n        }).subscribe(data => {\n          // console.log(data);\n          resolve(data);\n        });\n      });\n    }\n\n    initCurrentUser() {\n      var param = {\n        token: this.authService.getToken()\n      };\n      this.state.enableLoader();\n      this.http.post(\"/api/v1/p/user/getuserinfo/\", param).subscribe(data => {\n        console.log(data);\n        this.state.disableLoader();\n        this.user.next(data);\n      }, error => {\n        this.authService.refreshToken();\n        this.initCurrentUser();\n      });\n    }\n\n    registerUser(params) {\n      var t = new Subject();\n      this.http.post(\"api/v1/p/user/registerUser/\", params, {\n        withCredential: true\n      }).subscribe(data => {\n        if (data.message != undefined && data.message != null) {\n          this.authService.setCookie(\"token\", params.token, 3599, false);\n          t.next(true);\n        } else {\n          t.next(false);\n        }\n\n        this.state.disableLoader();\n      });\n      return t;\n    }\n\n    checkHandle(params) {\n      var t = new Subject();\n      this.state.enableLoader();\n      this.http.post(\"api/v1/p/user/validateUserHandle/\", params, {\n        withCredential: true\n      }).subscribe(data => {\n        t.next(data);\n        this.state.disableLoader();\n      });\n      return t;\n    }\n\n  }\n\n  InitUserService.ɵfac = function InitUserService_Factory(t) {\n    return new (t || InitUserService)(i0.ɵɵinject(i1.HttpService), i0.ɵɵinject(i2.AuthService), i0.ɵɵinject(i3.StateService));\n  };\n\n  InitUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InitUserService,\n    factory: InitUserService.ɵfac,\n    providedIn: \"root\"\n  });\n  return InitUserService;\n})();","map":null,"metadata":{},"sourceType":"module"}