{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule } from \"@angular/core\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { QuillModule } from \"ngx-quill\";\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\nimport { StateService } from \"../../state-service.service\";\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { NgxFileDropModule } from \"ngx-file-drop\";\nimport { HLBParserComponent } from \"./hlpparser.component\";\nimport { NgxGraphModule } from \"@swimlane/ngx-graph\";\nimport { CommonModule } from \"@angular/common\";\nimport { HLBParserRoutingModule } from \"./hlbparser-routing.module\";\nimport { RouterModule } from \"@angular/router\";\nimport { HlbComponent, BindingPopUp, HLBInforPopUp } from \"./hlb/hlb.component\";\nimport { NlpComponent } from \"./nlp/nlp.component\";\nimport { TextFilterPipe } from \"./common/text-filter.pipe\";\nimport { UploadComponent, FilePreviewComponent } from \"./upload/upload.component\";\nimport { AuthModule } from \"src/app/@auth/auth.module\";\nimport { DependencyGraphComponent } from \"./dependency-graph/dependency-graph.component\";\nimport { TopologyGraphComponent, UpdateActorInfo } from \"./topology/topology.component\";\nimport { ExperimentSlides } from \"./experiment-slides/experiment-slides.component\";\nimport { SingleSlideComponent, UpdateSlideMapping } from \"./experiment-slides/single-slide.component\";\nimport { DesignPageComponent } from \"./design-page/design-page.component\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { InfoComponent, AddUserPopUp, NLPPopUp, UploadPopUp, NSFilePopUp, BASHFilePopUp, UserListPopUp, VersionsPopUp } from \"./experiment-info/info.component\";\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { UserIdleModule } from 'angular-user-idle';\nimport { DeterLabViewComponent, RunVariablePopUp } from './deterlab-view/deterlab-view.component';\nimport { RunInfoComponent } from \"./deterlab-view/run-info/run-info.component\";\nimport { CurrentInfoComponent } from \"./deterlab-view/current-info/current-info.component\";\nlet HLBParserModule = class HLBParserModule {};\nHLBParserModule = __decorate([NgModule({\n  exports: [HLBParserComponent],\n  declarations: [HLBParserComponent, HlbComponent, NlpComponent, DependencyGraphComponent, TopologyGraphComponent, DeterLabViewComponent, TextFilterPipe, UploadComponent, FilePreviewComponent, HLBInforPopUp, BindingPopUp, InfoComponent, AddUserPopUp, NLPPopUp, UploadPopUp, NSFilePopUp, BASHFilePopUp, UserListPopUp, VersionsPopUp, UpdateActorInfo, ExperimentSlides, SingleSlideComponent, UpdateSlideMapping, DesignPageComponent, RunVariablePopUp, RunInfoComponent, CurrentInfoComponent],\n  imports: [CommonModule, MatToolbarModule, AuthModule.forRoot(), ReactiveFormsModule, MatAutocompleteModule, RouterModule, MatTooltipModule, MatSelectModule, MatRadioModule, NgxGraphModule, MatDialogModule, MatButtonModule, MatSnackBarModule, FontAwesomeModule, MatTabsModule, MatSidenavModule, DragDropModule, FormsModule, MatTableModule, MatExpansionModule, MatCardModule, QuillModule.forRoot(), UserIdleModule.forRoot({}), HLBParserRoutingModule, MatInputModule, NgxFileDropModule, MatIconModule],\n  entryComponents: [FilePreviewComponent, HLBInforPopUp, BindingPopUp, AddUserPopUp, NLPPopUp, UploadPopUp, NSFilePopUp, BASHFilePopUp, UserListPopUp, VersionsPopUp, UpdateActorInfo, ExperimentSlides, SingleSlideComponent, UpdateSlideMapping, DesignPageComponent, RunVariablePopUp],\n  providers: [StateService],\n  bootstrap: [HLBParserComponent]\n})], HLBParserModule);\nexport { HLBParserModule };","map":null,"metadata":{},"sourceType":"module"}