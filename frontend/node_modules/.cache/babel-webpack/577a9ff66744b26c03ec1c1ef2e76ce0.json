{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/state-service.service\";\nimport * as i2 from \"src/app/@auth/auth.service\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/button\";\n\nfunction InfoComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelementStart(1, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function InfoComponent_div_14_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.save();\n    });\n    i0.ɵɵtext(2, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let InfoComponent = /*#__PURE__*/(() => {\n  class InfoComponent {\n    constructor(state, auth) {\n      this.state = state;\n      this.auth = auth;\n      this.experiment = {\n        userId: this.auth.getCookie(\"userId\"),\n        name: \"\",\n        description: \"\",\n        behavior: [],\n        actor: [],\n        binding: [],\n        constraint: []\n      };\n      this.tokenList = [];\n    }\n\n    ngOnInit() {\n      if (this.id != undefined && this.id != null && this.id != -1) this.experiment[\"id\"] = this.id;\n      this.state.getExperimentName().subscribe(name => {\n        this.experiment.name = name;\n      });\n      this.state.getExperimentDescription().subscribe(description => {\n        this.experiment.description = description;\n      });\n      this.state.getBehavior().subscribe(behaviorList => {\n        this.experiment.behavior = behaviorList;\n      });\n      this.state.getActors().subscribe(actorList => {\n        this.experiment.actor = actorList;\n      });\n      this.state.getBindings().subscribe(bindingList => {\n        this.experiment.binding = bindingList;\n      });\n      this.state.getConstraints().subscribe(constraintsList => {\n        this.experiment.constraint = constraintsList;\n      });\n      this.tokenLevel = this.state.getTokenLevel();\n    }\n\n    onlyReadable() {\n      return this.tokenLevel == 'read';\n    }\n\n    setExperimentName() {\n      this.state.setExperimentName(this.experiment.name);\n    }\n\n    setExperimentDescription() {\n      this.state.setExperimentDescription(this.experiment.description);\n    }\n\n    save() {\n      console.log(this.experiment);\n    }\n\n  }\n\n  InfoComponent.ɵfac = function InfoComponent_Factory(t) {\n    return new (t || InfoComponent)(i0.ɵɵdirectiveInject(i1.StateService), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n\n  InfoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InfoComponent,\n    selectors: [[\"experiment-info\"]],\n    inputs: {\n      id: \"id\"\n    },\n    decls: 15,\n    vars: 5,\n    consts: [[1, \"row\"], [1, \"col-md-8\"], [1, \"row\", 2, \"margin\", \"0.5em\"], [1, \"col-md-12\", 2, \"padding\", \"0\"], [\"appearance\", \"outline\", 1, \"col-md-12\"], [\"matInput\", \"\", 3, \"disabled\", \"ngModel\", \"ngModelChange\", \"change\"], [1, \"col-md-4\"], [\"style\", \"text-align: center; padding: 1em;\", 4, \"ngIf\"], [2, \"text-align\", \"center\", \"padding\", \"1em\"], [\"mat-stroked-button\", \"\", 3, \"click\"]],\n    template: function InfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"mat-card\");\n        i0.ɵɵelementStart(5, \"mat-form-field\", 4);\n        i0.ɵɵelementStart(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Experiment Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function InfoComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.experiment.name = $event;\n        })(\"change\", function InfoComponent_Template_input_change_8_listener() {\n          return ctx.setExperimentName();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 4);\n        i0.ɵɵelementStart(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Experiment Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"textarea\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function InfoComponent_Template_textarea_ngModelChange_12_listener($event) {\n          return ctx.experiment.description = $event;\n        })(\"change\", function InfoComponent_Template_textarea_change_12_listener() {\n          return ctx.setExperimentDescription();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 6);\n        i0.ɵɵtemplate(14, InfoComponent_div_14_Template, 3, 0, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"disabled\", ctx.onlyReadable())(\"ngModel\", ctx.experiment.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.onlyReadable())(\"ngModel\", ctx.experiment.description);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.onlyReadable());\n      }\n    },\n    directives: [i3.MatCard, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgModel, i7.NgIf, i8.MatButton],\n    styles: [\"\"]\n  });\n  return InfoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}