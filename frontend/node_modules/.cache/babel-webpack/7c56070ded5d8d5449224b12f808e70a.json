{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { startWith, map } from 'rxjs/operators';\nimport { LogHeader } from 'src/app/experiment/hlbparser/common/logging-service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/http-service.service\";\nimport * as i3 from \"src/app/@auth/init-user.service\";\nimport * as i4 from \"src/app/experiment/hlbparser/common/logging-service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/tooltip\";\n\nfunction ExperimentComponent_form_0_div_33_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelementStart(1, \"div\", 18);\n    i0.ɵɵlistener(\"click\", function ExperimentComponent_form_0_div_33_div_2_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(3);\n      return ctx_r5.edit(item_r3);\n    });\n    i0.ɵɵelementStart(2, \"div\", 19);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"span\", 20);\n    i0.ɵɵelementStart(5, \"strong\", 21);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"br\");\n    i0.ɵɵelementStart(8, \"span\");\n    i0.ɵɵelementStart(9, \"b\");\n    i0.ɵɵtext(10, \"Created Date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \" | \");\n    i0.ɵɵelementStart(13, \"span\");\n    i0.ɵɵelementStart(14, \"b\");\n    i0.ɵɵtext(15, \"Updated Date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 3);\n    i0.ɵɵelementStart(18, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function ExperimentComponent_form_0_div_33_div_2_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(3);\n      return ctx_r7.copy(item_r3);\n    });\n    i0.ɵɵtext(19, \"Duplicate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"hr\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"matTooltip\", \"Edit \", item_r3.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r3.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", item_r3.accessLevel == 4 ? \"Full Access\" : item_r3.accessLevel == 3 ? \"Write only\" : \"Read only\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r3.accessLevel == 4 ? \"Admin\" : item_r3.accessLevel == 3 ? \"Developer\" : \"Spectator\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", item_r3.created_date, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", item_r3.updated_date, \"\");\n  }\n}\n\nfunction ExperimentComponent_form_0_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelementStart(1, \"div\", 15);\n    i0.ɵɵtemplate(2, ExperimentComponent_form_0_div_33_div_2_Template, 21, 6, \"div\", 16);\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 1, ctx_r1.filterExperiments));\n  }\n}\n\nfunction ExperimentComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 1);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ExperimentComponent_form_0_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.create();\n    });\n    i0.ɵɵtext(5, \"Create\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 6);\n    i0.ɵɵelement(7, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-card\");\n    i0.ɵɵelementStart(9, \"label\");\n    i0.ɵɵtext(10, \"Filter Access Level by:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"ul\", 8);\n    i0.ɵɵelementStart(12, \"li\");\n    i0.ɵɵelementStart(13, \"label\", 9);\n    i0.ɵɵelement(14, \"input\", 10);\n    i0.ɵɵelementStart(15, \"span\", 9);\n    i0.ɵɵtext(16, \"Show All\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"li\");\n    i0.ɵɵelementStart(18, \"label\", 9);\n    i0.ɵɵelement(19, \"input\", 11);\n    i0.ɵɵelementStart(20, \"span\", 9);\n    i0.ɵɵtext(21, \"Admin\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"li\");\n    i0.ɵɵelementStart(23, \"label\", 9);\n    i0.ɵɵelement(24, \"input\", 11);\n    i0.ɵɵelementStart(25, \"span\", 9);\n    i0.ɵɵtext(26, \"Developer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"li\");\n    i0.ɵɵelementStart(28, \"label\", 9);\n    i0.ɵɵelement(29, \"input\", 11);\n    i0.ɵɵelementStart(30, \"span\", 9);\n    i0.ɵɵtext(31, \"Spectator\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"div\", 12);\n    i0.ɵɵtemplate(33, ExperimentComponent_form_0_div_33_Template, 4, 3, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.filterSelect);\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"value\", 0)(\"checked\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"value\", 4);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"value\", 3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"value\", 2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.experiments.length != 0);\n  }\n}\n\nexport let ExperimentComponent = /*#__PURE__*/(() => {\n  class ExperimentComponent {\n    constructor(router, http, initUser, logger) {\n      this.router = router;\n      this.http = http;\n      this.initUser = initUser;\n      this.logger = logger;\n      this.show = false;\n      this.filterSelect = new FormGroup({\n        accessLevel: new FormControl(''),\n        search: new FormControl('')\n      });\n      this.filteredLevels = [{\n        name: 'Read',\n        value: '2'\n      }, {\n        name: 'Write',\n        value: '3'\n      }, {\n        name: 'Manage',\n        value: '4'\n      }];\n      this.experiments = [];\n      this.filterExperiments = [];\n    }\n\n    ngOnInit() {\n      this.initUser.getUser().subscribe(user => {\n        // console.log(user)\n        if (user != null) {\n          this.userInfo = user;\n          this.load(user.userId);\n          this.enableComponent();\n        }\n      });\n      this.filterExperiments = this.filterSelect.valueChanges.pipe(startWith(\"\"), map(value => this._filter(value, this.experiments)));\n    }\n\n    _filter(value, options) {\n      console.log(value);\n      if (value == 0) return options;else if (value.accessLevel == '') return options.filter(option => option.name.toLowerCase().includes(value.search.toLowerCase()) || option.description.toLowerCase().includes(value.search.toLowerCase()));else return options.filter(option => option.accessLevel >= value.accessLevel).filter(option => option.name.toLowerCase().includes(value.search.toLowerCase()) || option.description.toLowerCase().includes(value.search.toLowerCase()));\n    }\n\n    enableComponent() {\n      this.show = true;\n    }\n\n    load(userId) {\n      this.http.get(\"v1/pr/persist/getExperimentList\", {\n        withCredentials: true\n      }).subscribe(data => {\n        this.experiments = data;\n      });\n    }\n\n    edit(experiments) {\n      // console.log(experiments)\n      this.logger.log(LogHeader.INFO, \"User started to edit experiment \" + experiments.name + \" (ID: \" + experiments.experiment_id + \")\");\n      window.location.href = \"p/e/c/\" + experiments.experiment_id;\n    }\n\n    create() {\n      this.logger.log(LogHeader.INFO, \"User created a new experiment.\");\n      window.location.href = \"p/e/c\";\n    }\n\n    copy(item) {\n      this.logger.log(LogHeader.INFO, \"User copied experiment \" + item.name + \" (ID: \" + item.experiment_id + \")\");\n      var params = {\n        \"id\": item.experiment_id + \"\"\n      };\n      this.http.post(\"api/v1/pr/persist/experiment/copy\", params, {\n        withCredentials: true\n      }).subscribe(data => {\n        this.edit(data);\n      });\n    }\n\n  }\n\n  ExperimentComponent.ɵfac = function ExperimentComponent_Factory(t) {\n    return new (t || ExperimentComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpService), i0.ɵɵdirectiveInject(i3.InitUserService), i0.ɵɵdirectiveInject(i4.LogService));\n  };\n\n  ExperimentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ExperimentComponent,\n    selectors: [[\"experiment\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"formGroup\", 4, \"ngIf\"], [3, \"formGroup\"], [1, \"row\", 2, \"margin\", \"0.5em\"], [1, \"col-md-2\"], [2, \"padding\", \"11px\"], [1, \"btn\", \"btn-light\", 3, \"click\"], [2, \"padding-bottom\", \"10px\"], [\"formControlName\", \"search\", \"placeholder\", \"Search by...\", \"name\", \"search\", 1, \"form-control\"], [2, \"list-style\", \"none\", \"padding\", \"0\"], [2, \"padding\", \"0.2em\"], [\"formControlName\", \"accessLevel\", \"type\", \"radio\", \"name\", \"accessLevel\", 3, \"value\", \"checked\"], [\"formControlName\", \"accessLevel\", \"type\", \"radio\", \"name\", \"accessLevel\", 3, \"value\"], [1, \"col-md-10\"], [\"class\", \"row table\", 4, \"ngIf\"], [1, \"row\", \"table\"], [1, \"col-md-12\"], [\"class\", \"row table-row pointer\", \"style\", \"margin-top: 14px;\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"table-row\", \"pointer\", 2, \"margin-top\", \"14px\"], [1, \"col-md-10\", 3, \"matTooltip\", \"click\"], [1, \"header-experiment\"], [1, \"badge\", \"badge-info\"], [3, \"matTooltip\"], [\"matTooltip\", \"Duplicate the experiment\", 1, \"bubble\", 3, \"click\"]],\n    template: function ExperimentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ExperimentComponent_form_0_Template, 34, 7, \"form\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.show);\n      }\n    },\n    directives: [i5.NgIf, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.DefaultValueAccessor, i6.NgControlStatus, i6.FormControlName, i7.MatCard, i6.RadioControlValueAccessor, i5.NgForOf, i8.MatTooltip],\n    pipes: [i5.AsyncPipe],\n    styles: [\".tab[_ngcontent-%COMP%]{overflow:hidden}.pointer[_ngcontent-%COMP%]{margin:.2em;cursor:pointer}.action_menu[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style-type:none;padding-left:2rem;margin:0;border-bottom:1px solid #ccc;overflow:hidden}.action_menu[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{float:left}button[_ngcontent-%COMP%]{width:100%}.action_menu[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{display:block;color:#eee;text-align:center;padding:.31rem;text-decoration:none}.action_menu[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]:hover{background-color:#ccc}.table-row[_ngcontent-%COMP%]{padding:.2em;background-color:#f8f9fa;border-radius:10px;box-shadow:3px 0 0 2px #f8f9fa}.bubble[_ngcontent-%COMP%]{float:right;margin:1em;border:1px solid #2196F3;padding:.6em;border-radius:14px;width:77px;text-align:center}.header-experiment[_ngcontent-%COMP%]{font-size:large;font-weight:bold;padding-top:.3em;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}\"]\n  });\n  return ExperimentComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}