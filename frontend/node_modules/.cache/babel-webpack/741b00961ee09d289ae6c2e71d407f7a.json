{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../auth.service\";\nimport * as i3 from \"../../sphere-auth.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\n\nfunction SphereLoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Username is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SphereLoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SphereLoginComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.errorMessage, \" \");\n  }\n}\n\nfunction SphereLoginComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.successMessage, \" \");\n  }\n}\n\nfunction SphereLoginComponent_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 20);\n  }\n}\n\nexport let SphereLoginComponent = /*#__PURE__*/(() => {\n  class SphereLoginComponent {\n    constructor(formBuilder, authService, sphereAuthService, router) {\n      this.formBuilder = formBuilder;\n      this.authService = authService;\n      this.sphereAuthService = sphereAuthService;\n      this.router = router;\n      this.isLoading = false;\n      this.errorMessage = '';\n      this.successMessage = '';\n      this.sphereLoginForm = this.formBuilder.group({\n        username: ['', [Validators.required]],\n        password: ['', [Validators.required]]\n      });\n    }\n\n    ngOnInit() {\n      // Check if already authenticated to SPHERE\n      if (this.sphereAuthService.isSphereAuthenticated()) {\n        this.successMessage = 'Already authenticated to SPHERE';\n      }\n    }\n\n    onSubmit() {\n      if (this.sphereLoginForm.valid) {\n        this.isLoading = true;\n        this.errorMessage = '';\n        this.successMessage = '';\n        const {\n          username,\n          password\n        } = this.sphereLoginForm.value;\n        this.authService.loginWithSphere(username, password).then(response => {\n          this.isLoading = false;\n          this.successMessage = 'SPHERE login successful! Token received.';\n          console.log('SPHERE login response:', response); // Redirect to home or dashboard after successful login\n\n          setTimeout(() => {\n            this.router.navigate(['/']);\n          }, 2000);\n        }).catch(error => {\n          this.isLoading = false;\n          this.errorMessage = `SPHERE login failed: ${error.message || error}`;\n          console.error('SPHERE login error:', error);\n        });\n      } else {\n        this.errorMessage = 'Please fill in all required fields';\n      }\n    }\n\n    onReset() {\n      this.sphereLoginForm.reset();\n      this.errorMessage = '';\n      this.successMessage = '';\n    } // Test method to check current authentication state\n\n\n    checkSphereAuth() {\n      const isAuth = this.sphereAuthService.isSphereAuthenticated();\n      const token = this.sphereAuthService.getSphereToken();\n      console.log('SPHERE Authentication Status:', isAuth);\n      console.log('SPHERE Token:', token ? `${token.substring(0, 20)}...` : 'None');\n      this.successMessage = `SPHERE Auth: ${isAuth ? 'Authenticated' : 'Not Authenticated'}`;\n    }\n\n  }\n\n  SphereLoginComponent.ɵfac = function SphereLoginComponent_Factory(t) {\n    return new (t || SphereLoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.SphereAuthService), i0.ɵɵdirectiveInject(i4.Router));\n  };\n\n  SphereLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SphereLoginComponent,\n    selectors: [[\"app-sphere-login\"]],\n    decls: 27,\n    vars: 14,\n    consts: [[1, \"sphere-login-container\"], [1, \"sphere-login-card\"], [1, \"subtitle\"], [1, \"sphere-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", \"placeholder\", \"Enter your SPHERE username\", 1, \"form-control\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter your SPHERE password\", 1, \"form-control\"], [\"class\", \"alert alert-error\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [1, \"button-group\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-info\", 3, \"disabled\", \"click\"], [1, \"error-message\"], [1, \"alert\", \"alert-error\"], [1, \"alert\", \"alert-success\"], [1, \"spinner\"]],\n    template: function SphereLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"h2\");\n        i0.ɵɵtext(3, \"SPHERE Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\", 2);\n        i0.ɵɵtext(5, \"Connect to MergeTB Portal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function SphereLoginComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelementStart(8, \"label\", 5);\n        i0.ɵɵtext(9, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵtemplate(11, SphereLoginComponent_div_11_Template, 2, 0, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 4);\n        i0.ɵɵelementStart(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵtemplate(16, SphereLoginComponent_div_16_Template, 2, 0, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, SphereLoginComponent_div_17_Template, 2, 1, \"div\", 10);\n        i0.ɵɵtemplate(18, SphereLoginComponent_div_18_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementStart(19, \"div\", 12);\n        i0.ɵɵelementStart(20, \"button\", 13);\n        i0.ɵɵtemplate(21, SphereLoginComponent_span_21_Template, 1, 0, \"span\", 14);\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function SphereLoginComponent_Template_button_click_23_listener() {\n          return ctx.onReset();\n        });\n        i0.ɵɵtext(24, \" Reset \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function SphereLoginComponent_Template_button_click_25_listener() {\n          return ctx.checkSphereAuth();\n        });\n        i0.ɵɵtext(26, \" Check Auth Status \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.sphereLoginForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"error\", ((tmp_1_0 = ctx.sphereLoginForm.get(\"username\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.sphereLoginForm.get(\"username\")) == null ? null : tmp_1_0.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.sphereLoginForm.get(\"username\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.sphereLoginForm.get(\"username\")) == null ? null : tmp_2_0.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"error\", ((tmp_3_0 = ctx.sphereLoginForm.get(\"password\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.sphereLoginForm.get(\"password\")) == null ? null : tmp_3_0.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.sphereLoginForm.get(\"password\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.sphereLoginForm.get(\"password\")) == null ? null : tmp_4_0.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.isLoading || ctx.sphereLoginForm.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isLoading ? \"Logging in...\" : \"Login to SPHERE\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.isLoading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.isLoading);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i5.NgIf],\n    styles: [\".sphere-login-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;min-height:80vh;background-color:#f5f5f5;padding:20px}.sphere-login-card[_ngcontent-%COMP%]{background:white;border-radius:8px;box-shadow:0 4px 6px #0000001a;padding:2rem;width:100%;max-width:500px}h2[_ngcontent-%COMP%]{color:#333;text-align:center;margin-bottom:.5rem;font-size:1.8rem}.subtitle[_ngcontent-%COMP%]{text-align:center;color:#666;margin-bottom:2rem;font-size:1rem}.sphere-form[_ngcontent-%COMP%]{margin-bottom:2rem}.form-group[_ngcontent-%COMP%]{margin-bottom:1.5rem}label[_ngcontent-%COMP%]{display:block;margin-bottom:.5rem;color:#333;font-weight:500}.form-control[_ngcontent-%COMP%]{width:100%;padding:.75rem;border:2px solid #ddd;border-radius:4px;font-size:1rem;transition:border-color .3s ease;box-sizing:border-box}.form-control[_ngcontent-%COMP%]:focus{outline:none;border-color:#007bff}.form-control.error[_ngcontent-%COMP%]{border-color:#dc3545}.error-message[_ngcontent-%COMP%]{color:#dc3545;font-size:.875rem;margin-top:.25rem}.alert[_ngcontent-%COMP%]{padding:.75rem;border-radius:4px;margin-bottom:1rem}.alert.alert-error[_ngcontent-%COMP%]{background-color:#f8d7da;color:#721c24;border:1px solid #f5c6cb}.alert.alert-success[_ngcontent-%COMP%]{background-color:#d4edda;color:#155724;border:1px solid #c3e6cb}.button-group[_ngcontent-%COMP%]{display:flex;grid-gap:1rem;gap:1rem;flex-wrap:wrap;justify-content:center}.btn[_ngcontent-%COMP%]{padding:.75rem 1.5rem;border:none;border-radius:4px;font-size:1rem;cursor:pointer;transition:background-color .3s ease;display:flex;align-items:center;grid-gap:.5rem;gap:.5rem;min-width:120px;justify-content:center}.btn[_ngcontent-%COMP%]:disabled{opacity:.6;cursor:not-allowed}.btn.btn-primary[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.btn.btn-primary[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#0056b3}.btn.btn-secondary[_ngcontent-%COMP%]{background-color:#6c757d;color:#fff}.btn.btn-secondary[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#545b62}.btn.btn-info[_ngcontent-%COMP%]{background-color:#17a2b8;color:#fff}.btn.btn-info[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#117a8b}.spinner[_ngcontent-%COMP%]{width:16px;height:16px;border:2px solid #ffffff;border-top:2px solid transparent;border-radius:50%;animation:spin 1s linear infinite}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.info-section[_ngcontent-%COMP%]{background-color:#f8f9fa;border:1px solid #dee2e6;border-radius:4px;padding:1rem;margin-top:2rem}.info-section[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-bottom:.5rem;color:#333}.info-section[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{margin:.5rem 0 0 1rem;padding-left:1rem}.info-section[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{color:#666;margin-bottom:.25rem;font-size:.9rem}@media (max-width: 768px){.sphere-login-card[_ngcontent-%COMP%]{padding:1.5rem;margin:10px}.button-group[_ngcontent-%COMP%]{flex-direction:column}.button-group[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{width:100%}h2[_ngcontent-%COMP%]{font-size:1.5rem}}\"]\n  });\n  return SphereLoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}